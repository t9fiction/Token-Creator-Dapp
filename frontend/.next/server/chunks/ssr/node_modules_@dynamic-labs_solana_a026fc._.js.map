{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/package.js"],"sourcesContent":["'use client'\nvar version = \"3.9.4\";\n\nexport { version };\n"],"names":[],"mappings":";;;AAAA;AACA,IAAI,UAAU","ignoreList":[0]}},
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/_virtual/_tslib.js"],"sourcesContent":["'use client'\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nexport { __awaiter };\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;;;;;;8EAa8E,GAE9E,SAAS,UAAU,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;IAChD,SAAS,MAAM,KAAK;QAAI,OAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,OAAO;YAAI,QAAQ;QAAQ;IAAI;IAC3G,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,EAAE,SAAU,OAAO,EAAE,MAAM;QACrD,SAAS,UAAU,KAAK;YAAI,IAAI;gBAAE,KAAK,UAAU,IAAI,CAAC;YAAS,EAAE,OAAO,GAAG;gBAAE,OAAO;YAAI;QAAE;QAC1F,SAAS,SAAS,KAAK;YAAI,IAAI;gBAAE,KAAK,SAAS,CAAC,QAAQ,CAAC;YAAS,EAAE,OAAO,GAAG;gBAAE,OAAO;YAAI;QAAE;QAC7F,SAAS,KAAK,MAAM;YAAI,OAAO,IAAI,GAAG,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,IAAI,CAAC,WAAW;QAAW;QAC7G,KAAK,CAAC,YAAY,UAAU,KAAK,CAAC,SAAS,cAAc,EAAE,CAAC,EAAE,IAAI;IACtE;AACJ;AAEA,OAAO,oBAAoB,aAAa,kBAAkB,SAAU,KAAK,EAAE,UAAU,EAAE,OAAO;IAC1F,IAAI,IAAI,IAAI,MAAM;IAClB,OAAO,EAAE,IAAI,GAAG,mBAAmB,EAAE,KAAK,GAAG,OAAO,EAAE,UAAU,GAAG,YAAY;AACnF","ignoreList":[0]}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/utils/isSignedMessage.js"],"sourcesContent":["'use client'\nconst isSignedMessage = (message) => Boolean(message) && message.signature !== undefined;\n\nexport { isSignedMessage };\n"],"names":[],"mappings":";;;AAAA;AACA,MAAM,kBAAkB,CAAC,UAAY,QAAQ,YAAY,QAAQ,SAAS,KAAK","ignoreList":[0]}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/utils/findWalletProviderFromWalletStandard/findWalletProviderFromWalletStandard.js"],"sourcesContent":["'use client'\nimport { getWallets } from '@wallet-standard/app';\nimport { get } from '@dynamic-labs/utils';\n\nconst findWalletProviderFromWalletStandard = (injectConfig) => {\n    const { walletStandardLocators } = injectConfig;\n    if (!walletStandardLocators || walletStandardLocators.length === 0) {\n        return undefined;\n    }\n    const wallets = getWallets().get();\n    return walletStandardLocators.reduce((provider, walletStandardLocator) => {\n        /**\n         * Return early if the provider is already found\n         */\n        if (provider) {\n            return provider;\n        }\n        const wallet = wallets.find((w) => w.name === walletStandardLocator.name);\n        if (!wallet)\n            return undefined;\n        return get(wallet, walletStandardLocator.locator);\n    }, undefined);\n};\n\nexport { findWalletProviderFromWalletStandard };\n"],"names":[],"mappings":";;;AAEA;AADA;AACA;AAFA;;;AAIA,MAAM,uCAAuC,CAAC;IAC1C,MAAM,EAAE,sBAAsB,EAAE,GAAG;IACnC,IAAI,CAAC,0BAA0B,uBAAuB,MAAM,KAAK,GAAG;QAChE,OAAO;IACX;IACA,MAAM,UAAU,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,IAAI,GAAG;IAChC,OAAO,uBAAuB,MAAM,CAAC,CAAC,UAAU;QAC5C;;SAEC,GACD,IAAI,UAAU;YACV,OAAO;QACX;QACA,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,sBAAsB,IAAI;QACxE,IAAI,CAAC,QACD,OAAO;QACX,OAAO,CAAA,GAAA,+JAAA,CAAA,MAAG,AAAD,EAAE,QAAQ,sBAAsB,OAAO;IACpD,GAAG;AACP","ignoreList":[0]}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/solProviderHelper.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../_virtual/_tslib.js';\nimport { getProvidersFromWindow, bufferToBase64 } from '@dynamic-labs/utils';\nimport { ProviderLookup, logger } from '@dynamic-labs/wallet-connector-core';\nimport { isSignedMessage } from './utils/isSignedMessage.js';\nimport { findWalletProviderFromWalletStandard } from './utils/findWalletProviderFromWalletStandard/findWalletProviderFromWalletStandard.js';\n\nclass SolProviderHelper {\n    constructor(wallet) {\n        this.wallet = wallet;\n    }\n    getInjectedConfig() {\n        if (!this.wallet || !this.wallet.injectedConfig)\n            return;\n        const { injectedConfig } = this.wallet;\n        return injectedConfig.find((c) => c.chain === 'sol');\n    }\n    getInstalledProvider() {\n        const config = this.getInjectedConfig();\n        if (!config || !config.extensionLocators) {\n            return undefined;\n        }\n        return this.installedProviderLookup(config.extensionLocators);\n    }\n    installedProviders() {\n        var _a, _b;\n        const config = this.getInjectedConfig();\n        if (!config)\n            return [];\n        const providers = [];\n        if (config.windowLocations) {\n            for (const windowLocation of config.windowLocations) {\n                const foundProviders = getProvidersFromWindow(windowLocation);\n                if (foundProviders && foundProviders.length) {\n                    providers.push(...foundProviders);\n                }\n            }\n        }\n        // We should only include the `window.solana` provider\n        // when extensionLocators are provided\n        if (config.extensionLocators.length !== 0 && window.solana) {\n            if (!window.solana.providers) {\n                providers.push(window.solana);\n            }\n            else {\n                window.solana.providers.forEach((provider) => providers.push(provider));\n            }\n        }\n        if (((_b = (_a = config.walletStandardLocators) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0) {\n            const walletStandardProvider = findWalletProviderFromWalletStandard(config);\n            if (walletStandardProvider) {\n                providers.push(walletStandardProvider);\n            }\n        }\n        return providers;\n    }\n    installedProviderLookup(extensionLocators) {\n        const allInstalledProviders = this.installedProviders();\n        // No need to search through the window.solana providers if the\n        // wallet doesn't have extensionLocators\n        if (extensionLocators.length === 0) {\n            return allInstalledProviders[0];\n        }\n        return ProviderLookup(allInstalledProviders, extensionLocators);\n    }\n    findProvider() {\n        return this.getInstalledProvider();\n    }\n    isInstalledHelper() {\n        return this.findProvider() !== undefined;\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const provider = this.findProvider();\n            if (!provider) {\n                return undefined;\n            }\n            yield provider.connect();\n            return (_a = provider.publicKey) === null || _a === void 0 ? void 0 : _a.toString();\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.findProvider();\n            if (!provider)\n                return undefined;\n            try {\n                if (!provider.isConnected) {\n                    yield provider.connect();\n                }\n                return provider;\n            }\n            catch (err) {\n                return undefined;\n            }\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const walletAddress = yield this.getAddress();\n            if (!walletAddress)\n                return undefined;\n            const provider = this.findProvider();\n            if (!provider)\n                return undefined;\n            const encodedMessage = new TextEncoder().encode(messageToSign);\n            const signedMessage = yield provider.signMessage(encodedMessage, 'utf8');\n            if (!signedMessage)\n                return undefined;\n            return bufferToBase64(isSignedMessage(signedMessage) ? signedMessage.signature : signedMessage);\n        });\n    }\n    handleAccountChange(walletConnector, web3Provider, address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            if (!address) {\n                yield (web3Provider === null || web3Provider === void 0 ? void 0 : web3Provider.connect());\n                if ((_a = web3Provider === null || web3Provider === void 0 ? void 0 : web3Provider.publicKey) === null || _a === void 0 ? void 0 : _a.toString()) {\n                    walletConnector.emit('accountChange', {\n                        accounts: [web3Provider.publicKey.toString()],\n                    });\n                }\n                return;\n            }\n            if (address.toString()) {\n                walletConnector.emit('accountChange', { accounts: [address.toString()] });\n            }\n        });\n    }\n    _setupEventListeners(walletConnector) {\n        const provider = this.findProvider();\n        if (!provider) {\n            logger.warn('Provider not found', {\n                connector: walletConnector,\n            });\n            return;\n        }\n        if (!provider.on) {\n            logger.warn('Provider does not support event listeners', {\n                connector: walletConnector,\n                provider,\n            });\n            return;\n        }\n        provider.on('accountChanged', (publicKey) => this.handleAccountChange(walletConnector, provider, publicKey));\n        provider.on('disconnect', () => walletConnector.emit('disconnect'));\n    }\n    _teardownEventListeners() {\n        const provider = this.findProvider();\n        if (!provider)\n            return;\n        provider.removeAllListeners();\n    }\n    getConnectedAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const provider = this.findProvider();\n            if (!provider)\n                return [];\n            let connectionResult;\n            try {\n                if (!provider.isConnected) {\n                    connectionResult = yield provider.connect({ onlyIfTrusted: true });\n                }\n            }\n            catch (e) {\n                return [];\n            }\n            const address = connectionResult === null || connectionResult === void 0 ? void 0 : connectionResult.address;\n            const publicKey = (_a = connectionResult === null || connectionResult === void 0 ? void 0 : connectionResult.publicKey) !== null && _a !== void 0 ? _a : (_b = provider.publicKey) === null || _b === void 0 ? void 0 : _b.toString();\n            if (address)\n                return [address];\n            else if (publicKey)\n                return [publicKey === null || publicKey === void 0 ? void 0 : publicKey.toString()];\n            else\n                return [];\n        });\n    }\n}\n\nexport { SolProviderHelper };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/errors/SignMessageNotSupportedError.js"],"sourcesContent":["'use client'\nimport { NotSupportedError } from '@dynamic-labs/utils';\n\nclass SignMessageNotSupportedError extends NotSupportedError {\n    constructor(walletName) {\n        super(`Message signing is currently not supported on ${walletName} hardware wallet.\n    You can use signMessageViaTransaction instead to achieve similar functionality\n    by signing a transaction with a memo instruction.\n    You can read more about it here https://github.com/solana-labs/solana/issues/21366`);\n    }\n}\n\nexport { SignMessageNotSupportedError };\n"],"names":[],"mappings":";;;AACA;AAAA;AADA;;AAGA,MAAM,qCAAqC,gLAAA,CAAA,oBAAiB;IACxD,YAAY,UAAU,CAAE;QACpB,KAAK,CAAC,CAAC,8CAA8C,EAAE,WAAW;;;sFAGY,CAAC;IACnF;AACJ","ignoreList":[0]}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/injected/InjectedWalletBase.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { findWalletBookWallet } from '@dynamic-labs/wallet-book';\nimport { isMobile, template } from '@dynamic-labs/utils';\nimport { SolanaWalletConnector, SolanaUiTransaction } from '@dynamic-labs/solana-core';\nimport { SolProviderHelper } from '../solProviderHelper.js';\nimport { SignMessageNotSupportedError } from '../errors/SignMessageNotSupportedError.js';\n\nclass InjectedWalletBase extends SolanaWalletConnector {\n    getSolProviderHelper() {\n        if (!this.wallet) {\n            this.wallet = findWalletBookWallet(this.walletBook, this.key);\n        }\n        if (this.wallet && !this.solProviderHelper) {\n            this.solProviderHelper = new SolProviderHelper(this.wallet);\n        }\n        return this.solProviderHelper;\n    }\n    getProvider() {\n        var _a;\n        return (_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a.getInstalledProvider();\n    }\n    setupEventListeners() {\n        var _a;\n        (_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a._setupEventListeners(this);\n    }\n    teardownEventListeners() {\n        var _a;\n        (_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a._teardownEventListeners();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a.connect());\n        });\n    }\n    getSigner() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a.connect();\n        });\n    }\n    createUiTransaction(from) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.validateActiveWallet(from);\n            const transaction = new SolanaUiTransaction({\n                connection: this.getWalletClient(),\n                from,\n                onSubmit: (transaction) => __awaiter(this, void 0, void 0, function* () {\n                    var _a;\n                    if (!transaction)\n                        return;\n                    const signer = yield this.getSigner();\n                    if (!signer)\n                        throw new Error('Signer not found');\n                    const blockhash = yield this.getWalletClient().getLatestBlockhash();\n                    if ('version' in transaction) {\n                        transaction.message.recentBlockhash =\n                            blockhash.blockhash;\n                    }\n                    else {\n                        const userAddress = yield this.getAddress();\n                        if (!userAddress)\n                            throw new Error('User address not found');\n                        transaction.recentBlockhash = blockhash.blockhash;\n                        transaction.feePayer =\n                            (_a = transaction.feePayer) !== null && _a !== void 0 ? _a : new PublicKey(userAddress);\n                    }\n                    return (yield signer.signAndSendTransaction(transaction)).signature;\n                }),\n            });\n            return transaction;\n        });\n    }\n    isInstalledOnBrowser() {\n        var _a;\n        return Boolean((_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a.isInstalledHelper());\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            if (!this.isInstalledOnBrowser()) {\n                if (isMobile() &&\n                    ((_a = this.wallet) === null || _a === void 0 ? void 0 : _a.mobile) &&\n                    this.wallet.mobile.inAppBrowser &&\n                    this.mobileExperience === 'in-app-browser') {\n                    const inAppBrowserCompiledTemplate = template(this.wallet.mobile.inAppBrowser);\n                    const deepLink = inAppBrowserCompiledTemplate({\n                        encodedDappURI: encodeURIComponent(window.location.toString()),\n                    });\n                    window.location.assign(deepLink);\n                }\n                return;\n            }\n            return (_b = this.getSolProviderHelper()) === null || _b === void 0 ? void 0 : _b.getAddress();\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const walletAddress = yield ((_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a.getAddress());\n            if (walletAddress && this.isLedgerAddress(walletAddress)) {\n                throw new SignMessageNotSupportedError(this.name);\n            }\n            return (_b = this.getSolProviderHelper()) === null || _b === void 0 ? void 0 : _b.signMessage(messageToSign);\n        });\n    }\n    getConnectedAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            return (_b = (_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a.getConnectedAccounts()) !== null && _b !== void 0 ? _b : [];\n        });\n    }\n}\n\nexport { InjectedWalletBase };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/phantomRedirect/utils.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport nacl from 'tweetnacl';\nimport bs58 from 'bs58';\n\nconst buildUrl = (path, params) => `https://phantom.app/ul/v1/${path}?${params.toString()}`;\nconst decryptPayload = (data, nonce, sharedSecret) => {\n    const decryptedData = nacl.box.open.after(bs58.decode(data), bs58.decode(nonce), sharedSecret);\n    if (!decryptedData) {\n        throw new Error('Unable to decrypt data');\n    }\n    return JSON.parse(Buffer.from(decryptedData).toString('utf8'));\n};\nconst encryptPayload = (payload, sharedSecret) => {\n    const nonce = nacl.randomBytes(24);\n    const encryptedPayload = nacl.box.after(Buffer.from(JSON.stringify(payload)), nonce, sharedSecret);\n    return [nonce, encryptedPayload];\n};\nconst GENESIS_HASHES = {\n    '4uhcVJyU9pJkvQyS88uRDiswHXSCkY3zQawwpjk2NsNY': 'testnet',\n    '5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d': 'mainnet-beta',\n    EtWTRABZaYq6iMfeYKouRu166VU2xqa1wcaWoxPkrZBG: 'devnet',\n};\nconst fetchCluster = (rpc) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const { result } = yield (yield fetch(rpc, {\n            body: JSON.stringify({\n                id: 1,\n                jsonrpc: '2.0',\n                method: 'getGenesisHash',\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n        })).json();\n        return GENESIS_HASHES[result];\n    }\n    catch (err) {\n        return 'mainnet-beta';\n    }\n});\n\nexport { buildUrl, decryptPayload, encryptPayload, fetchCluster };\n"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;AAHA;;;;AAKA,MAAM,WAAW,CAAC,MAAM,SAAW,CAAC,0BAA0B,EAAE,KAAK,CAAC,EAAE,OAAO,QAAQ,IAAI;AAC3F,MAAM,iBAAiB,CAAC,MAAM,OAAO;IACjC,MAAM,gBAAgB,yIAAA,CAAA,UAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,6HAAA,CAAA,UAAI,CAAC,MAAM,CAAC,OAAO,6HAAA,CAAA,UAAI,CAAC,MAAM,CAAC,QAAQ;IACjF,IAAI,CAAC,eAAe;QAChB,MAAM,IAAI,MAAM;IACpB;IACA,OAAO,KAAK,KAAK,CAAC,OAAO,IAAI,CAAC,eAAe,QAAQ,CAAC;AAC1D;AACA,MAAM,iBAAiB,CAAC,SAAS;IAC7B,MAAM,QAAQ,yIAAA,CAAA,UAAI,CAAC,WAAW,CAAC;IAC/B,MAAM,mBAAmB,yIAAA,CAAA,UAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,SAAS,CAAC,WAAW,OAAO;IACrF,OAAO;QAAC;QAAO;KAAiB;AACpC;AACA,MAAM,iBAAiB;IACnB,gDAAgD;IAChD,gDAAgD;IAChD,8CAA8C;AAClD;AACA,MAAM,eAAe,CAAC,MAAQ,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;QAC5D,IAAI;YACA,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,MAAM,KAAK;gBACvC,MAAM,KAAK,SAAS,CAAC;oBACjB,IAAI;oBACJ,SAAS;oBACT,QAAQ;gBACZ;gBACA,SAAS;oBACL,gBAAgB;gBACpB;gBACA,QAAQ;YACZ,EAAE,EAAE,IAAI;YACR,OAAO,cAAc,CAAC,OAAO;QACjC,EACA,OAAO,KAAK;YACR,OAAO;QACX;IACJ","ignoreList":[0]}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/phantomRedirect/storage.js"],"sourcesContent":["'use client'\nconst storage = {\n    address: {\n        get: () => { var _a; return (_a = localStorage.getItem('dynamic_phantom_wallet_address')) !== null && _a !== void 0 ? _a : undefined; },\n        remove: () => {\n            localStorage.removeItem('dynamic_phantom_wallet_address');\n        },\n        set: (address) => {\n            localStorage.setItem('dynamic_phantom_wallet_address', address.toString());\n        },\n    },\n    encryptionPublicKey: {\n        get: () => {\n            const rawPublicKey = localStorage.getItem('dynamic_phantom_public_key');\n            if (!rawPublicKey) {\n                return undefined;\n            }\n            return new Uint8Array(JSON.parse(rawPublicKey));\n        },\n        remove: () => {\n            localStorage.removeItem('dynamic_phantom_public_key');\n        },\n        set: (publicKey) => {\n            localStorage.setItem('dynamic_phantom_public_key', JSON.stringify([...publicKey]));\n        },\n    },\n    encryptionSecretKey: {\n        get: () => {\n            const rawSecretKey = localStorage.getItem('dynamic_phantom_secret_key');\n            if (!rawSecretKey) {\n                return undefined;\n            }\n            return new Uint8Array(JSON.parse(rawSecretKey));\n        },\n        remove: () => {\n            localStorage.removeItem('dynamic_phantom_secret_key');\n        },\n        set: (secretKey) => {\n            localStorage.setItem('dynamic_phantom_secret_key', JSON.stringify([...secretKey]));\n        },\n    },\n    message: {\n        get: () => { var _a; return (_a = localStorage.getItem('dynamic_phantom_message_to_sign')) !== null && _a !== void 0 ? _a : undefined; },\n        remove: () => {\n            localStorage.removeItem('dynamic_phantom_message_to_sign');\n        },\n        set: (message) => {\n            localStorage.setItem('dynamic_phantom_message_to_sign', message);\n        },\n    },\n    method: {\n        get: () => { var _a; return (_a = localStorage.getItem('dynamic_phantom_method')) !== null && _a !== void 0 ? _a : undefined; },\n        remove: () => {\n            localStorage.removeItem('dynamic_phantom_method');\n        },\n        set: (method) => {\n            localStorage.setItem('dynamic_phantom_method', method);\n        },\n    },\n    session: {\n        get: () => { var _a; return (_a = localStorage.getItem('dynamic_phantom_session')) !== null && _a !== void 0 ? _a : undefined; },\n        remove: () => {\n            localStorage.removeItem('dynamic_phantom_session');\n        },\n        set: (session) => {\n            localStorage.setItem('dynamic_phantom_session', session);\n        },\n    },\n    sharedSecret: {\n        get: () => {\n            const rawSharedSecret = localStorage.getItem('dynamic_phantom_shared_secret');\n            if (!rawSharedSecret) {\n                return undefined;\n            }\n            return new Uint8Array(JSON.parse(rawSharedSecret));\n        },\n        remove: () => {\n            localStorage.removeItem('dynamic_phantom_shared_secret');\n        },\n        set: (sharedSecret) => {\n            localStorage.setItem('dynamic_phantom_shared_secret', JSON.stringify([...sharedSecret]));\n        },\n    },\n};\nconst clearStorage = () => {\n    for (const key in storage) {\n        storage[key].remove();\n    }\n};\n\nexport { clearStorage, storage };\n"],"names":[],"mappings":";;;;AAAA;AACA,MAAM,UAAU;IACZ,SAAS;QACL,KAAK;YAAQ,IAAI;YAAI,OAAO,CAAC,KAAK,aAAa,OAAO,CAAC,iCAAiC,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;QAAW;QACtI,QAAQ;YACJ,aAAa,UAAU,CAAC;QAC5B;QACA,KAAK,CAAC;YACF,aAAa,OAAO,CAAC,kCAAkC,QAAQ,QAAQ;QAC3E;IACJ;IACA,qBAAqB;QACjB,KAAK;YACD,MAAM,eAAe,aAAa,OAAO,CAAC;YAC1C,IAAI,CAAC,cAAc;gBACf,OAAO;YACX;YACA,OAAO,IAAI,WAAW,KAAK,KAAK,CAAC;QACrC;QACA,QAAQ;YACJ,aAAa,UAAU,CAAC;QAC5B;QACA,KAAK,CAAC;YACF,aAAa,OAAO,CAAC,8BAA8B,KAAK,SAAS,CAAC;mBAAI;aAAU;QACpF;IACJ;IACA,qBAAqB;QACjB,KAAK;YACD,MAAM,eAAe,aAAa,OAAO,CAAC;YAC1C,IAAI,CAAC,cAAc;gBACf,OAAO;YACX;YACA,OAAO,IAAI,WAAW,KAAK,KAAK,CAAC;QACrC;QACA,QAAQ;YACJ,aAAa,UAAU,CAAC;QAC5B;QACA,KAAK,CAAC;YACF,aAAa,OAAO,CAAC,8BAA8B,KAAK,SAAS,CAAC;mBAAI;aAAU;QACpF;IACJ;IACA,SAAS;QACL,KAAK;YAAQ,IAAI;YAAI,OAAO,CAAC,KAAK,aAAa,OAAO,CAAC,kCAAkC,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;QAAW;QACvI,QAAQ;YACJ,aAAa,UAAU,CAAC;QAC5B;QACA,KAAK,CAAC;YACF,aAAa,OAAO,CAAC,mCAAmC;QAC5D;IACJ;IACA,QAAQ;QACJ,KAAK;YAAQ,IAAI;YAAI,OAAO,CAAC,KAAK,aAAa,OAAO,CAAC,yBAAyB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;QAAW;QAC9H,QAAQ;YACJ,aAAa,UAAU,CAAC;QAC5B;QACA,KAAK,CAAC;YACF,aAAa,OAAO,CAAC,0BAA0B;QACnD;IACJ;IACA,SAAS;QACL,KAAK;YAAQ,IAAI;YAAI,OAAO,CAAC,KAAK,aAAa,OAAO,CAAC,0BAA0B,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;QAAW;QAC/H,QAAQ;YACJ,aAAa,UAAU,CAAC;QAC5B;QACA,KAAK,CAAC;YACF,aAAa,OAAO,CAAC,2BAA2B;QACpD;IACJ;IACA,cAAc;QACV,KAAK;YACD,MAAM,kBAAkB,aAAa,OAAO,CAAC;YAC7C,IAAI,CAAC,iBAAiB;gBAClB,OAAO;YACX;YACA,OAAO,IAAI,WAAW,KAAK,KAAK,CAAC;QACrC;QACA,QAAQ;YACJ,aAAa,UAAU,CAAC;QAC5B;QACA,KAAK,CAAC;YACF,aAAa,OAAO,CAAC,iCAAiC,KAAK,SAAS,CAAC;mBAAI;aAAa;QAC1F;IACJ;AACJ;AACA,MAAM,eAAe;IACjB,IAAK,MAAM,OAAO,QAAS;QACvB,OAAO,CAAC,IAAI,CAAC,MAAM;IACvB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 635, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/phantomRedirect/PhantomRedirect.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { SolanaWalletConnector } from '@dynamic-labs/solana-core';\nimport { fetchCluster, buildUrl, decryptPayload, encryptPayload } from './utils.js';\nimport { storage, clearStorage } from './storage.js';\n\nclass PhantomRedirect extends SolanaWalletConnector {\n    constructor(props) {\n        super(Object.assign({}, props));\n        this.name = 'Phantom';\n        this.overrideKey = 'phantom';\n    }\n    getMethod() {\n        throw new Error('Method not implemented.');\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const address = storage.address.get();\n            if (address) {\n                return address;\n            }\n            yield this.connect();\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            // Generate a new key pair\n            const keyPair = nacl.box.keyPair();\n            storage.encryptionPublicKey.set(keyPair.publicKey);\n            storage.encryptionSecretKey.set(keyPair.secretKey);\n            const isLocalHost = window.location.href.includes('localhost') ||\n                window.location.href.includes('0.0.0.0') ||\n                window.location.href.includes('127.0.0.1');\n            const rpc = (_b = (_a = this.solNetworks[0].privateCustomerRpcUrls) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : this.solNetworks[0].rpcUrls[0];\n            const params = new URLSearchParams({\n                app_url: isLocalHost ? 'https://demo.dynamic.xyz' : window.location.href,\n                cluster: yield fetchCluster(rpc),\n                dapp_encryption_public_key: bs58.encode(keyPair.publicKey),\n                redirect_link: window.location.href,\n            });\n            const url = buildUrl('connect', params);\n            window.location.href = url;\n        });\n    }\n    getSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = new URLSearchParams(window.location.search);\n            const { data, nonce, phantom_encryption_public_key: phantomEncryptionPublicKey, encryptionSecretKey, } = this.getInputsOrThrow('getSession', ['data', 'nonce', 'phantom_encryption_public_key'], ['encryptionSecretKey']);\n            const sharedSecret = nacl.box.before(bs58.decode(phantomEncryptionPublicKey), encryptionSecretKey);\n            storage.sharedSecret.set(sharedSecret);\n            const connectData = decryptPayload(data, nonce, sharedSecret);\n            storage.session.set(connectData.session);\n            storage.address.set(new PublicKey(connectData.public_key));\n            params.delete('phantom_encryption_public_key');\n            params.delete('data');\n            params.delete('nonce');\n            history.replaceState(null, '', `${window.location.origin}${window.location.pathname}?${params.toString()}`);\n            return connectData.public_key;\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { session, sharedSecret, encryptionPublicKey } = this.getInputsOrThrow('signMessage', [], ['session', 'sharedSecret', 'encryptionPublicKey']);\n            storage.message.set(messageToSign);\n            const payload = {\n                message: bs58.encode(Buffer.from(messageToSign)),\n                session,\n            };\n            const [nonce, encryptedPayload] = encryptPayload(payload, sharedSecret);\n            const params = new URLSearchParams({\n                dapp_encryption_public_key: bs58.encode(encryptionPublicKey),\n                nonce: bs58.encode(nonce),\n                payload: bs58.encode(encryptedPayload),\n                redirect_link: window.location.href,\n            });\n            const url = buildUrl('signMessage', params);\n            storage.method.set('signMessage');\n            window.location.href = url;\n            // throwing this to prevent local storage from being cleared.\n            // when verifying signature, the SDK calls endSession when no\n            // signature is returned. in the case of phantom mobile, a signature\n            // is not returned from signMessage, so an error will always be thrown.\n            // this is a workaround to prevent the SDK from clearing local storage\n            // ideally we would figure out how to:\n            //   1. kick off the sign message on one tab\n            //   2. resume the process on that tab after the user signs in phantom\n            throw new Error('ignore');\n        });\n    }\n    extractSignature() {\n        const params = new URLSearchParams(window.location.search);\n        const { data, nonce, sharedSecret, message } = this.getInputsOrThrow('extractSignature', ['data', 'nonce'], ['sharedSecret', 'message']);\n        const signMessageData = decryptPayload(data, nonce, sharedSecret);\n        params.delete('data');\n        params.delete('nonce');\n        history.replaceState(null, '', `${window.location.origin}${window.location.pathname}?${params.toString()}`);\n        return {\n            message,\n            signature: signMessageData.signature,\n        };\n    }\n    extractTransactions() {\n        const params = new URLSearchParams(window.location.search);\n        const { data, nonce, sharedSecret } = this.getInputsOrThrow('extractTransactions', ['data', 'nonce'], ['sharedSecret']);\n        const signAllTransactionsData = decryptPayload(data, nonce, sharedSecret);\n        const decodedTransactions = signAllTransactionsData.transactions.map((t) => Transaction.from(bs58.decode(t)));\n        params.delete('data');\n        params.delete('nonce');\n        history.replaceState(null, '', `${window.location.origin}${window.location.pathname}?${params.toString()}`);\n        return decodedTransactions;\n    }\n    extractTransaction() {\n        const params = new URLSearchParams(window.location.search);\n        const { data, nonce, sharedSecret } = this.getInputsOrThrow('extractTransaction', ['data', 'nonce'], ['sharedSecret']);\n        const signTransactionData = decryptPayload(data, nonce, sharedSecret);\n        const decodedTransaction = Transaction.from(bs58.decode(signTransactionData.transaction));\n        params.delete('data');\n        params.delete('nonce');\n        history.replaceState(null, '', `${window.location.origin}${window.location.pathname}?${params.toString()}`);\n        return decodedTransaction;\n    }\n    consumeMethod() {\n        const method = storage.method.get();\n        storage.method.remove();\n        return method;\n    }\n    getSigner() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const address = storage.address.get();\n            if (!address) {\n                return undefined;\n            }\n            return {\n                addListener: () => {\n                    throw new Error('Not implemented');\n                },\n                connect: () => {\n                    throw new Error('Not implemented');\n                },\n                disconnect: () => {\n                    throw new Error('Not implemented');\n                },\n                emit: () => {\n                    throw new Error('Not implemented');\n                },\n                eventNames: () => {\n                    throw new Error('Not implemented');\n                },\n                isBackpack: false,\n                isBraveWallet: false,\n                isConnected: true,\n                isExodus: false,\n                isGlow: false,\n                isMagicEden: false,\n                isPhantom: true,\n                isSolflare: false,\n                listenerCount: () => {\n                    throw new Error('Not implemented');\n                },\n                listeners: () => {\n                    throw new Error('Not implemented');\n                },\n                off: () => {\n                    throw new Error('Not implemented');\n                },\n                on: () => {\n                    throw new Error('Not implemented');\n                },\n                once: () => {\n                    throw new Error('Not implemented');\n                },\n                providers: [],\n                publicKey: new PublicKey(address),\n                removeAllListeners: () => {\n                    throw new Error('Not implemented');\n                },\n                removeListener: () => {\n                    throw new Error('Not implemented');\n                },\n                signAllTransactions: (transactions) => __awaiter(this, void 0, void 0, function* () {\n                    const serializedTransactions = transactions.map((t) => bs58.encode(t.serialize({\n                        requireAllSignatures: false,\n                    })));\n                    const { session, sharedSecret, encryptionPublicKey } = this.getInputsOrThrow('signAllTransactions', [], ['session', 'sharedSecret', 'encryptionPublicKey']);\n                    const payload = {\n                        session,\n                        transactions: serializedTransactions,\n                    };\n                    const [nonce, encryptedPayload] = encryptPayload(payload, sharedSecret);\n                    const params = new URLSearchParams({\n                        dapp_encryption_public_key: bs58.encode(encryptionPublicKey),\n                        nonce: bs58.encode(nonce),\n                        payload: bs58.encode(encryptedPayload),\n                        redirect_link: window.location.href,\n                    });\n                    const url = buildUrl('signAllTransactions', params);\n                    window.location.href = url;\n                    // actual signatures will be retrieved upon redirect back to dapp\n                    return [];\n                }),\n                signAndSendTransaction: (transaction, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { session, sharedSecret, encryptionPublicKey } = this.getInputsOrThrow('signAndSendTransaction', [], ['session', 'sharedSecret', 'encryptionPublicKey']);\n                    const payload = {\n                        options,\n                        session,\n                        transaction: bs58.encode(transaction.serialize({ requireAllSignatures: false })),\n                    };\n                    const [nonce, encryptedPayload] = encryptPayload(payload, sharedSecret);\n                    const params = new URLSearchParams({\n                        dapp_encryption_public_key: bs58.encode(encryptionPublicKey),\n                        nonce: bs58.encode(nonce),\n                        payload: bs58.encode(encryptedPayload),\n                        redirect_link: window.location.href,\n                    });\n                    const url = buildUrl('signAndSendTransaction', params);\n                    storage.method.set('signAndSendTransaction');\n                    window.location.href = url;\n                    // actual signature will be retrived upon redirect back to dapp\n                    return { signature: '' };\n                }),\n                signMessage: (message) => __awaiter(this, void 0, void 0, function* () {\n                    const { session, sharedSecret, encryptionPublicKey } = this.getInputsOrThrow('signMessage', [], ['session', 'sharedSecret', 'encryptionPublicKey']);\n                    const payload = {\n                        message: bs58.encode(Buffer.from(message)),\n                        session,\n                    };\n                    const [nonce, encryptedPayload] = encryptPayload(payload, sharedSecret);\n                    const params = new URLSearchParams({\n                        dapp_encryption_public_key: bs58.encode(encryptionPublicKey),\n                        nonce: bs58.encode(nonce),\n                        payload: bs58.encode(encryptedPayload),\n                        redirect_link: window.location.href,\n                    });\n                    const url = buildUrl('signMessage', params);\n                    window.location.href = url;\n                    // actual signature will be retrived upon redirect back to dapp\n                    return { signature: Buffer.from('') };\n                }),\n                signTransaction: (transaction) => __awaiter(this, void 0, void 0, function* () {\n                    const serializedTransaction = bs58.encode(transaction.serialize({\n                        requireAllSignatures: false,\n                    }));\n                    const { session, sharedSecret, encryptionPublicKey } = this.getInputsOrThrow('signTransaction', [], ['session', 'sharedSecret', 'encryptionPublicKey']);\n                    const payload = {\n                        session,\n                        transaction: serializedTransaction,\n                    };\n                    const [nonce, encryptedPayload] = encryptPayload(payload, sharedSecret);\n                    const params = new URLSearchParams({\n                        dapp_encryption_public_key: bs58.encode(encryptionPublicKey),\n                        nonce: bs58.encode(nonce),\n                        payload: bs58.encode(encryptedPayload),\n                        redirect_link: window.location.href,\n                    });\n                    const url = buildUrl('signTransaction', params);\n                    window.location.href = url;\n                    return transaction;\n                }),\n            };\n        });\n    }\n    getConnectedAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const address = storage.address.get();\n            return address ? [address] : [];\n        });\n    }\n    endSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const address = storage.address.get();\n            const session = storage.session.get();\n            const sharedSecret = storage.sharedSecret.get();\n            const encryptionPublicKey = storage.encryptionPublicKey.get();\n            // Clear all local storage in case of any stale state\n            clearStorage();\n            // if there is no session/encrytion keys, then we don't need to disconnect\n            if (!address || !session || !encryptionPublicKey || !sharedSecret)\n                return;\n            const payload = { session };\n            const [nonce, encryptedPayload] = encryptPayload(payload, sharedSecret);\n            const params = new URLSearchParams({\n                dapp_encryption_public_key: bs58.encode(encryptionPublicKey),\n                nonce: bs58.encode(nonce),\n                payload: bs58.encode(encryptedPayload),\n                redirect_link: window.location.href,\n            });\n            const url = buildUrl('disconnect', params);\n            window.location.href = url;\n        });\n    }\n    /**\n     * Helper method to get inputs from query params and localstorage\n     *\n     * The second argument is used to read values from the query string\n     *   e.g. ['data', 'nonce'] -> params.get('data') and params.get('nonce')\n     *\n     * The third argument is used to read values from local storage\n     *   e.g. ['address', 'message'] -> storage.address.get() and storage.message.get()\n     *\n     * Throws an error if any of the inputs are unable to be found in their respective locations\n     */\n    getInputsOrThrow(methodName, queryParams, storageParams) {\n        const inputs = {};\n        const queryString = new URLSearchParams(window.location.search);\n        queryParams.forEach((param) => {\n            const value = queryString.get(param);\n            if (!value) {\n                throw new Error(`[PhantomRedirect] ${methodName} called, but required input '${param}' not found in query params`);\n            }\n            inputs[param] = value;\n        });\n        storageParams.forEach((storageParam) => {\n            const value = storage[storageParam].get();\n            if (!value) {\n                throw new Error(`[PhantomRedirect] ${methodName} called, but required input '${storageParam}' not found in local storage`);\n            }\n            inputs[storageParam] = value;\n        });\n        return inputs;\n    }\n}\n\nexport { PhantomRedirect };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1026, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1032, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/injected/PhantomInjected.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport { isMobile, handleMobileWalletRedirect } from '@dynamic-labs/utils';\nimport { findWalletBookWallet } from '@dynamic-labs/wallet-book';\nimport { InjectedWalletBase } from './InjectedWalletBase.js';\n\nclass PhantomInjected extends InjectedWalletBase {\n    constructor(opts) {\n        super(opts);\n        this.name = 'Phantom';\n        this.overrideKey = 'phantom';\n        this.wallet = findWalletBookWallet(this.walletBook, this.key);\n    }\n    getAddress() {\n        const _super = Object.create(null, {\n            getAddress: { get: () => super.getAddress }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isInstalledOnBrowser()) {\n                return _super.getAddress.call(this);\n            }\n            if (isMobile()) {\n                handleMobileWalletRedirect({\n                    nativeLink: 'phantom://browse',\n                    universalLink: 'https://phantom.app/ul/browse',\n                });\n            }\n            return undefined;\n        });\n    }\n    canGetChainAddress() {\n        var _a, _b;\n        return ((_b = (_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a.findProvider()) === null || _b === void 0 ? void 0 : _b.publicKey) !== null;\n    }\n}\n\nexport { PhantomInjected };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AADA;AADA;AAAA;AAFA;;;;;AAMA,MAAM,wBAAwB,oLAAA,CAAA,qBAAkB;IAC5C,YAAY,IAAI,CAAE;QACd,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM,GAAG,CAAA,GAAA,6LAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG;IAChE;IACA,aAAa;QACT,MAAM,SAAS,OAAO,MAAM,CAAC,MAAM;YAC/B,YAAY;gBAAE,KAAK,IAAM,KAAK,CAAC;YAAW;QAC9C;QACA,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,IAAI,IAAI,CAAC,oBAAoB,IAAI;gBAC7B,OAAO,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI;YACtC;YACA,IAAI,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,KAAK;gBACZ,CAAA,GAAA,6MAAA,CAAA,6BAA0B,AAAD,EAAE;oBACvB,YAAY;oBACZ,eAAe;gBACnB;YACJ;YACA,OAAO;QACX;IACJ;IACA,qBAAqB;QACjB,IAAI,IAAI;QACR,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,oBAAoB,EAAE,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,YAAY,EAAE,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,SAAS,MAAM;IACpK;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1079, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1085, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/Phantom.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../_virtual/_tslib.js';\nimport { findWalletBookWallet } from '@dynamic-labs/wallet-book';\nimport { isMobile } from '@dynamic-labs/utils';\nimport { SolanaWalletConnector } from '@dynamic-labs/solana-core';\nimport { PhantomRedirect } from './phantomRedirect/PhantomRedirect.js';\nimport { PhantomInjected } from './injected/PhantomInjected.js';\n\nclass Phantom extends SolanaWalletConnector {\n    constructor(opts) {\n        super(opts);\n        this.name = 'Phantom';\n        this.overrideKey = 'phantom';\n        this.wallet = findWalletBookWallet(this.walletBook, this.key);\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getMobileOrInstalledWallet().connect();\n        });\n    }\n    getSigner() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getMobileOrInstalledWallet().getSigner();\n        });\n    }\n    getMobileOrInstalledWallet() {\n        const phantomInjected = new PhantomInjected(this.constructorProps);\n        if (!isMobile() || phantomInjected.isInstalledOnBrowser()) {\n            return phantomInjected;\n        }\n        if (this.mobileExperience === 'redirect') {\n            return new PhantomRedirect(this.constructorProps);\n        }\n        else {\n            return new PhantomInjected(this.constructorProps);\n        }\n    }\n}\n\nexport { Phantom };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AACA;AAJA;;;;;;;AAQA,MAAM,gBAAgB,gMAAA,CAAA,wBAAqB;IACvC,YAAY,IAAI,CAAE;QACd,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM,GAAG,CAAA,GAAA,6LAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG;IAChE;IACA,UAAU;QACN,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,IAAI,CAAC,0BAA0B,GAAG,OAAO;QACnD;IACJ;IACA,YAAY;QACR,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,OAAO,IAAI,CAAC,0BAA0B,GAAG,SAAS;QACtD;IACJ;IACA,6BAA6B;QACzB,MAAM,kBAAkB,IAAI,iLAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,gBAAgB;QACjE,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,OAAO,gBAAgB,oBAAoB,IAAI;YACvD,OAAO;QACX;QACA,IAAI,IAAI,CAAC,gBAAgB,KAAK,YAAY;YACtC,OAAO,IAAI,wLAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,gBAAgB;QACpD,OACK;YACD,OAAO,IAAI,iLAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,gBAAgB;QACpD;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1140, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/CoinbaseSolana.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../_virtual/_tslib.js';\nimport { bufferToBase64 } from '@dynamic-labs/utils';\nimport { findWalletBookWallet } from '@dynamic-labs/wallet-book';\nimport './index.js';\nimport { InjectedWalletBase } from './injected/InjectedWalletBase.js';\nimport { isSignedMessage } from './utils/isSignedMessage.js';\n\nclass CoinbaseSolana extends InjectedWalletBase {\n    constructor(opts) {\n        super(opts);\n        this.name = 'CoinbaseSolana';\n        this.overrideKey = 'coinbasesolana';\n        this.wallet = findWalletBookWallet(this.walletBook, this.key);\n    }\n    getSigner() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a.connect();\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const walletAddress = yield this.getAddress();\n            if (!walletAddress) {\n                return undefined;\n            }\n            const provider = yield this.getSigner();\n            if (!provider) {\n                return undefined;\n            }\n            const encodedMessage = new TextEncoder().encode(messageToSign);\n            const signedMessage = yield provider.signMessage(encodedMessage, walletAddress);\n            if (!signedMessage) {\n                return undefined;\n            }\n            return bufferToBase64(isSignedMessage(signedMessage) ? signedMessage.signature : signedMessage);\n        });\n    }\n}\n\nexport { CoinbaseSolana };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAFA;;;;;;;AAQA,MAAM,uBAAuB,oLAAA,CAAA,qBAAkB;IAC3C,YAAY,IAAI,CAAE;QACd,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM,GAAG,CAAA,GAAA,6LAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG;IAChE;IACA,YAAY;QACR,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,IAAI;YACJ,OAAO,CAAC,KAAK,IAAI,CAAC,oBAAoB,EAAE,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,OAAO;QAC7F;IACJ;IACA,YAAY,aAAa,EAAE;QACvB,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,gBAAgB,MAAM,IAAI,CAAC,UAAU;YAC3C,IAAI,CAAC,eAAe;gBAChB,OAAO;YACX;YACA,MAAM,WAAW,MAAM,IAAI,CAAC,SAAS;YACrC,IAAI,CAAC,UAAU;gBACX,OAAO;YACX;YACA,MAAM,iBAAiB,IAAI,cAAc,MAAM,CAAC;YAChD,MAAM,gBAAgB,MAAM,SAAS,WAAW,CAAC,gBAAgB;YACjE,IAAI,CAAC,eAAe;gBAChB,OAAO;YACX;YACA,OAAO,CAAA,GAAA,mKAAA,CAAA,iBAAc,AAAD,EAAE,CAAA,GAAA,8KAAA,CAAA,kBAAe,AAAD,EAAE,iBAAiB,cAAc,SAAS,GAAG;QACrF;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1197, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/Solflare.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../_virtual/_tslib.js';\nimport { isMobile, handleMobileWalletRedirect, bufferToBase64 } from '@dynamic-labs/utils';\nimport { findWalletBookWallet } from '@dynamic-labs/wallet-book';\nimport { InjectedWalletBase } from './injected/InjectedWalletBase.js';\n\nclass Solflare extends InjectedWalletBase {\n    constructor(opts) {\n        super(opts);\n        this.name = 'Solflare';\n        this.overrideKey = 'solflare';\n        this.wallet = findWalletBookWallet(this.walletBook, this.key);\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d, _e;\n            /**\n             * It should redirect to in-app browser if on mobile and if not in the in-app browser,\n             * this checks if it is not in the in-app browser by checking if the provider is not available.\n             */\n            if (isMobile() && !this.isInstalledOnBrowser()) {\n                handleMobileWalletRedirect({\n                    nativeLink: ((_b = (_a = this.wallet) === null || _a === void 0 ? void 0 : _a.mobile) === null || _b === void 0 ? void 0 : _b.native) || 'solflare://ul/v1/browse',\n                    universalLink: ((_d = (_c = this.wallet) === null || _c === void 0 ? void 0 : _c.mobile) === null || _d === void 0 ? void 0 : _d.universal) || 'https://solflare.com/ul/v1/browse',\n                });\n                return;\n            }\n            return (_e = this.getSolProviderHelper()) === null || _e === void 0 ? void 0 : _e.getAddress();\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const walletAddress = yield this.getAddress();\n            if (!walletAddress) {\n                return undefined;\n            }\n            const provider = yield this.getSigner();\n            if (!provider) {\n                return undefined;\n            }\n            const encodedMessage = new TextEncoder().encode(messageToSign);\n            const isSignedMessage = (value) => value.signature !== undefined;\n            yield provider.connect();\n            /**\n             * TODO: Remove the sleep once problem is fixed on Solflare's extension.\n             * Tracked in DYN-442\n             */\n            yield new Promise((resolve) => {\n                setTimeout(resolve, 100);\n            });\n            const rawMessage = yield provider.signMessage(encodedMessage, 'utf8');\n            return isSignedMessage(rawMessage)\n                ? bufferToBase64(rawMessage.signature)\n                : undefined;\n        });\n    }\n}\n\nexport { Solflare };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AADA;AADA;AAAA;AAAA;AAFA;;;;;AAMA,MAAM,iBAAiB,oLAAA,CAAA,qBAAkB;IACrC,YAAY,IAAI,CAAE;QACd,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM,GAAG,CAAA,GAAA,6LAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG;IAChE;IACA,aAAa;QACT,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,IAAI,IAAI,IAAI,IAAI,IAAI;YACpB;;;aAGC,GACD,IAAI,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,OAAO,CAAC,IAAI,CAAC,oBAAoB,IAAI;gBAC5C,CAAA,GAAA,6MAAA,CAAA,6BAA0B,AAAD,EAAE;oBACvB,YAAY,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,MAAM,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,MAAM,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,MAAM,KAAK;oBACzI,eAAe,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,MAAM,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,MAAM,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,SAAS,KAAK;gBACnJ;gBACA;YACJ;YACA,OAAO,CAAC,KAAK,IAAI,CAAC,oBAAoB,EAAE,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,UAAU;QAChG;IACJ;IACA,YAAY,aAAa,EAAE;QACvB,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,gBAAgB,MAAM,IAAI,CAAC,UAAU;YAC3C,IAAI,CAAC,eAAe;gBAChB,OAAO;YACX;YACA,MAAM,WAAW,MAAM,IAAI,CAAC,SAAS;YACrC,IAAI,CAAC,UAAU;gBACX,OAAO;YACX;YACA,MAAM,iBAAiB,IAAI,cAAc,MAAM,CAAC;YAChD,MAAM,kBAAkB,CAAC,QAAU,MAAM,SAAS,KAAK;YACvD,MAAM,SAAS,OAAO;YACtB;;;aAGC,GACD,MAAM,IAAI,QAAQ,CAAC;gBACf,WAAW,SAAS;YACxB;YACA,MAAM,aAAa,MAAM,SAAS,WAAW,CAAC,gBAAgB;YAC9D,OAAO,gBAAgB,cACjB,CAAA,GAAA,mKAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,SAAS,IACnC;QACV;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1267, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/SolanaWalletStandardConnector/utils/createSolanaSignerFromWalletStandard/createSolanaSignerFromWalletStandard.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../_virtual/_tslib.js';\nimport { PublicKey, VersionedTransaction, Transaction } from '@solana/web3.js';\nimport { fetchCluster } from '../../../phantomRedirect/utils.js';\n\nconst isVersionedTransaction = (transaction) => !('instructions' in transaction);\nconst createSolanaSignerFromWalletStandard = (wallet, walletConnector) => {\n    const features = wallet.features;\n    const getCurrentAccount = () => __awaiter(void 0, void 0, void 0, function* () {\n        const address = yield walletConnector.getAddress();\n        const account = wallet.accounts.find((account) => account.address === address);\n        if (!account) {\n            throw new Error('Account not found');\n        }\n        return account;\n    });\n    const getChain = () => __awaiter(void 0, void 0, void 0, function* () {\n        var _a, _b;\n        const rpc = (_b = (_a = walletConnector.solNetworks[0].privateCustomerRpcUrls) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : walletConnector.solNetworks[0].rpcUrls[0];\n        const cluster = yield fetchCluster(rpc);\n        return `solana:${cluster}`;\n    });\n    const signTransaction = (transaction) => __awaiter(void 0, void 0, void 0, function* () {\n        const account = yield getCurrentAccount();\n        const signTransactionResult = yield features['solana:signTransaction'].signTransaction({\n            account,\n            chain: yield getChain(),\n            transaction: transaction.serialize({\n                requireAllSignatures: false,\n            }),\n        });\n        if (isVersionedTransaction(transaction)) {\n            return VersionedTransaction.deserialize(signTransactionResult[0].signedTransaction);\n        }\n        return Transaction.from(signTransactionResult[0].signedTransaction);\n    });\n    const signAllTransactions = (transactions) => __awaiter(void 0, void 0, void 0, function* () { return Promise.all(transactions.map(signTransaction)); });\n    const signAndSendTransaction = (transaction) => __awaiter(void 0, void 0, void 0, function* () {\n        const account = yield getCurrentAccount();\n        const signedTransactions = yield features['solana:signAndSendTransaction'].signAndSendTransaction({\n            account,\n            chain: yield getChain(),\n            transaction: transaction.serialize(),\n        });\n        const [{ signature }] = signedTransactions;\n        return { signature: new TextDecoder().decode(signature) };\n    });\n    const signMessage = (message) => __awaiter(void 0, void 0, void 0, function* () {\n        const account = yield getCurrentAccount();\n        const messages = yield features['solana:signMessage'].signMessage({\n            account,\n            message,\n        });\n        return { signature: messages[0].signature };\n    });\n    return {\n        addListener: () => {\n            throw new Error('Not implemented');\n        },\n        connect: () => {\n            throw new Error('Not implemented');\n        },\n        disconnect: () => walletConnector.endSession(),\n        emit: () => {\n            throw new Error('Not implemented');\n        },\n        eventNames: () => {\n            throw new Error('Not implemented');\n        },\n        isBackpack: false,\n        isBraveWallet: false,\n        isConnected: true,\n        isExodus: false,\n        isGlow: false,\n        isMagicEden: false,\n        isPhantom: false,\n        isSolflare: false,\n        listenerCount: () => {\n            throw new Error('Not implemented');\n        },\n        listeners: () => {\n            throw new Error('Not implemented');\n        },\n        off: () => {\n            throw new Error('Not implemented');\n        },\n        on: () => {\n            throw new Error('Not implemented');\n        },\n        once: () => {\n            throw new Error('Not implemented');\n        },\n        providers: [],\n        get publicKey() {\n            return new PublicKey(wallet.accounts[0].publicKey);\n        },\n        removeAllListeners: () => {\n            throw new Error('Not implemented');\n        },\n        removeListener: () => {\n            throw new Error('Not implemented');\n        },\n        send: () => {\n            throw new Error('Not implemented');\n        },\n        signAllTransactions,\n        signAndSendTransaction,\n        signMessage,\n        signTransaction,\n    };\n};\n\nexport { createSolanaSignerFromWalletStandard };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1396, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/SolanaWalletStandardConnector/SolanaWalletStandardConnector.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport { getWallets } from '@wallet-standard/app';\nimport { SolanaWalletConnector } from '@dynamic-labs/solana-core';\nimport { createSolanaSignerFromWalletStandard } from './utils/createSolanaSignerFromWalletStandard/createSolanaSignerFromWalletStandard.js';\n\nconst encoder = new TextEncoder();\nclass SolanaWalletStandardConnector extends SolanaWalletConnector {\n    constructor(props) {\n        super(props);\n        this.connectedChain = 'SOL';\n        this.supportedChains = ['SOL'];\n    }\n    get wallet() {\n        const walletStandard = SolanaWalletStandardConnector.getWallet(this.walletBook, this.key);\n        if (!walletStandard) {\n            throw new Error('Wallet not found');\n        }\n        return walletStandard;\n    }\n    get walletFeatures() {\n        return this.wallet.features;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.walletFeatures['standard:connect'].connect();\n        });\n    }\n    endSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.walletFeatures['standard:disconnect'].disconnect();\n        });\n    }\n    isInstalledOnBrowser() {\n        return true;\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connect();\n            const [address] = yield this.getConnectedAccounts();\n            return address;\n        });\n    }\n    getConnectedAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const addresses = this.wallet.accounts.map((account) => account.address);\n            return addresses;\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const signer = yield this.getSigner();\n            if (!signer) {\n                throw new Error('Signer not found');\n            }\n            const message = encoder.encode(messageToSign);\n            const { signature } = yield signer.signMessage(message);\n            if (!(signature instanceof Uint8Array)) {\n                throw new Error('Signature not found');\n            }\n            return Buffer.from(signature).toString('base64');\n        });\n    }\n    getSigner() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { wallet } = this;\n            return createSolanaSignerFromWalletStandard(wallet, this);\n        });\n    }\n    static getWallet(walletBook, walletKey) {\n        var _a, _b;\n        const wallets = getWallets().get();\n        const injectedConfig = (_a = walletBook.wallets[walletKey].injectedConfig) === null || _a === void 0 ? void 0 : _a.find((config) => config.chain === 'sol');\n        if (!injectedConfig)\n            return;\n        const { features } = (_b = injectedConfig.walletStandard) !== null && _b !== void 0 ? _b : {};\n        if (!features)\n            return;\n        const wallet = wallets.find((wallet) => {\n            var _a;\n            const isNameMatch = wallet.name === ((_a = injectedConfig.walletStandard) === null || _a === void 0 ? void 0 : _a.name);\n            if (!isNameMatch)\n                return false;\n            const hasFeatures = features.reduce((hasAllFeatures, key) => {\n                const walletFeatures = Object.keys(wallet.features);\n                if (!hasAllFeatures)\n                    return false;\n                return walletFeatures.includes(key);\n            }, true);\n            return hasFeatures;\n        });\n        return wallet;\n    }\n}\n\nexport { SolanaWalletStandardConnector };\n"],"names":[],"mappings":";;;AACA;AAEA;AACA;AAFA;AACA;AAHA;;;;;AAMA,MAAM,UAAU,IAAI;AACpB,MAAM,sCAAsC,gMAAA,CAAA,wBAAqB;IAC7D,YAAY,KAAK,CAAE;QACf,KAAK,CAAC;QACN,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,eAAe,GAAG;YAAC;SAAM;IAClC;IACA,IAAI,SAAS;QACT,MAAM,iBAAiB,8BAA8B,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG;QACxF,IAAI,CAAC,gBAAgB;YACjB,MAAM,IAAI,MAAM;QACpB;QACA,OAAO;IACX;IACA,IAAI,iBAAiB;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ;IAC/B;IACA,UAAU;QACN,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,OAAO;QACzD;IACJ;IACA,aAAa;QACT,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,UAAU;QAC/D;IACJ;IACA,uBAAuB;QACnB,OAAO;IACX;IACA,aAAa;QACT,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,IAAI,CAAC,OAAO;YAClB,MAAM,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,oBAAoB;YACjD,OAAO;QACX;IACJ;IACA,uBAAuB;QACnB,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,UAAY,QAAQ,OAAO;YACvE,OAAO;QACX;IACJ;IACA,YAAY,aAAa,EAAE;QACvB,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,SAAS,MAAM,IAAI,CAAC,SAAS;YACnC,IAAI,CAAC,QAAQ;gBACT,MAAM,IAAI,MAAM;YACpB;YACA,MAAM,UAAU,QAAQ,MAAM,CAAC;YAC/B,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,OAAO,WAAW,CAAC;YAC/C,IAAI,CAAC,CAAC,qBAAqB,UAAU,GAAG;gBACpC,MAAM,IAAI,MAAM;YACpB;YACA,OAAO,OAAO,IAAI,CAAC,WAAW,QAAQ,CAAC;QAC3C;IACJ;IACA,YAAY;QACR,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI;YACvB,OAAO,CAAA,GAAA,4QAAA,CAAA,uCAAoC,AAAD,EAAE,QAAQ,IAAI;QAC5D;IACJ;IACA,OAAO,UAAU,UAAU,EAAE,SAAS,EAAE;QACpC,IAAI,IAAI;QACR,MAAM,UAAU,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,IAAI,GAAG;QAChC,MAAM,iBAAiB,CAAC,KAAK,WAAW,OAAO,CAAC,UAAU,CAAC,cAAc,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC,SAAW,OAAO,KAAK,KAAK;QACrJ,IAAI,CAAC,gBACD;QACJ,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAC,KAAK,eAAe,cAAc,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,CAAC;QAC5F,IAAI,CAAC,UACD;QACJ,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAC;YACzB,IAAI;YACJ,MAAM,cAAc,OAAO,IAAI,KAAK,CAAC,CAAC,KAAK,eAAe,cAAc,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI;YACtH,IAAI,CAAC,aACD,OAAO;YACX,MAAM,cAAc,SAAS,MAAM,CAAC,CAAC,gBAAgB;gBACjD,MAAM,iBAAiB,OAAO,IAAI,CAAC,OAAO,QAAQ;gBAClD,IAAI,CAAC,gBACD,OAAO;gBACX,OAAO,eAAe,QAAQ,CAAC;YACnC,GAAG;YACH,OAAO;QACX;QACA,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1502, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/injected/BackpackSol.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport { bufferToBase64 } from '@dynamic-labs/utils';\nimport { findWalletBookWallet } from '@dynamic-labs/wallet-book';\nimport { InjectedWalletBase } from './InjectedWalletBase.js';\n\nclass BackpackSol extends InjectedWalletBase {\n    constructor(opts) {\n        super(opts);\n        this.name = 'Backpack';\n        this.overrideKey = 'backpacksol';\n        this.wallet = findWalletBookWallet(this.walletBook, this.key);\n    }\n    getSigner() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSolProviderHelper()) === null || _a === void 0 ? void 0 : _a.connect();\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const publicAddress = yield this.getAddress();\n            if (!publicAddress) {\n                return undefined;\n            }\n            const provider = yield this.getSigner();\n            if (!provider) {\n                return undefined;\n            }\n            const signedMessage = yield provider.signMessage(Buffer.from(messageToSign, 'utf8'));\n            if (!signedMessage) {\n                return undefined;\n            }\n            if (typeof signedMessage === 'object' && 'signature' in signedMessage) {\n                return bufferToBase64(signedMessage.signature);\n            }\n            return bufferToBase64(signedMessage);\n        });\n    }\n}\n\nexport { BackpackSol };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AADA;AADA;AAFA;;;;;AAMA,MAAM,oBAAoB,oLAAA,CAAA,qBAAkB;IACxC,YAAY,IAAI,CAAE;QACd,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM,GAAG,CAAA,GAAA,6LAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG;IAChE;IACA,YAAY;QACR,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,IAAI;YACJ,OAAO,CAAC,KAAK,IAAI,CAAC,oBAAoB,EAAE,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,OAAO;QAC7F;IACJ;IACA,YAAY,aAAa,EAAE;QACvB,OAAO,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,MAAM,gBAAgB,MAAM,IAAI,CAAC,UAAU;YAC3C,IAAI,CAAC,eAAe;gBAChB,OAAO;YACX;YACA,MAAM,WAAW,MAAM,IAAI,CAAC,SAAS;YACrC,IAAI,CAAC,UAAU;gBACX,OAAO;YACX;YACA,MAAM,gBAAgB,MAAM,SAAS,WAAW,CAAC,OAAO,IAAI,CAAC,eAAe;YAC5E,IAAI,CAAC,eAAe;gBAChB,OAAO;YACX;YACA,IAAI,OAAO,kBAAkB,YAAY,eAAe,eAAe;gBACnE,OAAO,CAAA,GAAA,mKAAA,CAAA,iBAAc,AAAD,EAAE,cAAc,SAAS;YACjD;YACA,OAAO,CAAA,GAAA,mKAAA,CAAA,iBAAc,AAAD,EAAE;QAC1B;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1557, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/injected/fetchInjectedWalletConnectors.js"],"sourcesContent":["'use client'\nimport { CoinbaseSolana } from '../CoinbaseSolana.js';\nimport { Solflare } from '../Solflare.js';\nimport { SolanaWalletStandardConnector } from '../SolanaWalletStandardConnector/SolanaWalletStandardConnector.js';\nimport { InjectedWalletBase } from './InjectedWalletBase.js';\nimport { BackpackSol } from './BackpackSol.js';\n\nconst injectedWalletOverrides = [\n    CoinbaseSolana,\n    BackpackSol,\n    Solflare,\n];\nconst filteredInjectedWalletKeysOverrides = [\n    'coinbasesolana',\n    'phantom',\n    'phantomledger',\n    'backpacksol',\n    'solflare',\n];\nconst fetchInjectedWalletConnectors = ({ walletBook, }) => {\n    var _a;\n    return Object.entries((_a = walletBook === null || walletBook === void 0 ? void 0 : walletBook.wallets) !== null && _a !== void 0 ? _a : {})\n        .filter(([key, wallet]) => {\n        var _a;\n        const isSolanaWallet = Boolean((_a = wallet.injectedConfig) === null || _a === void 0 ? void 0 : _a.find((config) => config.chain === 'sol'));\n        const shouldBeFiltered = filteredInjectedWalletKeysOverrides.includes(key);\n        return isSolanaWallet && !shouldBeFiltered;\n    })\n        .map(([key, wallet]) => {\n        var _a;\n        const { shortName } = wallet;\n        const name = shortName || wallet.name;\n        const hasWalletStandard = Boolean((_a = wallet.injectedConfig) === null || _a === void 0 ? void 0 : _a.find((config) => config.walletStandard));\n        if (hasWalletStandard) {\n            const isWalletStandardPresent = Boolean(SolanaWalletStandardConnector.getWallet(walletBook, key));\n            if (isWalletStandardPresent) {\n                return class extends SolanaWalletStandardConnector {\n                    constructor(props) {\n                        super(Object.assign({}, props));\n                        this.name = name;\n                        this.overrideKey = key;\n                    }\n                };\n            }\n        }\n        return class extends InjectedWalletBase {\n            constructor(props) {\n                super(Object.assign({}, props));\n                this.name = name;\n                this.wallet = wallet;\n                // this is the key from the wallet book entry so that we don't purely rely on the normalized name\n                this.overrideKey = key;\n            }\n        };\n    });\n};\n\nexport { fetchInjectedWalletConnectors, injectedWalletOverrides };\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,0BAA0B;IAC5B,oKAAA,CAAA,iBAAc;IACd,6KAAA,CAAA,cAAW;IACX,8JAAA,CAAA,WAAQ;CACX;AACD,MAAM,sCAAsC;IACxC;IACA;IACA;IACA;IACA;CACH;AACD,MAAM,gCAAgC,CAAC,EAAE,UAAU,EAAG;IAClD,IAAI;IACJ,OAAO,OAAO,OAAO,CAAC,CAAC,KAAK,eAAe,QAAQ,eAAe,KAAK,IAAI,KAAK,IAAI,WAAW,OAAO,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,CAAC,GACrI,MAAM,CAAC,CAAC,CAAC,KAAK,OAAO;QACtB,IAAI;QACJ,MAAM,iBAAiB,QAAQ,CAAC,KAAK,OAAO,cAAc,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC,SAAW,OAAO,KAAK,KAAK;QACtI,MAAM,mBAAmB,oCAAoC,QAAQ,CAAC;QACtE,OAAO,kBAAkB,CAAC;IAC9B,GACK,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO;QACnB,IAAI;QACJ,MAAM,EAAE,SAAS,EAAE,GAAG;QACtB,MAAM,OAAO,aAAa,OAAO,IAAI;QACrC,MAAM,oBAAoB,QAAQ,CAAC,KAAK,OAAO,cAAc,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC,SAAW,OAAO,cAAc;QAC7I,IAAI,mBAAmB;YACnB,MAAM,0BAA0B,QAAQ,oNAAA,CAAA,gCAA6B,CAAC,SAAS,CAAC,YAAY;YAC5F,IAAI,yBAAyB;gBACzB,OAAO,cAAc,oNAAA,CAAA,gCAA6B;oBAC9C,YAAY,KAAK,CAAE;wBACf,KAAK,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG;wBACxB,IAAI,CAAC,IAAI,GAAG;wBACZ,IAAI,CAAC,WAAW,GAAG;oBACvB;gBACJ;YACJ;QACJ;QACA,OAAO,cAAc,oLAAA,CAAA,qBAAkB;YACnC,YAAY,KAAK,CAAE;gBACf,KAAK,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG;gBACxB,IAAI,CAAC,IAAI,GAAG;gBACZ,IAAI,CAAC,MAAM,GAAG;gBACd,iGAAiG;gBACjG,IAAI,CAAC,WAAW,GAAG;YACvB;QACJ;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1620, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1626, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/injected/UnknownInjected.js"],"sourcesContent":["'use client'\nimport { findWalletBookWallet } from '@dynamic-labs/wallet-book';\nimport { InjectedWalletBase } from './InjectedWalletBase.js';\n\nclass UnknownInjected extends InjectedWalletBase {\n    constructor(opts) {\n        super(opts);\n        this.name = 'Unknown';\n        this.overrideKey = 'unknown';\n        this.wallet = findWalletBookWallet(this.walletBook, this.key);\n    }\n    isInstalledOnBrowser() {\n        return false;\n    }\n}\n\nexport { UnknownInjected };\n"],"names":[],"mappings":";;;AACA;AACA;AADA;AADA;;;AAIA,MAAM,wBAAwB,oLAAA,CAAA,qBAAkB;IAC5C,YAAY,IAAI,CAAE;QACd,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM,GAAG,CAAA,GAAA,6LAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG;IAChE;IACA,uBAAuB;QACnB,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1647, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1653, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/injected/FallbackSolanaConnector.js"],"sourcesContent":["'use client'\nimport { findWalletBookWallet } from '@dynamic-labs/wallet-book';\nimport { InjectedWalletBase } from './InjectedWalletBase.js';\n\nclass FallbackSolanaConnector extends InjectedWalletBase {\n    constructor(opts) {\n        super(opts);\n        this.name = 'Fallback Connector';\n        this.overrideKey = 'fallbackconnector';\n        this.isAvailable = false;\n        this.wallet = findWalletBookWallet(this.walletBook, this.key);\n    }\n    isInstalledOnBrowser() {\n        return false;\n    }\n}\n\nexport { FallbackSolanaConnector };\n"],"names":[],"mappings":";;;AACA;AACA;AADA;AADA;;;AAIA,MAAM,gCAAgC,oLAAA,CAAA,qBAAkB;IACpD,YAAY,IAAI,CAAE;QACd,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM,GAAG,CAAA,GAAA,6LAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG;IAChE;IACA,uBAAuB;QACnB,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1675, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1681, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/SolanaWalletConnectors.js"],"sourcesContent":["'use client'\nimport { TurnkeySolanaWalletConnectors } from '@dynamic-labs/embedded-wallet-solana';\nimport { Phantom } from './Phantom.js';\nimport { injectedWalletOverrides, fetchInjectedWalletConnectors } from './injected/fetchInjectedWalletConnectors.js';\nimport { UnknownInjected } from './injected/UnknownInjected.js';\nimport { FallbackSolanaConnector } from './injected/FallbackSolanaConnector.js';\n\nconst SolanaWalletConnectors = (props) => [\n    ...injectedWalletOverrides,\n    ...fetchInjectedWalletConnectors(props),\n    ...TurnkeySolanaWalletConnectors(props),\n    Phantom,\n    UnknownInjected,\n    FallbackSolanaConnector,\n];\n\nexport { SolanaWalletConnectors };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;;;;;;AAOA,MAAM,yBAAyB,CAAC,QAAU;WACnC,+LAAA,CAAA,0BAAuB;WACvB,CAAA,GAAA,+LAAA,CAAA,gCAA6B,AAAD,EAAE;WAC9B,CAAA,GAAA,yMAAA,CAAA,gCAA6B,AAAD,EAAE;QACjC,6JAAA,CAAA,UAAO;QACP,iLAAA,CAAA,kBAAe;QACf,yLAAA,CAAA,0BAAuB;KAC1B","ignoreList":[0]}},
    {"offset": {"line": 1705, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1711, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/SolanaWalletConnectorsWithConfig/SolanaWalletConnectorsWithConfig.js"],"sourcesContent":["'use client'\nimport { SolanaWalletConnectors } from '../SolanaWalletConnectors.js';\n\n/**\n * Allows passing in Solana connection configuration to all wallet connectors.\n */\nconst SolanaWalletConnectorsWithConfig = (connectionConfig) => {\n    // Idea here is to ensure that all wallet connectors are constructed with\n    // the client-provided connection configuration, so we \"wrap\" the constructors with it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const classWithConfig = (className) => class extends className {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        constructor(...args) {\n            const [opts] = args;\n            super(Object.assign(Object.assign({}, opts), { connectionConfig }));\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (props) => SolanaWalletConnectors(props).map(classWithConfig);\n};\n\nexport { SolanaWalletConnectorsWithConfig };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA;;CAEC,GACD,MAAM,mCAAmC,CAAC;IACtC,yEAAyE;IACzE,uFAAuF;IACvF,8DAA8D;IAC9D,MAAM,kBAAkB,CAAC,YAAc,cAAc;YACjD,8DAA8D;YAC9D,YAAY,GAAG,IAAI,CAAE;gBACjB,MAAM,CAAC,KAAK,GAAG;gBACf,KAAK,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,OAAO;oBAAE;gBAAiB;YACpE;QACJ;IACA,8DAA8D;IAC9D,OAAO,CAAC,QAAU,CAAA,GAAA,4KAAA,CAAA,yBAAsB,AAAD,EAAE,OAAO,GAAG,CAAC;AACxD","ignoreList":[0]}},
    {"offset": {"line": 1736, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1742, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/utils/isBackpackSolanaSigner.js"],"sourcesContent":["'use client'\nconst isBackpackSolanaSigner = (signer) => Boolean(signer) && signer.send !== undefined;\n\nexport { isBackpackSolanaSigner };\n"],"names":[],"mappings":";;;AAAA;AACA,MAAM,yBAAyB,CAAC,SAAW,QAAQ,WAAW,OAAO,IAAI,KAAK","ignoreList":[0]}},
    {"offset": {"line": 1748, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1754, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/solana/src/index.js"],"sourcesContent":["'use client'\nimport { assertPackageVersion } from '@dynamic-labs/assert-package-version';\nimport { version } from '../package.js';\nexport { SolanaWalletConnector, isSolanaWallet } from '@dynamic-labs/solana-core';\nexport { InjectedWalletBase as SolanaInjectedConnector } from './injected/InjectedWalletBase.js';\nexport { SolanaWalletConnectors } from './SolanaWalletConnectors.js';\nexport { SolanaWalletConnectorsWithConfig } from './SolanaWalletConnectorsWithConfig/SolanaWalletConnectorsWithConfig.js';\nexport { isBackpackSolanaSigner } from './utils/isBackpackSolanaSigner.js';\nexport { isSignedMessage } from './utils/isSignedMessage.js';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nassertPackageVersion('@dynamic-labs/solana', version);\n"],"names":[],"mappings":";AACA;AACA;AAFA;;;;;;;;;AAUA,oDAAoD,GACpD,CAAA,GAAA,+NAAA,CAAA,uBAAoB,AAAD,EAAE,wBAAwB,sJAAA,CAAA,UAAO","ignoreList":[0]}},
    {"offset": {"line": 1767, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}