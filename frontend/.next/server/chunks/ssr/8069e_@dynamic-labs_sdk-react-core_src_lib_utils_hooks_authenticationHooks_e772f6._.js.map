{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/authenticationHooks/helpers/showPendingConnectView.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../../_virtual/_tslib.js';\nimport { getWalletProvider } from '../../../functions/getWalletProvider/getWalletProvider.js';\n\nconst specialCareWallets = ['bloctoevm', 'perawallet', 'metamaskstarknet'];\nconst showPendingConnectView = (walletConnector, setView) => __awaiter(void 0, void 0, void 0, function* () {\n    const walletProvider = getWalletProvider(walletConnector);\n    // We don't want to show the pending connect view for qrCode and walletConnect\n    // They have their own view with qrCode so we don't need to show the pending connect view\n    if (walletProvider === 'walletConnect' || walletProvider === 'qrCode') {\n        return;\n    }\n    specialCareWallets.forEach((wallet) => {\n        if (walletConnector.key === wallet) {\n            // bloctoevm and some other wallets works different as Justin mentioned in this commit:\n            // https://github.com/dynamic-labs/DynamicAuth/commit/57233d3620611bc91439f3d4587b8516f8d16f99\n            // It needs to show the connect view before getting connected accounts\n            setView('pending-connect');\n        }\n    });\n    const connectedAccounts = yield walletConnector.getConnectedAccounts();\n    /* istanbul ignore else */\n    if (connectedAccounts.length === 0) {\n        setView('pending-connect');\n    }\n});\n\nexport { showPendingConnectView };\n"],"names":[],"mappings":";;;AACA;AACA;AAFA;;;AAIA,MAAM,qBAAqB;IAAC;IAAa;IAAc;CAAmB;AAC1E,MAAM,yBAAyB,CAAC,iBAAiB,UAAY,CAAA,GAAA,+KAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;QAC3F,MAAM,iBAAiB,CAAA,GAAA,uOAAA,CAAA,oBAAiB,AAAD,EAAE;QACzC,8EAA8E;QAC9E,yFAAyF;QACzF,IAAI,mBAAmB,mBAAmB,mBAAmB,UAAU;YACnE;QACJ;QACA,mBAAmB,OAAO,CAAC,CAAC;YACxB,IAAI,gBAAgB,GAAG,KAAK,QAAQ;gBAChC,uFAAuF;gBACvF,8FAA8F;gBAC9F,sEAAsE;gBACtE,QAAQ;YACZ;QACJ;QACA,MAAM,oBAAoB,MAAM,gBAAgB,oBAAoB;QACpE,wBAAwB,GACxB,IAAI,kBAAkB,MAAM,KAAK,GAAG;YAChC,QAAQ;QACZ;IACJ","ignoreList":[0]}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/authenticationHooks/helpers/isConnectOnly.js"],"sourcesContent":["'use client'\nconst isConnectOnly = (user, authMode) => {\n    // we need to check for user because of connect-only (authenticated)\n    // and linking a new wallet in mutliwallet\n    const linking = user !== undefined;\n    const connectOnly = authMode === 'connect-only' && !linking;\n    return connectOnly;\n};\n\nexport { isConnectOnly };\n"],"names":[],"mappings":";;;AAAA;AACA,MAAM,gBAAgB,CAAC,MAAM;IACzB,oEAAoE;IACpE,0CAA0C;IAC1C,MAAM,UAAU,SAAS;IACzB,MAAM,cAAc,aAAa,kBAAkB,CAAC;IACpD,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/authenticationHooks/useConnectAndSign/useConnectAndSign.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../../_virtual/_tslib.js';\nimport { isEmailWalletConnector, isEmailOTPWalletConnector, isBloctoConnector } from '@dynamic-labs/wallet-connector-core';\nimport { StorageService } from '@dynamic-labs/utils';\nimport { useCaptchaContext } from '../../../../context/CaptchaContext/CaptchaContext.js';\nimport 'react';\nimport '../../../../context/DynamicContext/DynamicContext.js';\nimport '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport 'react/jsx-runtime';\nimport { useViewContext } from '../../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport { LAST_USED_WALLET } from '../../../constants/localStorage.js';\nimport '../../../constants/colors.js';\nimport '../../../constants/values.js';\nimport '../../../../store/state/loadingAndLifecycle.js';\nimport '../../../../shared/consts/index.js';\nimport '../../../../events/dynamicEvents.js';\nimport { useErrorContext } from '../../../../context/ErrorContext/ErrorContext.js';\nimport '@dynamic-labs/multi-wallet';\nimport 'react-international-phone';\nimport { isProgrammableNetworkSwitchSupported } from '../../../functions/isProgrammableNetworkSwitchSupported/isProgrammableNetworkSwitchSupported.js';\nimport { isSupportedNetwork } from '../../../functions/isSupportedNetwork/isSupportedNetwork.js';\nimport '../../../../config/ApiEndpoint.js';\nimport '../../../../store/state/user/user.js';\nimport '../../../../locale/locale.js';\nimport '../../../../store/state/projectSettings/projectSettings.js';\nimport { useHandleWalletsToConnect } from '../../useHandleWalletsToConnect/useHandleWalletsToConnect.js';\nimport { useVerifyWallet } from '../../useVerifyWallet/useVerifyWallet.js';\nimport { showPendingConnectView } from '../helpers/showPendingConnectView.js';\nimport { isConnectOnly } from '../helpers/isConnectOnly.js';\nimport '../../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport '../../../../context/WalletContext/WalletContext.js';\nimport '../../useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';\nimport '../../../../context/ThemeContext/ThemeContext.js';\nimport '../../useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport '@dynamic-labs/types';\nimport '../../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../../context/LoadingContext/LoadingContext.js';\nimport '../../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport 'yup';\nimport '../../../../context/MockContext/MockContext.js';\nimport '../../../../views/CollectUserDataView/useFields.js';\nimport '../../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../../../../store/state/environmentId.js';\nimport '../../../../store/state/walletConnectorOptions.js';\nimport '../../../../context/UserWalletsContext/UserWalletsContext.js';\nimport 'react-i18next';\nimport '../../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../../components/Alert/Alert.js';\nimport '../../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../../components/IconButton/IconButton.js';\nimport '../../../../components/InlineWidget/InlineWidget.js';\nimport '../../../../components/Input/Input.js';\nimport '../../../../components/IsBrowser/IsBrowser.js';\nimport '../../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../../components/Popper/Popper/Popper.js';\nimport '../../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../../context/FooterAnimationContext/index.js';\nimport '../../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../../context/PasskeyContext/PasskeyContext.js';\nimport '../../../../store/state/sendBalances.js';\nimport '../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../../../index.js';\nimport '../../../../store/state/tokenBalances.js';\nimport '../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\nimport { useInternalDynamicContext } from '../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';\n\nconst useConnectAndSign = ({ shouldUpdateWallets = true, shouldCallCallback = true, } = {}) => {\n    const { setView, goToInitialView } = useViewContext();\n    const { engageCaptcha, getCaptchaToken } = useCaptchaContext();\n    const { setErrorMessage } = useErrorContext();\n    const { authMode, connectWallet, consumeNonce, displaySiweStatement, environmentId, projectSettings, networkValidationMode, setIsSingleWalletAccount, user, walletUiUtils, } = useInternalDynamicContext();\n    const { handleWalletsToConnect } = useHandleWalletsToConnect();\n    const verifyWallet = useVerifyWallet({\n        consumeNonce,\n        displaySiweStatement,\n        environmentId,\n        projectSettings,\n        setIsSingleWalletAccount,\n    });\n    const handleWalletVerify = (walletConnector, publicWalletAddress, captchaToken) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!isEmailWalletConnector(walletConnector) ||\n            isBloctoConnector(walletConnector)) {\n            setView('pending-signature');\n        }\n        else {\n            walletUiUtils.disabledConfirmationOnce();\n        }\n        yield verifyWallet({\n            captchaToken,\n            publicWalletAddress,\n            walletConnector,\n        });\n    });\n    const handleWalletVerifyError = (err) => {\n        var _a;\n        const userCancelled = (err === null || err === void 0 ? void 0 : err.code) === 'user-cancelled';\n        if (!userCancelled)\n            logger.debug(err);\n        setErrorMessage((_a = err === null || err === void 0 ? void 0 : err.code) === null || _a === void 0 ? void 0 : _a.toString());\n        goToInitialView();\n    };\n    return (_a) => __awaiter(void 0, [_a], void 0, function* ({ walletConnector, getAddressOpts = undefined }) {\n        var _b;\n        try {\n            yield showPendingConnectView(walletConnector, setView);\n            if (isEmailWalletConnector(walletConnector)) {\n                if (isEmailOTPWalletConnector(walletConnector)) {\n                    setView('email-wallet-otp-verification-view');\n                }\n                else if (!isBloctoConnector(walletConnector)) {\n                    setView('wait-for-email-confirmation-view');\n                }\n            }\n            const connectionResult = yield connectWallet(walletConnector, getAddressOpts, {\n                applyHandleConnectedWallet: shouldCallCallback,\n            });\n            if (!(connectionResult === null || connectionResult === void 0 ? void 0 : connectionResult.address)) {\n                return;\n            }\n            const { address } = connectionResult;\n            const walletNetwork = yield walletConnector.getNetwork();\n            const usesSupportedNetwork = isSupportedNetwork({\n                network: walletNetwork,\n                walletConnector,\n            });\n            const isNetworkValidationEnabledForSignIn = networkValidationMode === 'always' ||\n                networkValidationMode === 'sign-in';\n            if (!usesSupportedNetwork && isNetworkValidationEnabledForSignIn) {\n                if (!isProgrammableNetworkSwitchSupported(walletConnector)) {\n                    return setView('network-not-supported-manual');\n                }\n                return setView('network-not-supported');\n            }\n            if (isConnectOnly(user, authMode)) {\n                StorageService.setItem(LAST_USED_WALLET, walletConnector.key);\n                if (shouldUpdateWallets) {\n                    handleWalletsToConnect({ walletConnector });\n                }\n                return;\n            }\n            if ((_b = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.security.hCaptcha) === null || _b === void 0 ? void 0 : _b.enabled) {\n                engageCaptcha({\n                    authMethod: 'wallet',\n                    onCaptchaSuccess: (captchaToken) => __awaiter(void 0, void 0, void 0, function* () {\n                        try {\n                            yield handleWalletVerify(walletConnector, address, captchaToken);\n                        }\n                        catch (e) {\n                            handleWalletVerifyError(e);\n                        }\n                    }),\n                });\n                return;\n            }\n            yield handleWalletVerify(walletConnector, address, getCaptchaToken());\n        }\n        catch (err) {\n            handleWalletVerifyError(err);\n        }\n    });\n};\n\nexport { useConnectAndSign };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/authenticationHooks/useConnectAndSignSplitSteps/useConnectAndSignSplitSteps.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../../_virtual/_tslib.js';\nimport { StorageService, MissingPublicAddressError, isMobile } from '@dynamic-labs/utils';\nimport { useCaptchaContext } from '../../../../context/CaptchaContext/CaptchaContext.js';\nimport 'react';\nimport '../../../../context/DynamicContext/DynamicContext.js';\nimport '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport { useViewContext } from '../../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport { LAST_USED_WALLET } from '../../../constants/localStorage.js';\nimport '../../../constants/colors.js';\nimport '../../../constants/values.js';\nimport '../../../../store/state/loadingAndLifecycle.js';\nimport '../../../../shared/consts/index.js';\nimport '../../../../events/dynamicEvents.js';\nimport { useErrorContext } from '../../../../context/ErrorContext/ErrorContext.js';\nimport '@dynamic-labs/multi-wallet';\nimport 'react-international-phone';\nimport { isProgrammableNetworkSwitchSupported } from '../../../functions/isProgrammableNetworkSwitchSupported/isProgrammableNetworkSwitchSupported.js';\nimport { isSupportedNetwork } from '../../../functions/isSupportedNetwork/isSupportedNetwork.js';\nimport '../../../../config/ApiEndpoint.js';\nimport '../../../../store/state/user/user.js';\nimport '../../../../locale/locale.js';\nimport '../../../../store/state/projectSettings/projectSettings.js';\nimport { useHandleWalletsToConnect } from '../../useHandleWalletsToConnect/useHandleWalletsToConnect.js';\nimport { useVerifyWallet } from '../../useVerifyWallet/useVerifyWallet.js';\nimport { showPendingConnectView } from '../helpers/showPendingConnectView.js';\nimport { isConnectOnly } from '../helpers/isConnectOnly.js';\nimport '../../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport '../../../../context/WalletContext/WalletContext.js';\nimport '../../useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';\nimport '../../../../context/ThemeContext/ThemeContext.js';\nimport '../../useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport '@dynamic-labs/types';\nimport '../../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../../context/LoadingContext/LoadingContext.js';\nimport '../../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport 'yup';\nimport '../../../../context/MockContext/MockContext.js';\nimport '../../../../views/CollectUserDataView/useFields.js';\nimport '../../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../../../../store/state/environmentId.js';\nimport '../../../../store/state/walletConnectorOptions.js';\nimport '../../../../context/UserWalletsContext/UserWalletsContext.js';\nimport 'react-i18next';\nimport '../../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../../components/Alert/Alert.js';\nimport '../../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../../components/IconButton/IconButton.js';\nimport '../../../../components/InlineWidget/InlineWidget.js';\nimport '../../../../components/Input/Input.js';\nimport '../../../../components/IsBrowser/IsBrowser.js';\nimport '../../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../../components/Popper/Popper/Popper.js';\nimport '../../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../../context/FooterAnimationContext/index.js';\nimport '../../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../../context/PasskeyContext/PasskeyContext.js';\nimport '../../../../store/state/sendBalances.js';\nimport '../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../../../index.js';\nimport '../../../../store/state/tokenBalances.js';\nimport '../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\nimport { useInternalDynamicContext } from '../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';\n\nconst useConnectAndSignSplitSteps = () => {\n    const { setView, goToInitialView } = useViewContext();\n    const { setErrorMessage } = useErrorContext();\n    const { getCaptchaToken, engageCaptcha } = useCaptchaContext();\n    const { connectWallet, consumeNonce, displaySiweStatement, projectSettings, environmentId, networkValidationMode, setIsSingleWalletAccount, setShowAuthFlow, user, authMode, } = useInternalDynamicContext();\n    const { handleWalletsToConnect } = useHandleWalletsToConnect();\n    const verifyWallet = useVerifyWallet({\n        consumeNonce,\n        displaySiweStatement,\n        environmentId,\n        projectSettings,\n        setIsSingleWalletAccount,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const onErrorHandler = (err) => {\n        var _a;\n        logger.debug(err);\n        /**\n         * On mobile, when the user is redirected to the wallet mobile app, this error is thrown.\n         * We want to stay in whichever view we currently are, most likely mobile-wallet-redirect-view\n         */\n        if (err instanceof MissingPublicAddressError && isMobile())\n            return;\n        goToInitialView();\n        setErrorMessage((_a = err.code) !== null && _a !== void 0 ? _a : err.toString());\n    };\n    // This method is similar to useConnectAndSign, but it skips signing for now\n    // It's used when we want to connect and sign in two separate steps\n    // For example on mobile when we want to sign on button click\n    // or in Dapper\n    const onlyConnectUser = (_a) => __awaiter(void 0, [_a], void 0, function* ({ walletConnector, getAddressOpts = undefined, shouldShowPendingConnectView = true, }) {\n        var _b;\n        if (shouldShowPendingConnectView)\n            yield showPendingConnectView(walletConnector, setView);\n        try {\n            yield connectWallet(walletConnector, getAddressOpts);\n            if (isConnectOnly(user, authMode)) {\n                StorageService.setItem(LAST_USED_WALLET, walletConnector.key);\n                handleWalletsToConnect({ walletConnector });\n                return;\n            }\n            if ((_b = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.security.hCaptcha) === null || _b === void 0 ? void 0 : _b.enabled) {\n                engageCaptcha({\n                    authMethod: 'wallet',\n                    onCaptchaSuccess: (_captchaToken) => __awaiter(void 0, void 0, void 0, function* () {\n                        setShowAuthFlow(true);\n                        setView('pending-signature');\n                    }),\n                });\n                return;\n            }\n            setShowAuthFlow(true);\n            setView('pending-signature');\n        }\n        catch (err) {\n            onErrorHandler(err);\n            return;\n        }\n    });\n    // This method is similar to useConnectAndSign, but it does not call showPendingConnectView\n    // This is because we already called it in onlyConnectUser and now we just want to sign\n    const signAlreadyConnectedUser = (_c) => __awaiter(void 0, [_c], void 0, function* ({ walletConnector, getAddressOpts = undefined, }) {\n        try {\n            const connectionResult = yield connectWallet(walletConnector, getAddressOpts);\n            if (!(connectionResult === null || connectionResult === void 0 ? void 0 : connectionResult.address)) {\n                return;\n            }\n            const walletNetwork = yield walletConnector.getNetwork();\n            const usesSupportedNetwork = isSupportedNetwork({\n                network: walletNetwork,\n                walletConnector,\n            });\n            const isNetworkValidationEnabledForSignIn = networkValidationMode === 'always' ||\n                networkValidationMode === 'sign-in';\n            if (!usesSupportedNetwork && isNetworkValidationEnabledForSignIn) {\n                if (!isProgrammableNetworkSwitchSupported(walletConnector)) {\n                    return setView('network-not-supported-manual');\n                }\n                return setView('network-not-supported');\n            }\n            yield verifyWallet({\n                captchaToken: getCaptchaToken(),\n                publicWalletAddress: connectionResult.address,\n                walletConnector,\n            });\n        }\n        catch (err) {\n            onErrorHandler(err);\n            return;\n        }\n    });\n    return {\n        onlyConnectUser,\n        signAlreadyConnectedUser,\n    };\n};\n\nexport { useConnectAndSignSplitSteps };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/authenticationHooks/useOtpVerificationRequest/useOtpVerificationRequest.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../../_virtual/_tslib.js';\nimport { useMemo, useCallback } from 'react';\nimport { DynamicError } from '@dynamic-labs/utils';\nimport '../../../../events/dynamicEvents.js';\nimport '../../../../context/DynamicContext/DynamicContext.js';\nimport '@dynamic-labs/sdk-api-core';\nimport '../../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport '../../../constants/colors.js';\nimport '../../../constants/values.js';\nimport '../../../../store/state/loadingAndLifecycle.js';\nimport '../../../../shared/consts/index.js';\nimport { useInternalDynamicContext } from '../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';\nimport '../../../../context/CaptchaContext/CaptchaContext.js';\nimport '../../../../context/ErrorContext/ErrorContext.js';\nimport { USER_NOT_LOGGED_IN } from '../../../constants/errors.js';\nimport '@dynamic-labs/multi-wallet';\nimport 'react-international-phone';\nimport { verifyEmail } from '../../../../data/api/email/email.js';\nimport { storeAuthTokenAndUser } from '../../../../store/state/user/storeAuthTokenAndUser/storeAuthTokenAndUser.js';\nimport '../../../../store/state/user/user.js';\nimport '../../../../config/ApiEndpoint.js';\nimport { verifySms } from '../../../../data/api/sms/sms.js';\nimport '../../../../store/state/projectSettings/projectSettings.js';\nimport '../../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport '../../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../../context/UserWalletsContext/UserWalletsContext.js';\nimport { useVerification } from '../../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport '../../../../context/WalletContext/WalletContext.js';\nimport '../../useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';\nimport '../../../../context/ThemeContext/ThemeContext.js';\nimport { useHandleVerificationRequired, getVerificationDestination } from '../../useHandleVerificationRequired/useHandleVerificationRequired.js';\nimport '@dynamic-labs/types';\nimport '../../../../context/LoadingContext/LoadingContext.js';\nimport 'yup';\nimport '../../../../context/MockContext/MockContext.js';\nimport '../../../../views/CollectUserDataView/useFields.js';\nimport '../../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport '../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../../../../store/state/environmentId.js';\nimport '../../../../store/state/walletConnectorOptions.js';\nimport 'react-i18next';\nimport '../../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../../components/Alert/Alert.js';\nimport '../../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../../components/IconButton/IconButton.js';\nimport '../../../../components/InlineWidget/InlineWidget.js';\nimport '../../../../components/Input/Input.js';\nimport '../../../../components/IsBrowser/IsBrowser.js';\nimport '../../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../../components/Popper/Popper/Popper.js';\nimport '../../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../../context/FooterAnimationContext/index.js';\nimport '../../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '../../../../locale/locale.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../../context/PasskeyContext/PasskeyContext.js';\nimport '../../../../store/state/sendBalances.js';\nimport '../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../../../index.js';\nimport '../../../../store/state/tokenBalances.js';\nimport '../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\n\n/**\n * Same as useOtpVerificationRequest, but requires you to pass it a handleVerificationRequired method as param.\n * This is to avoid a circular logic issue, as handleVerificationRequired needs to use the logic in this file as well.\n */\nconst useOtpVerificationRequestRaw = () => {\n    const { environmentId, user, userWithMissingInfo } = useInternalDynamicContext();\n    const { verificationUUID: contextVerificationUUID } = useVerification();\n    const verifyOtp = useCallback((handleVerificationRequired, verificationToken, destination, localVerificationUUID) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        if (!user && !userWithMissingInfo)\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        // VerificationUUID is saved in the context in case the view changes\n        // after a profile update (changing the view from edit profile to verify email)\n        if (!localVerificationUUID && !contextVerificationUUID)\n            throw new DynamicError('No verification UUID is available');\n        const verificationUUID = (localVerificationUUID !== null && localVerificationUUID !== void 0 ? localVerificationUUID : contextVerificationUUID);\n        const verify = destination === 'email' ? verifyEmail : verifySms;\n        const updateSelfResponse = yield verify({\n            environmentId,\n            verificationToken,\n            verificationUUID,\n        });\n        const updatedUser = updateSelfResponse.user;\n        const missingFields = (_a = updatedUser === null || updatedUser === void 0 ? void 0 : updatedUser.missingFields) !== null && _a !== void 0 ? _a : [];\n        const requiredVerificationDestination = getVerificationDestination(updateSelfResponse.nextView);\n        // If verification is not needed then we can update the user profile immediately.\n        storeAuthTokenAndUser(updateSelfResponse);\n        if (requiredVerificationDestination)\n            return handleVerificationRequired({\n                destination: requiredVerificationDestination,\n                missingFields,\n                updateUserProfileResponse: updateSelfResponse,\n            });\n        return {\n            isEmailVerificationRequired: false,\n            isSmsVerificationRequired: false,\n            missingFields,\n            updateUserProfileResponse: updateSelfResponse,\n        };\n    }), [contextVerificationUUID, environmentId, user, userWithMissingInfo]);\n    return { verifyOtp };\n};\n/**\n * Hook to make verifications and already handle nuances like handling additional verifications\n * and setting the user jwt on success\n */\n// ATTENTION: THIS IS EXPOSED TO THE PUBLIC!\nconst useOtpVerificationRequest = () => {\n    const handleVerificationRequired = useHandleVerificationRequired();\n    const { verifyOtp } = useOtpVerificationRequestRaw();\n    return useMemo(() => ({\n        verifyOtp: (token, destination, verificationUUID) => verifyOtp(handleVerificationRequired, token, destination, verificationUUID),\n    }), [handleVerificationRequired, verifyOtp]);\n};\n\nexport { useOtpVerificationRequest, useOtpVerificationRequestRaw };\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;;;CAGC,GACD,MAAM,+BAA+B;IACjC,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,mBAAmB,EAAE,GAAG,CAAA,GAAA,sPAAA,CAAA,4BAAyB,AAAD;IAC7E,MAAM,EAAE,kBAAkB,uBAAuB,EAAE,GAAG,CAAA,GAAA,gOAAA,CAAA,kBAAe,AAAD;IACpE,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,4BAA4B,mBAAmB,aAAa,wBAA0B,CAAA,GAAA,+KAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;YACnJ,IAAI;YACJ,IAAI,CAAC,QAAQ,CAAC,qBACV,MAAM,IAAI,2KAAA,CAAA,eAAY,CAAC,uMAAA,CAAA,qBAAkB;YAC7C,oEAAoE;YACpE,+EAA+E;YAC/E,IAAI,CAAC,yBAAyB,CAAC,yBAC3B,MAAM,IAAI,2KAAA,CAAA,eAAY,CAAC;YAC3B,MAAM,mBAAoB,0BAA0B,QAAQ,0BAA0B,KAAK,IAAI,wBAAwB;YACvH,MAAM,SAAS,gBAAgB,UAAU,wMAAA,CAAA,cAAW,GAAG,oMAAA,CAAA,YAAS;YAChE,MAAM,qBAAqB,MAAM,OAAO;gBACpC;gBACA;gBACA;YACJ;YACA,MAAM,cAAc,mBAAmB,IAAI;YAC3C,MAAM,gBAAgB,CAAC,KAAK,gBAAgB,QAAQ,gBAAgB,KAAK,IAAI,KAAK,IAAI,YAAY,aAAa,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,EAAE;YACpJ,MAAM,kCAAkC,CAAA,GAAA,2PAAA,CAAA,6BAA0B,AAAD,EAAE,mBAAmB,QAAQ;YAC9F,iFAAiF;YACjF,CAAA,GAAA,mPAAA,CAAA,wBAAqB,AAAD,EAAE;YACtB,IAAI,iCACA,OAAO,2BAA2B;gBAC9B,aAAa;gBACb;gBACA,2BAA2B;YAC/B;YACJ,OAAO;gBACH,6BAA6B;gBAC7B,2BAA2B;gBAC3B;gBACA,2BAA2B;YAC/B;QACJ,IAAI;QAAC;QAAyB;QAAe;QAAM;KAAoB;IACvE,OAAO;QAAE;IAAU;AACvB;AACA;;;CAGC,GACD,4CAA4C;AAC5C,MAAM,4BAA4B;IAC9B,MAAM,6BAA6B,CAAA,GAAA,2PAAA,CAAA,gCAA6B,AAAD;IAC/D,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM,CAAC;YAClB,WAAW,CAAC,OAAO,aAAa,mBAAqB,UAAU,4BAA4B,OAAO,aAAa;QACnH,CAAC,GAAG;QAAC;QAA4B;KAAU;AAC/C","ignoreList":[0]}},
    {"offset": {"line": 851, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 857, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/authenticationHooks/useSignConnectOnlyUser/useSignConnectOnlyUser.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../../_virtual/_tslib.js';\nimport { isEmbeddedConnector, isBloctoConnector } from '@dynamic-labs/wallet-connector-core';\nimport 'react';\nimport '../../../../context/DynamicContext/DynamicContext.js';\nimport '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport 'react/jsx-runtime';\nimport { useViewContext } from '../../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport '@dynamic-labs/utils';\nimport '../../../constants/colors.js';\nimport '../../../constants/values.js';\nimport '../../../../store/state/loadingAndLifecycle.js';\nimport '../../../../shared/consts/index.js';\nimport '../../../../events/dynamicEvents.js';\nimport { useCaptchaContext } from '../../../../context/CaptchaContext/CaptchaContext.js';\nimport { useErrorContext } from '../../../../context/ErrorContext/ErrorContext.js';\nimport '@dynamic-labs/multi-wallet';\nimport 'react-international-phone';\nimport '../../../../config/ApiEndpoint.js';\nimport '../../../../store/state/user/user.js';\nimport '../../../../locale/locale.js';\nimport '../../../../store/state/projectSettings/projectSettings.js';\nimport { useVerifyWallet } from '../../useVerifyWallet/useVerifyWallet.js';\nimport '../../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport '../../../../context/WalletContext/WalletContext.js';\nimport '../../useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';\nimport '../../../../context/ThemeContext/ThemeContext.js';\nimport '../../useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport '@dynamic-labs/types';\nimport '../../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../../context/LoadingContext/LoadingContext.js';\nimport '../../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport 'yup';\nimport '../../../../context/MockContext/MockContext.js';\nimport '../../../../views/CollectUserDataView/useFields.js';\nimport '../../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../../../../store/state/environmentId.js';\nimport '../../../../store/state/walletConnectorOptions.js';\nimport '../../../../context/UserWalletsContext/UserWalletsContext.js';\nimport 'react-i18next';\nimport '../../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../../components/Alert/Alert.js';\nimport '../../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../../components/IconButton/IconButton.js';\nimport '../../../../components/InlineWidget/InlineWidget.js';\nimport '../../../../components/Input/Input.js';\nimport '../../../../components/IsBrowser/IsBrowser.js';\nimport '../../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../../components/Popper/Popper/Popper.js';\nimport '../../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../../context/FooterAnimationContext/index.js';\nimport '../../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../../context/PasskeyContext/PasskeyContext.js';\nimport '../../../../store/state/sendBalances.js';\nimport '../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../../../index.js';\nimport '../../../../store/state/tokenBalances.js';\nimport '../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\nimport { useInternalDynamicContext } from '../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';\n\nconst useSignConnectOnlyUser = () => {\n    const { setView } = useViewContext();\n    const { setErrorMessage } = useErrorContext();\n    const { getCaptchaToken } = useCaptchaContext();\n    const { connectWallet, consumeNonce, displaySiweStatement, projectSettings, environmentId, setIsSingleWalletAccount, setShowAuthFlow, setSelectedWalletConnectorKey, walletUiUtils, } = useInternalDynamicContext();\n    const verifyWallet = useVerifyWallet({\n        consumeNonce,\n        displaySiweStatement,\n        environmentId,\n        projectSettings,\n        setIsSingleWalletAccount,\n    });\n    return (_a) => __awaiter(void 0, [_a], void 0, function* ({ walletConnector, getAddressOpts = undefined }) {\n        try {\n            if (isEmbeddedConnector(walletConnector) &&\n                !isBloctoConnector(walletConnector)) {\n                walletUiUtils.disabledConfirmationOnce();\n            }\n            // Prepare states to show the pending signature view (without back button)\n            // We need this because in connect-only we don't want to show wallet-list\n            // We don't want to show the back button in the pending signature view\n            // because we don't want to go back to the wallet-list\n            setSelectedWalletConnectorKey(walletConnector.key);\n            setView('pending-signature-without-back-button');\n            setShowAuthFlow(true);\n            // Wallet should be already connected at this point\n            // We just need to verify it\n            const connectionResult = yield connectWallet(walletConnector, getAddressOpts);\n            if (!(connectionResult === null || connectionResult === void 0 ? void 0 : connectionResult.address)) {\n                return;\n            }\n            yield verifyWallet({\n                captchaToken: getCaptchaToken(),\n                publicWalletAddress: connectionResult.address,\n                walletConnector,\n            });\n        }\n        catch (err) {\n            logger.debug(err);\n            setErrorMessage(err.toString());\n            setShowAuthFlow(false, { emitCancelAuth: true });\n            return;\n        }\n    });\n};\n\nexport { useSignConnectOnlyUser };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7EA;AAAA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA,MAAM,yBAAyB;IAC3B,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,gNAAA,CAAA,iBAAc,AAAD;IACjC,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,kNAAA,CAAA,kBAAe,AAAD;IAC1C,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,sNAAA,CAAA,oBAAiB,AAAD;IAC5C,MAAM,EAAE,aAAa,EAAE,YAAY,EAAE,oBAAoB,EAAE,eAAe,EAAE,aAAa,EAAE,wBAAwB,EAAE,eAAe,EAAE,6BAA6B,EAAE,aAAa,EAAG,GAAG,CAAA,GAAA,sPAAA,CAAA,4BAAyB,AAAD;IAChN,MAAM,eAAe,CAAA,GAAA,+NAAA,CAAA,kBAAe,AAAD,EAAE;QACjC;QACA;QACA;QACA;QACA;IACJ;IACA,OAAO,CAAC,KAAO,CAAA,GAAA,+KAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;YAAC;SAAG,EAAE,KAAK,GAAG,UAAW,EAAE,eAAe,EAAE,iBAAiB,SAAS,EAAE;YACrG,IAAI;gBACA,IAAI,CAAA,GAAA,8NAAA,CAAA,sBAAmB,AAAD,EAAE,oBACpB,CAAC,CAAA,GAAA,0NAAA,CAAA,oBAAiB,AAAD,EAAE,kBAAkB;oBACrC,cAAc,wBAAwB;gBAC1C;gBACA,0EAA0E;gBAC1E,yEAAyE;gBACzE,sEAAsE;gBACtE,sDAAsD;gBACtD,8BAA8B,gBAAgB,GAAG;gBACjD,QAAQ;gBACR,gBAAgB;gBAChB,mDAAmD;gBACnD,4BAA4B;gBAC5B,MAAM,mBAAmB,MAAM,cAAc,iBAAiB;gBAC9D,IAAI,CAAC,CAAC,qBAAqB,QAAQ,qBAAqB,KAAK,IAAI,KAAK,IAAI,iBAAiB,OAAO,GAAG;oBACjG;gBACJ;gBACA,MAAM,aAAa;oBACf,cAAc;oBACd,qBAAqB,iBAAiB,OAAO;oBAC7C;gBACJ;YACJ,EACA,OAAO,KAAK;gBACR,2LAAA,CAAA,SAAM,CAAC,KAAK,CAAC;gBACb,gBAAgB,IAAI,QAAQ;gBAC5B,gBAAgB,OAAO;oBAAE,gBAAgB;gBAAK;gBAC9C;YACJ;QACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1068, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}