{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/web3.js/node_modules/base-x/src/index.js"],"sourcesContent":["'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (psz < source.length) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/web3.js/node_modules/bs58/index.js"],"sourcesContent":["var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n"],"names":[],"mappings":"AAAA,IAAI;AACJ,IAAI,WAAW;AAEf,OAAO,OAAO,GAAG,MAAM","ignoreList":[0]}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"file":"Layout.js","sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/buffer-layout/src/Layout.ts"],"sourcesContent":["unable to read source [project]/node_modules/@solana/buffer-layout/src/Layout.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;GAqBG,CAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2GG,CAEH,YAAY,CAAC;;;;;;AAEb,MAAA,6BAAgC;AAShC;;aAEa,CACb,SAAgB,eAAe,CAAC,CAAa;IAC3C,IAAI,CAAC,CAAC,CAAC,YAAY,UAAU,CAAC,EAAE;QAC9B,MAAM,IAAI,SAAS,CAAC,wBAAwB,CAAC,CAAC;KAC/C;AACH,CAAC;AAJD,QAAA,eAAA,GAAA,gBAIC;AAED;;aAEa,CACb,SAAgB,kBAAkB,CAAC,CAAa;IAC9C,eAAe,CAAC,CAAC,CAAC,CAAC;IACnB,OAAO,SAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AACvD,CAAC;AAHD,QAAA,kBAAA,GAAA,mBAGC;AAED;;;;;;;;;;;;;;;GAeG,CACH,MAAsB,MAAM;IAK1B,YAAY,IAAY,EAAE,QAAiB,CAAA;QACzC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3B,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAC;SAChD;QAED;;;;;;;;oEAQ4D,CAC5D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB;;;;;;;6BAOqB,CACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED;;;;;;;;;;;;;;OAcG,CACH,qBAAqB,GAAA;QACnB,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAwCD;;;;;;;;;;;;;;;OAeG,CACH,OAAO,CAAC,CAAc,EAAE,MAAe,EAAA;QACrC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YACjB,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAC;SAC5C;QACD,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED;;;;;;;;;;;;;;;OAeG,CACH,SAAS,CAAC,QAAgB,EAAA;QACxB,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAS,CAAC;QAC7D,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACxB,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACvB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;;;;;;;;;;;;;;;;;;OAmBG,CACH,SAAS,CAAC,MAAa,EAAA;QACrB,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA9JD,QAAA,MAAA,GAAA,OA8JC;AAED;;;;aAIa,CACb,SAAgB,gBAAgB,CAAC,IAAY,EAAE,EAAyB;IACtE,IAAI,EAAE,CAAC,QAAQ,EAAE;QACf,OAAO,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;KACvC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AALD,QAAA,gBAAA,GAAA,iBAKC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG,CACH,sHAAsH;AACtH,6EAA6E;AAC7E,SAAgB,qBAAqB,CAAI,KAAU,EAAE,MAAiB;IACpE,IAAI,UAAU,KAAK,OAAO,KAAK,EAAE;QAC/B,MAAM,IAAI,SAAS,CAAC,2BAA2B,CAAC,CAAC;KAClD;IACD,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;QAC1D,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;KACvD;IACD,IAAI,CAAC,CAAC,MAAM,IAAI,AAAC,MAAM,YAAY,MAAM,AAAC,CAAC,EAAE;QAC3C,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAC;KAChD;IACD,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,mBAAmB,CAAC,EAAE;QACrE,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;KAC7D;IACD,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IACvB,MAAM,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACjC,MAAM,CAAC,qBAAqB,GAAG,AAAC,GAAG,CAAG,CAAD,GAAK,KAAK,EAAE,CAAC,CAAC;IACnD,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE;QAC/C,KAAK,EAAE,CAAa,EAAE,MAAe;YACnC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAS,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;QAC7C,CAAC;QACD,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;IACH,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE;QACrC,KAAK,EAAE,CAAa,EAAE,MAAe;YACnC,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QAClC,CAAC;QACD,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;AACL,CAAC;AA5BD,QAAA,qBAAA,GAAA,sBA4BC;AAED;;;;;;;;;;;;;;;;;;;;GAoBG,CACH,MAAsB,cAAe,SAAQ,MAAc;IACzD;;;;;;;;;;OAUG,CACH,OAAO,GAAA;QACL,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAChD,CAAC;CACF;AAfD,QAAA,cAAA,GAAA,eAeC;AAED;;;;;;;;;;;;;;GAcG,CACH,MAAa,WAAY,SAAQ,cAAc;IAG7C,YAAY,WAAW,GAAG,CAAC,EAAE,QAAiB,CAAA;QAC5C,IAAI,AAAC,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,GAAK,CAAD,AAAE,IAAI,WAAW,CAAC,CAAE;YAC1D,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC;SACjE;QACD,KAAK,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAEpB;;gBAEQ,CACR,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,cAAA,EAAgB,CAChB,OAAO,GAAA;QACL,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,eAAe,CAAC,CAAC,CAAC,CAAC;QACnB,MAAM,GAAG,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;QAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IAC5C,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAe,EAAA;QAChD,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AA/BD,QAAA,WAAA,GAAA,YA+BC;AAED;;;;;;;;;;;;;;;;;;;GAmBG,CACH,MAAa,YAAa,SAAQ,cAAc;IAG9C,YAAY,MAAsB,EAAE,MAAM,GAAG,CAAC,EAAE,QAAiB,CAAA;QAC/D,IAAI,CAAC,CAAC,MAAM,YAAY,MAAM,CAAC,EAAE;YAC/B,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC7B,MAAM,IAAI,SAAS,CAAC,qCAAqC,CAAC,CAAC;SAC5D;QAED,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEhD,6BAAA,EAA+B,CAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB;;;;;8BAKsB,CACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,cAAA,EAAgB,CAChB,OAAO,GAAA;QACL,OAAO,AAAC,AAAC,IAAI,CAAC,MAAM,YAAY,IAAI,CAAC,GACzB,IAAI,CAAC,MAAM,YAAY,MAAM,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IACrD,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;CACF;AAzCD,QAAA,YAAA,GAAA,aAyCC;AAED;;;;;;;;;;;;;;;GAeG,CACH,MAAa,IAAK,SAAQ,MAAc;IACtC,YAAY,IAAY,EAAE,QAAiB,CAAA;QACzC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YACjB,MAAM,IAAI,UAAU,CAAC,8BAA8B,CAAC,CAAC;SACtD;IACH,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,kBAAkB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;CACF;AAlBD,QAAA,IAAA,GAAA,KAkBC;AAED;;;;;;;;;;;;;;;GAeG,CACH,MAAa,MAAO,SAAQ,MAAc;IACxC,YAAY,IAAY,EAAE,QAAiB,CAAA;QACzC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YACjB,MAAM,IAAI,UAAU,CAAC,8BAA8B,CAAC,CAAC;SACtD;IACH,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,kBAAkB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;CACF;AAlBD,QAAA,MAAA,GAAA,OAkBC;AAED;;;;;;;;;;;;;;;GAeG,CACH,MAAa,GAAI,SAAQ,MAAc;IACrC,YAAY,IAAY,EAAE,QAAiB,CAAA;QACzC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YACjB,MAAM,IAAI,UAAU,CAAC,8BAA8B,CAAC,CAAC;SACtD;IACH,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5D,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;CACF;AAlBD,QAAA,GAAA,GAAA,IAkBC;AAED;;;;;;;;;;;;;;;GAeG,CACH,MAAa,KAAM,SAAQ,MAAc;IACvC,YAAY,IAAY,EAAE,QAAiB,CAAA;QACzC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YACjB,MAAM,IAAI,UAAU,CAAC,8BAA8B,CAAC,CAAC;SACtD;IACH,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5D,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;CACF;AAlBD,QAAA,KAAA,GAAA,MAkBC;AAED,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAE9B;mBACmB,CACnB,SAAS,WAAW,CAAC,GAAW;IAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;IACrC,MAAM,IAAI,GAAG,GAAG,GAAG,AAAC,IAAI,GAAG,KAAK,CAAC,CAAC;IAClC,OAAO;QAAC,IAAI;QAAE,IAAI;IAAA,CAAC,CAAC;AACtB,CAAC;AACD,+DAAA,EAAiE,CACjE,SAAS,YAAY,CAAC,IAAY,EAAE,IAAY;IAC9C,OAAO,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC;AAC7B,CAAC;AAED;;;;;;;;;;GAUG,CACH,MAAa,UAAW,SAAQ,MAAc;IAC5C,YAAY,QAAiB,CAAA;QAC3B,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACzC,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7C,OAAO,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;QAC/B,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AArBD,QAAA,UAAA,GAAA,WAqBC;AAED;;;;;;;;;;GAUG,CACH,MAAa,YAAa,SAAQ,MAAc;IAC9C,YAAY,QAAiB,CAAA;QAC3B,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACzC,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7C,OAAO,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;QAC/B,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AArBD,QAAA,YAAA,GAAA,aAqBC;AAED;;;;;;;;;;GAUG,CACH,MAAa,SAAU,SAAQ,MAAc;IAC3C,YAAY,QAAiB,CAAA;QAC3B,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACzC,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC5C,OAAO,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;QAC/B,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;QAC5C,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AArBD,QAAA,SAAA,GAAA,UAqBC;AAED;;;;;;;;;;GAUG,CACH,MAAa,WAAY,SAAQ,MAAc;IAC7C,YAAY,QAAiB,CAAA;QAC3B,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxC,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7C,OAAO,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;QAC/B,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACxC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AArBD,QAAA,WAAA,GAAA,YAqBC;AAED;;;;;;;;;GASG,CACH,MAAa,KAAM,SAAQ,MAAc;IACvC,YAAY,QAAiB,CAAA;QAC3B,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,kBAAkB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAChD,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AAfD,QAAA,KAAA,GAAA,MAeC;AAED;;;;;;;;;GASG,CACH,MAAa,OAAQ,SAAQ,MAAc;IACzC,YAAY,QAAiB,CAAA;QAC3B,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,kBAAkB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAChD,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AAfD,QAAA,OAAA,GAAA,QAeC;AAED;;;;;;;;;GASG,CACH,MAAa,MAAO,SAAQ,MAAc;IACxC,YAAY,QAAiB,CAAA;QAC3B,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,kBAAkB,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACjD,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AAfD,QAAA,MAAA,GAAA,OAeC;AAED;;;;;;;;;GASG,CACH,MAAa,QAAS,SAAQ,MAAc;IAC1C,YAAY,QAAiB,CAAA;QAC3B,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C,kBAAkB,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACjD,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AAfD,QAAA,QAAA,GAAA,SAeC;AAED;;;;;;;;;;;;;;;;GAgBG,CACH,MAAa,QAAY,SAAQ,MAAW;IAI1C,YAAY,aAAwB,EAAE,KAA8B,EAAE,QAAiB,CAAA;QACrF,IAAI,CAAC,CAAC,aAAa,YAAY,MAAM,CAAC,EAAE;YACtC,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,CAAC,AAAE,CAAD,IAAM,YAAY,cAAc,CAAC,GAAI,KAAK,CAAC,OAAO,EAAE,CAAC,GAClD,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,AAAC,CAAC,IAAI,KAAK,AAAE,CAAD,AAAE,EAAE;YACnD,MAAM,IAAI,SAAS,CAAC,qCAAqC,GACnC,uCAAuC,CAAC,CAAC;SAChE;QACD,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;QACd,IAAK,AAAD,CAAE,CAAC,KAAK,YAAY,cAAc,CAAC,CAAC,GAChC,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,CAAE;YAC/B,IAAI,GAAG,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC;SACnC;QAED,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEtB,wDAAA,EAA0D,CAC1D,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC;;;;0DAIkD,CAClD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,cAAA,EAAgB,CAChB,OAAO,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC/B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAClB,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QACD,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,KAAK,YAAY,cAAc,EAAE;YACnC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YAC/B,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;SACxC,MAAM;YACL,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,MAAO,GAAG,GAAG,KAAK,CAAE;gBAClB,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC;gBACrD,EAAE,GAAG,CAAC;aACP;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,MAAM,EAAE,GAAQ,EAAE,CAAC;QACnB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,KAAK,YAAY,cAAc,EAAE;YACnC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;SACjC;QACD,MAAO,CAAC,GAAG,KAAK,CAAE;YAChB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;YAC9C,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;YAChD,CAAC,IAAI,CAAC,CAAC;SACR;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;;;;;;;;uCASmC,CACnC,MAAM,CAAC,GAAQ,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QACxC,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;QAC/B,MAAM,IAAI,GAAW,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;YAC1C,OAAO,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC;QAChD,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,IAAI,IAAI,CAAC,KAAK,YAAY,cAAc,EAAE;YACxC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA1FD,QAAA,QAAA,GAAA,SA0FC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BG,CACH,MAAa,SAAa,SAAQ,MAAS;IAIzC,YAAY,MAA4B,EAAE,QAAiB,EAAE,cAAwB,CAAA;QACnF,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAClB,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAG,CAAD,EAAI,IAAI,AAAC,CAAC,YAAY,MAAM,CAAC,CAAE,IAAI,CAAC,CAAC,EAAE;YACvE,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC;SACjE;QACD,IAAI,AAAC,SAAS,KAAK,OAAO,QAAQ,CAAC,GAC3B,SAAS,KAAK,cAAc,CAAC,CAAE;YACrC,cAAc,GAAG,QAAQ,CAAC;YAC1B,QAAQ,GAAG,SAAS,CAAC;SACtB;QAED,qDAAA,EAAuD,CACvD,KAAK,MAAM,EAAE,IAAI,MAAM,CAAE;YACvB,IAAI,AAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GACT,SAAS,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAE;gBAClC,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;aACzE;SACF;QAED,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;QACd,IAAI;YACF,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,CAAG,CAAD,GAAK,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;SAC5D,CAAC,OAAO,CAAC,EAAE;QACV,eAAe;SAChB;QACD,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEtB;;;;;;;;;8BASsB,CACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB;;;;;;;;kCAQ0B,CAC1B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,CAAC;IACzC,CAAC;IAED,cAAA,EAAgB,CAChB,OAAO,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC/B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAClB,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QACD,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI;YACF,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE;gBACrC,MAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;gBAClC,MAAM,IAAI,GAAG,CAAC;gBACd,OAAO,IAAI,GAAG,GAAG,CAAC;YACpB,CAAC,EAAE,CAAC,CAAC,CAAC;SACP,CAAC,OAAO,CAAC,EAAE;YACV,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAC;SAC5C;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,eAAe,CAAC,CAAC,CAAC,CAAC;QACnB,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAO,CAAC;QAC/C,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,CAAE;YAC5B,IAAI,SAAS,KAAK,EAAE,CAAC,QAAQ,EAAE;gBAC7B,IAAI,CAAC,EAAE,CAAC,QAAmB,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;aACrD;YACD,MAAM,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,cAAc,IACf,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAE;gBAC5B,MAAM;aACP;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;0BAIsB,CACtB,MAAM,CAAC,GAAM,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QACtC,MAAM,WAAW,GAAG,MAAM,CAAC;QAC3B,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,CAAE;YAC5B,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;YACnB,SAAS,GAAG,AAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,AAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,SAAS,KAAK,EAAE,CAAC,QAAQ,EAAE;gBAC7B,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,QAAmB,CAAC,CAAC;gBACvC,IAAI,SAAS,KAAK,EAAE,EAAE;oBACpB,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;oBACrC,IAAI,CAAC,GAAG,IAAI,EAAE;wBACZ;oDAC4B,CAC5B,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;qBAC9B;iBACF;aACF;YACD,UAAU,GAAG,MAAM,CAAC;YACpB,MAAM,IAAI,IAAI,CAAC;SAChB;QACD;;;iBAGS,CACT,OAAO,AAAC,UAAU,GAAG,SAAS,CAAC,EAAG,WAAW,CAAC;IAChD,CAAC;IAED,cAAA,EAAgB,CAChB,SAAS,CAAC,MAAa,EAAA;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC1C,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,CAAE;YAC5B,IAAI,AAAC,SAAS,KAAK,EAAE,CAAC,QAAQ,CAAC,GACvB,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAE;gBAC1B,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;aACpC;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;;OAOG,CACH,SAAS,CAAC,QAAgB,EAAA;QACxB,IAAI,QAAQ,KAAK,OAAO,QAAQ,EAAE;YAChC,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAC;SAChD;QACD,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,CAAE;YAC5B,IAAI,EAAE,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBAC5B,OAAO,EAAE,CAAC;aACX;SACF;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;;;;;;;OAUG,CACH,QAAQ,CAAC,QAAgB,EAAA;QACvB,IAAI,QAAQ,KAAK,OAAO,QAAQ,EAAE;YAChC,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAC;SAChD;QACD,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,CAAE;YAC5B,IAAI,EAAE,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBAC5B,OAAO,MAAM,CAAC;aACf;YACD,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE;gBACf,MAAM,GAAG,CAAC,CAAC,CAAC;aACb,MAAM,IAAI,CAAC,IAAI,MAAM,EAAE;gBACtB,MAAM,IAAI,EAAE,CAAC,IAAI,CAAC;aACnB;SACF;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AAvLD,QAAA,SAAA,GAAA,UAuLC;AAED;;;;;;;;;;;;;GAaG,CACH,MAAa,kBAAkB;IAE7B,YAAY,QAAgB,CAAA;QAC1B;;;uBAGe,CACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED;;;+DAG2D,CAC3D,MAAM,CAAC,CAAc,EAAE,MAAe,EAAA;QACpC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACpD,CAAC;IAED;;;gEAG4D,CAC5D,MAAM,CAAC,GAAM,EAAE,CAAa,EAAE,MAAe,EAAA;QAC3C,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACpD,CAAC;CACF;AAzBD,QAAA,kBAAA,GAAA,mBAyBC;AAED;;;;;;;;;;;;;;;;GAgBG,CACH,MAAa,wBAAyB,SAAQ,kBAA0B;IAEtE,YAAY,MAAsB,EAAE,QAAiB,CAAA;QACnD,IAAI,CAAC,CAAE,AAAD,MAAO,YAAY,cAAc,CAAC,GAC/B,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE;YAC1B,MAAM,IAAI,SAAS,CAAC,mDAAmD,CAAC,CAAC;SAC1E;QAED,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,IAAI,SAAS,CAAC,CAAC;QAEhD;oBACY,CACZ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,yEAAA,EAA2E,CAC3E,MAAM,CAAC,CAAa,EAAE,MAAe,EAAA;QACnC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,yEAAA,EAA2E,CAC3E,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAe,EAAA;QAChD,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IAC5C,CAAC;CACF;AAxBD,QAAA,wBAAA,GAAA,yBAwBC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0DG,CACH,MAAa,KAAM,SAAQ,MAAoB;IAY7C,YACI,KAA0D,EAC1D,aAA2C,EAC3C,QAAiB,CAAA;QAEnB,IAAI,aAAiC,CAAC;QACtC,IAAI,AAAC,KAAK,YAAY,IAAI,CAAC,GACnB,KAAK,YAAY,MAAM,CAAC,CAAE;YAChC,aAAa,GAAG,IAAI,wBAAwB,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;SACvE,MAAM,IAAI,AAAC,KAAK,YAAY,cAAc,CAAC,GAC9B,KAAK,CAAC,OAAO,EAAE,EAAE;YAC7B,aAAa,GAAG,IAAI,wBAAwB,CAAC,KAAK,CAAC,CAAC;SACrD,MAAM,IAAI,CAAC,CAAC,KAAK,YAAY,kBAAkB,CAAC,EAAE;YACjD,MAAM,IAAI,SAAS,CAAC,qCAAqC,GACnC,+BAA+B,CAAC,CAAC;SACxD,MAAM;YACL,aAAa,GAAG,KAAK,CAAC;SACvB;QACD,IAAI,SAAS,KAAK,aAAa,EAAE;YAC/B,aAAa,GAAG,IAAI,CAAC;SACtB;QACD,IAAI,CAAC,CAAC,AAAC,IAAI,KAAK,aAAa,CAAC,GACpB,aAAa,YAAY,MAAM,AAAC,CAAC,EAAE;YAC3C,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;SAC/D;QACD,IAAI,IAAI,KAAK,aAAa,EAAE;YAC1B,IAAI,CAAC,GAAG,aAAa,CAAC,IAAI,EAAE;gBAC1B,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;aAC1D;YACD,IAAI,SAAS,KAAK,aAAa,CAAC,QAAQ,EAAE;gBACxC,aAAa,GAAG,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;aACpD;SACF;QAED;;;gCAGwB,CACxB,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;QACd,IAAI,aAAa,EAAE;YACjB,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;YAC1B,IAAI,AAAC,CAAC,IAAI,IAAI,CAAC,GAAI,CAAC,AAAC,KAAK,YAAY,IAAI,CAAC,GACnC,KAAK,YAAY,MAAM,AAAC,CAAC,EAAE;gBACjC,IAAI,IAAK,aAA0C,CAAC,MAAM,CAAC,IAAI,CAAC;aACjE;SACF;QACD,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEtB;;;;;;;+BAOuB,CACvB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC;;;;mBAIW,CACX,IAAI,CAAC,uBAAuB,GAAG,AAAC,KAAK,YAAY,IAAI,CAAC,GAC9C,KAAK,YAAY,MAAM,CAAC,CAAC;QAEjC;;;;;;mBAMW,CACX,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC;;;;;;;;;sDAS8C,CAC9C,IAAI,CAAC,QAAQ,GAAG,CAAA,CAAE,CAAC;QAEnB,wDAAA,EAA0D,CAC1D,IAAI,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEpE;;;;;;;;;;;;iCAYyB,CACzB,IAAI,CAAC,gBAAgB,GAAG,SAAS,GAAG;YAClC,OAAO,qBAAqB,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC;QAEF;;;;;;;;;;;;4EAYoE,CACpE,IAAI,CAAC,sBAAsB,GAAG,SAAS,GAAG;YACxC,qBAAqB,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAED,cAAA,EAAgB,CAChB,OAAO,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC/B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAClB,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QACD;;iCAEyB,CACzB,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,GAAG,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACtE;QACD,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA4BG,CACH,uBAAuB,CAAC,GAAiB,EAAA;QACvC,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;YAC1E,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,IAC9C,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;gBAC7E,OAAO,SAAS,CAAC;aAClB;YACD,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5D,IAAI,GAAG,IACA,CAAC,AAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GACT,GAAG,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAE,AAAD,CAAE,EAAE;gBACrF,OAAO,GAAG,CAAC;aACZ;SACF,MAAM;YACL,IAAK,MAAM,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAE;gBAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,GAAG,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE;oBAC3E,OAAO,GAAG,CAAC;iBACZ;aACF;SACF;QACD,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACjD,CAAC;IAED;;;;;gDAK4C,CAC5C,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,IAAI,IAAkB,CAAC;QACvB,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;QAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACpC,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,SAAS,KAAK,GAAG,EAAE;YACrB,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,IAAI,CAAC,uBAAuB,EAAE;gBAChC,aAAa,GAAI,GAAgC,CAAC,MAAM,CAAC,IAAI,CAAC;aAC/D;YACD,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACpC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;YAC3B,gFAAgF;YAChF,oEAAoE;YACpE,IAAI,CAAC,aAAc,CAAC,QAAS,CAAC,GAAG,aAAc,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,GAAG,aAAa,CAAC,CAAC;SACnF,MAAM;YACL,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;SAC9B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;iBAKa,CACb,MAAM,CAAC,GAAiB,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QACjD,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,SAAS,KAAK,GAAG,EAAE;YACrB,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;YAC/B,4DAA4D;YAC5D,oEAAoE;YACpE,MAAM,GAAG,GAAG,IAAI,CAAC,aAAc,CAAC;YAChC,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,IAAI,CAAC,uBAAuB,EAAE;gBAChC,aAAa,GAAI,GAAgC,CAAC,MAAM,CAAC,IAAI,CAAC;aAC/D;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;YACzC,sDAAsD;YACtD,oEAAoE;YACpE,OAAO,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAS,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,aAAa,CAAC,CAAC;SAClF;QACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;IAED;;;;;;;;;;;;iCAY6B,CAC7B,UAAU,CAAC,OAAe,EAAE,MAA4B,EAAE,QAAgB,EAAA;QACxE,MAAM,EAAE,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAC5B,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;;;;;;;;;;;;OAaG,CACH,UAAU,CAAC,EAAuB,EAAE,MAAM,GAAG,CAAC,EAAA;QAC5C,IAAI,OAAe,CAAC;QACpB,IAAI,EAAE,YAAY,UAAU,EAAE;YAC5B,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;SACjD,MAAM;YACL,OAAO,GAAG,EAAE,CAAC;SACd;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;CACF;AA3SD,QAAA,KAAA,GAAA,MA2SC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG,CACH,MAAa,aAAc,SAAQ,MAAoB;IAOrD,YAAY,KAAY,EAAE,OAAe,EAAE,MAAmC,EAAE,QAAgB,CAAA;QAC9F,IAAI,CAAC,CAAC,KAAK,YAAY,KAAK,CAAC,EAAE;YAC7B,MAAM,IAAI,SAAS,CAAC,uBAAuB,CAAC,CAAC;SAC9C;QACD,IAAI,AAAC,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAK,CAAD,AAAE,GAAG,OAAO,CAAC,CAAE;YACjD,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC;SACjE;QACD,IAAK,AAAD,QAAS,KAAK,OAAO,MAAM,CAAC,GACxB,SAAS,KAAK,QAAQ,CAAC,CAAE;YAC/B,QAAQ,GAAG,MAAM,CAAC;YAClB,MAAM,GAAG,IAAI,CAAC;SACf;QACD,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,CAAC,MAAM,YAAY,MAAM,CAAC,EAAE;gBAC/B,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAC;aAChD;YACD,IAAK,AAAD,IAAK,KAAK,KAAK,CAAC,aAAa,CAAC,GAC1B,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,GACjB,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAE;gBAC/C,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;aAClE;YACD,IAAI,QAAQ,KAAK,OAAO,QAAQ,EAAE;gBAChC,MAAM,IAAI,SAAS,CAAC,qCAAqC,CAAC,CAAC;aAC5D;SACF;QACD,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE;YAClB,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,AAAC,CAAC,IAAI,IAAI,CAAC,GAAI,KAAK,CAAC,uBAAuB,EAAE;gBAChD,IAAI,IAAK,KAAK,CAAC,aAA0C,CAAC,MAAM,CAAC,IAAI,CAAC;aACvE;SACF;QACD,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEtB,qDAAA,EAAuD,CACvD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB;;oBAEY,CACZ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB;;;mBAGW,CACX,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC;IAC/B,CAAC;IAED,cAAA,EAAgB,CAChB,OAAO,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC/B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAClB;2BACe,CACf,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QACD,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE;YACtC,aAAa,GAAI,IAAI,CAAC,KAAK,CAAC,aAA0C,CAAC,MAAM,CAAC,IAAI,CAAC;SACpF;QACD,oEAAA,EAAsE,CACtE,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,GAAG,aAAa,CAAC,CAAC;SACvD;QACD,OAAO,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC1C,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE;YAC7C,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;SACrC;QACD,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE;YACtC,aAAa,GAAI,IAAI,CAAC,KAAK,CAAC,aAA0C,CAAC,MAAM,CAAC,IAAI,CAAC;SACpF;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,GAAG,aAAa,CAAC,CAAC;SACrE,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;SAC5B,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE;YAC7C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;SACxD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAiB,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QACjD,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE;YACtC,aAAa,GAAI,IAAI,CAAC,KAAK,CAAC,aAA0C,CAAC,MAAM,CAAC,IAAI,CAAC;SACpF;QACD,IAAI,IAAI,CAAC,MAAM,IACP,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE;YAClE,MAAM,IAAI,SAAS,CAAC,yBAAyB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChE;QACD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;QACzD,IAAI,IAAI,GAAG,aAAa,CAAC;QACzB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,aAAa,CAAC,CAAC;YAClE,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,GAAG,aAAa,CAAC,CAAC;YACvD,IAAI,AAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAClB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAE;gBAC/B,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;aAC9D;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;uCACmC,CACnC,SAAS,CAAC,MAAa,EAAA;QACrB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACtC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA9HD,QAAA,aAAA,GAAA,cA8HC;AAED;;;;;cAKc,CACd,SAAS,gBAAgB,CAAC,CAAS;IACjC,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,CAAC,IAAI,WAAW,CAAC;KAClB;IACD,OAAO,CAAC,CAAC;AACX,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG,CACH,MAAa,YAAa,SAAQ,MAAoB;IAQpD,YAAY,IAAmB,EAAE,GAAqB,EAAE,QAAiB,CAAA;QACvE,IAAI,CAAC,CAAC,AAAC,IAAI,YAAY,IAAI,CAAC,GAClB,IAAI,YAAY,MAAM,AAAC,CAAC,EAAE;YAClC,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;SAC7D;QACD,IAAI,AAAC,QAAQ,KAAK,OAAO,GAAG,CAAC,GACrB,SAAS,KAAK,QAAQ,CAAC,CAAE;YAC/B,QAAQ,GAAG,GAAG,CAAC;YACf,GAAG,GAAG,KAAK,CAAC;SACb;QACD,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YACjB,MAAM,IAAI,UAAU,CAAC,4BAA4B,CAAC,CAAC;SACpD;QACD,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAE3B;;oCAE4B,CAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB;;;;;;wDAMgD,CAChD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;QAEjB;;;;;yDAKiD,CACjD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB;;sDAE8C,CAC9C,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,eAAe,GAAG,SAAS,CAAS;YACvC,KAAK,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,GAAG;YACrB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;IACJ,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,CAAE;YAC5B,IAAI,SAAS,KAAK,EAAE,CAAC,QAAQ,EAAE;gBAC7B,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAClC;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;0EAIsE,CACtE,MAAM,CAAC,GAAiB,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QACjD,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,CAAE;YAC5B,IAAI,SAAS,KAAK,EAAE,CAAC,QAAQ,EAAE;gBAC7B,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;gBAC5B,IAAI,SAAS,KAAK,EAAE,EAAE;oBACpB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;iBACf;aACF;SACF;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;;;;4BAQwB,CACxB,QAAQ,CAAC,IAAY,EAAE,QAAgB,EAAA;QACrC,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;;;;;2BAMuB,CACvB,qDAAqD;IACrD,wDAAwD;IACxD,UAAU,CAAC,QAAgB,EAAA;QACzB,8CAA8C;QAC9C,MAAM,EAAE,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;;;;;;OAOG,CACH,QAAQ,CAAC,QAAgB,EAAA;QACvB,IAAI,QAAQ,KAAK,OAAO,QAAQ,EAAE;YAChC,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAC;SAChD;QACD,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,CAAE;YAC5B,IAAI,EAAE,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBAC5B,OAAO,EAAE,CAAC;aACX;SACF;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA5ID,QAAA,YAAA,GAAA,aA4IC;AAED;;;;;;;;;;;;;;;;;;;GAmBG,CACH,MAAa,QAAQ;IAOnB,YAAY,SAAuB,EAAE,IAAY,EAAE,QAAgB,CAAA;QACjE,IAAI,CAAC,CAAC,SAAS,YAAY,YAAY,CAAC,EAAE;YACxC,MAAM,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;SACzD;QACD,IAAK,AAAD,CAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAK,CAAD,AAAE,IAAI,IAAI,CAAC,CAAE;YAC5C,MAAM,IAAI,SAAS,CAAC,+BAA+B,CAAC,CAAC;SACtD;QACD,MAAM,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC;QACrC,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAG,CAAD,EAAI,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACxE,IAAI,AAAC,IAAI,GAAG,QAAQ,CAAC,EAAG,SAAS,EAAE;YACjC,MAAM,IAAI,KAAK,CAAC,oCAAoC,GAClC,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,MAAM,GAC/B,SAAS,GAAG,UAAU,CAAC,CAAC;SAC3C;QAED;sBACc,CACd,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,oCAAA,EAAsC,CACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB;;;;4DAIoD,CACpD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,EAAE,KAAK,IAAI,EAAE,EAAE,6BAA6B;YAC9C,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;SAC7B;QAED;;2DAEmD,CACnD,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,QAAQ,GAAG,IAAI,CAAC;SAC1C;QAED;4DACoD,CACpD,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;QAE/D;;;;;;;;;6BASqB,CACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED;oBACgB,CAChB,MAAM,CAAC,CAAc,EAAE,MAAe,EAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;QAC9C,MAAM,SAAS,GAAG,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,MAAM,KAAK,GAAG,SAAS,KAAK,IAAI,CAAC,KAAK,CAAC;QACvC,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;;;oEAIgE,CAChE,MAAM,CAAC,KAAc,EAAA;QACnB,IAAI,QAAQ,KAAK,OAAO,KAAK,IACtB,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IACvB,KAAK,KAAK,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAE;YAC3D,MAAM,IAAI,SAAS,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,CAAC,GACvC,uCAAuC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;SACjF;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;QAC9C,MAAM,SAAS,GAAG,gBAAgB,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GACrC,SAAS,CAAC,CAAC;IAC9C,CAAC;CACF;AA1FD,QAAA,QAAA,GAAA,SA0FC;AAED;;;;;;;;;;;;;;;GAeG,CACH,mCAAA,EAAqC,CACrC,MAAa,OAAQ,SAAQ,QAAQ;IACnC,YAAY,SAAuB,EAAE,QAAgB,CAAA;QACnD,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED;;4BAEwB,CACxB,MAAM,CAAC,CAAc,EAAE,MAAe,EAAA;QACpC,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,KAAuB,EAAA;QAC5B,IAAI,SAAS,KAAK,OAAO,KAAK,EAAE;YAC9B,mCAAmC;YACnC,KAAK,GAAG,CAAC,KAAK,CAAC;SAChB;QACD,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;CACF;AApBD,QAAA,OAAA,GAAA,QAoBC;AACD,kCAAA,EAAoC,CAEpC;;;;;;;;;;;;;GAaG,CACH,MAAa,IAAK,SAAQ,MAAkB;IAE1C,YAAY,MAA+B,EAAE,QAAiB,CAAA;QAC5D,IAAI,CAAC,CAAC,AAAE,CAAD,KAAO,YAAY,cAAc,CAAC,GAAI,MAAM,CAAC,OAAO,EAAE,CAAC,GACpD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,AAAC,CAAC,IAAI,MAAM,AAAE,CAAD,AAAE,EAAE;YACrD,MAAM,IAAI,SAAS,CAAC,kCAAkC,GAChC,uCAAuC,CAAC,CAAC;SAChE;QAED,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,MAAM,YAAY,cAAc,CAAC,EAAE;YACvC,IAAI,GAAG,MAAM,CAAC;SACf;QACD,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEtB;;;;gDAIwC,CACxC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,cAAA,EAAgB,CAChB,OAAO,CAAC,CAAa,EAAE,MAAe,EAAA;QACpC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,GAAG,IAAI,EAAE;YACZ,IAAI,GAAI,IAAI,CAAC,MAAyB,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;SAC1D;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,GAAG,IAAI,EAAE;YACZ,IAAI,GAAI,IAAI,CAAC,MAAyB,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;SAC1D;QACD,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC;IAC5D,CAAC;IAED;;;;uCAImC,CACnC,MAAM,CAAC,GAAe,EAAE,CAAa,EAAE,MAAc,EAAA;QACnD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QACvB,IAAI,IAAI,CAAC,MAAM,YAAY,cAAc,EAAE;YACzC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;SACnB;QACD,IAAI,CAAC,CAAC,GAAG,YAAY,UAAU,IAAI,IAAI,KAAK,GAAG,CAAC,MAAM,CAAC,EAAE;YACvD,MAAM,IAAI,SAAS,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,GACnC,oBAAoB,GAAG,IAAI,GAAG,qBAAqB,CAAC,CAAC;SAC5E;QACD,IAAI,AAAC,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,CAAC,MAAM,EAAE;YAC9B,MAAM,IAAI,UAAU,CAAC,8BAA8B,CAAC,CAAC;SACtD;QACD,MAAM,SAAS,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;QAC1C,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC5E,IAAI,IAAI,CAAC,MAAM,YAAY,cAAc,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;SACrC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAjED,QAAA,IAAA,GAAA,KAiEC;AAED;;;;;;;;;;;;GAYG,CACH,MAAa,OAAQ,SAAQ,MAAc;IACzC,YAAY,QAAiB,CAAA;QAC3B,KAAK,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACtB,CAAC;IAED,cAAA,EAAgB,CAChB,OAAO,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC/B,eAAe,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,GAAG,GAAG,MAAM,CAAC;QACjB,MAAO,AAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,GAAK,CAAD,AAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,AAAE;YACzC,GAAG,IAAI,CAAC,CAAC;SACV;QACD,OAAO,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC;IAC1B,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACrC,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClF,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAW,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC3C;;iBAES,CACT,IAAI,QAAQ,KAAK,OAAO,GAAG,EAAE;YAC3B,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;SACnB;QACD,MAAM,IAAI,GAAG,SAAA,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,AAAC,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,CAAC,MAAM,EAAE;YAC9B,MAAM,IAAI,UAAU,CAAC,0BAA0B,CAAC,CAAC;SAClD;QACD,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC1B,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,IAAI,GAAG,CAAC,CAAC;IAClB,CAAC;CACF;AAvCD,QAAA,OAAA,GAAA,QAuCC;AAED;;;;;;;;;;;;;;;;;;GAkBG,CACH,MAAa,IAAK,SAAQ,MAAc;IAEtC,YAAY,OAAyB,EAAE,QAAiB,CAAA;QACtD,IAAI,AAAC,QAAQ,KAAK,OAAO,OAAO,CAAC,GAAK,CAAD,QAAU,KAAK,QAAQ,CAAC,CAAE;YAC7D,QAAQ,GAAG,OAAO,CAAC;YACnB,OAAO,GAAG,SAAS,CAAC;SACrB;QACD,IAAI,SAAS,KAAK,OAAO,EAAE;YACzB,OAAO,GAAG,CAAC,CAAC,CAAC;SACd,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACrC,MAAM,IAAI,SAAS,CAAC,4BAA4B,CAAC,CAAC;SACnD;QAED,KAAK,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAEpB;;;;;;;6BAOqB,CACrB,IAAI,CAAC,OAAO,GAAG,OAAiB,CAAC;IACnC,CAAC;IAED,cAAA,EAAgB,CAChB,OAAO,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC/B,eAAe,CAAC,CAAC,CAAC,CAAC;QACnB,OAAO,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;IAC3B,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACrC,IAAI,AAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,GACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAE;YAC5B,MAAM,IAAI,UAAU,CAAC,6BAA6B,CAAC,CAAC;SACrD;QACD,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC9E,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAA0B,EAAE,CAAa,EAAE,MAAM,GAAG,CAAC,EAAA;QAC1D;;iBAES,CACT,IAAI,QAAQ,KAAK,OAAO,GAAG,EAAE;YAC3B,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;SACnB;QACD,MAAM,IAAI,GAAG,SAAA,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,AAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,GACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAE;YAC5B,MAAM,IAAI,UAAU,CAAC,6BAA6B,CAAC,CAAC;SACrD;QACD,IAAI,AAAC,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,CAAC,MAAM,EAAE;YAC9B,MAAM,IAAI,UAAU,CAAC,0BAA0B,CAAC,CAAC;SAClD;QACD,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA9DD,QAAA,IAAA,GAAA,KA8DC;AAED;;;;;;;;;;;;;;;;;;GAkBG,CACH,MAAa,QAAY,SAAQ,MAAS;IAExC,YAAY,KAAQ,EAAE,QAAiB,CAAA;QACrC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAEnB;;;;;;;;uCAQ+B,CAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,CAAc,EAAE,MAAe,EAAA;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,cAAA,EAAgB,CAChB,MAAM,CAAC,GAAM,EAAE,CAAc,EAAE,MAAe,EAAA;QAC5C,2BAAA,EAA6B,CAC7B,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AA3BD,QAAA,QAAA,GAAA,SA2BC;AAED,qCAAA,EAAuC,CAC1B,QAAA,MAAM,GAAG,AAAC,CAAC,WAAmB,EAAE,QAAiB,EAAe,CAAG,CAAD,GAAK,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;AAExH,sCAAA,EAAwC,CAC3B,QAAA,MAAM,GAAG,AAAC,CAAC,MAAsB,EAAE,MAAe,EAAE,QAAiB,EAAgB,CAC9F,CADgG,GAC5F,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEhD;WACW,CACE,QAAA,EAAE,GAAG,AAAC,CAAC,QAAiB,EAAQ,CAAG,CAAD,GAAK,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEvE;yBACyB,CACZ,QAAA,GAAG,GAAG,AAAC,CAAC,QAAiB,EAAQ,CAAG,CAAD,GAAK,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAExE;2BAC2B,CACd,QAAA,GAAG,GAAG,AAAC,CAAC,QAAiB,EAAQ,CAAG,CAAD,GAAK,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAExE;0BAC0B,CACb,QAAA,GAAG,GAAG,AAAC,CAAC,QAAiB,EAAQ,CAAG,CAAD,GAAK,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAExE;0BAC0B,CACb,QAAA,GAAG,GAAI,AAAD,CAAE,QAAiB,EAAQ,CAAG,CAAD,GAAK,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAExE;yBACyB,CACZ,QAAA,GAAG,GAAI,AAAD,CAAE,QAAiB,EAAQ,CAAG,CAAD,GAAK,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAExE;sCACsC,CACzB,QAAA,IAAI,GAAG,AAAC,CAAC,QAAiB,EAAc,CAAG,CAAD,GAAK,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AAElF;yBACyB,CACZ,QAAA,KAAK,GAAI,AAAD,CAAE,QAAiB,EAAU,CAAG,CAAD,GAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE9E;2BAC2B,CACd,QAAA,KAAK,GAAG,AAAC,CAAC,QAAiB,EAAU,CAAG,CAAD,GAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE9E;0BAC0B,CACb,QAAA,KAAK,GAAG,AAAC,CAAC,QAAiB,EAAU,CAAG,CAAD,GAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE9E;0BAC0B,CACb,QAAA,KAAK,GAAG,AAAC,CAAC,QAAiB,EAAU,CAAG,CAAD,GAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE9E;yBACyB,CACZ,QAAA,KAAK,GAAG,AAAC,CAAC,QAAiB,EAAU,CAAG,CAAD,GAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE9E;sCACsC,CACzB,QAAA,MAAM,GAAG,AAAC,CAAC,QAAiB,EAAgB,CAAG,CAAD,GAAK,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;AAExF;WACW,CACE,QAAA,EAAE,GAAG,AAAC,CAAC,QAAiB,EAAO,CAAG,CAAD,GAAK,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAErE;yBACyB,CACZ,QAAA,GAAG,GAAG,AAAC,CAAC,QAAiB,EAAO,CAAG,CAAD,GAAK,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEtE;2BAC2B,CACd,QAAA,GAAG,GAAG,AAAC,CAAC,QAAiB,EAAO,CAAG,CAAD,GAAK,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEtE;0BAC0B,CACb,QAAA,GAAG,GAAG,AAAC,CAAC,QAAiB,EAAO,CAAG,CAAD,GAAK,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEtE;0BAC0B,CACb,QAAA,GAAG,GAAG,AAAC,CAAC,QAAiB,EAAO,CAAG,CAAD,GAAK,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEtE;yBACyB,CACZ,QAAA,GAAG,GAAG,AAAC,CAAC,QAAiB,EAAO,CAAG,CAAD,GAAK,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEtE;6BAC6B,CAChB,QAAA,IAAI,GAAG,AAAC,CAAC,QAAiB,EAAa,CAAG,CAAD,GAAK,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAEhF;yBACyB,CACZ,QAAA,KAAK,GAAI,AAAD,CAAE,QAAiB,EAAS,CAAG,CAAD,GAAK,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE5E;2BAC2B,CACd,QAAA,KAAK,GAAG,AAAC,CAAC,QAAiB,EAAS,CAAG,CAAD,GAAK,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE5E;0BAC0B,CACb,QAAA,KAAK,GAAI,AAAD,CAAE,QAAiB,EAAS,CAAG,CAAD,GAAK,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE5E;0BAC0B,CACb,QAAA,KAAK,GAAG,AAAC,CAAC,QAAiB,EAAS,CAAG,CAAD,GAAK,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE5E;yBACyB,CACZ,QAAA,KAAK,GAAG,AAAC,CAAC,QAAiB,EAAS,CAAG,CAAD,GAAK,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE5E;6BAC6B,CAChB,QAAA,MAAM,GAAG,AAAC,CAAC,QAAiB,EAAe,CAAG,CAAD,GAAK,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;AAEtF,0EAAA,EAA4E,CAC/D,QAAA,GAAG,GAAG,AAAC,CAAC,QAAiB,EAAS,CAAG,CAAD,GAAK,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AAEvE,yEAAA,EAA2E,CAC9D,QAAA,KAAK,GAAG,AAAC,CAAC,QAAiB,EAAW,CAAG,CAAD,GAAK,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;AAE7E,2EAAA,EAA6E,CAChE,QAAA,GAAG,GAAG,AAAC,CAAC,QAAiB,EAAU,CAAG,CAAD,GAAK,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AAEzE,0EAAA,EAA4E,CAC/D,QAAA,KAAK,GAAG,AAAC,CAAC,QAAiB,EAAY,CAAG,CAAD,GAAK,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;AAE/E,0CAAA,EAA4C,CAC/B,QAAA,MAAM,GAAI,AAAD,CAAK,MAA4B,EAAE,QAAiB,EAAE,cAAwB,EAAgB,CAChH,CADkH,GAC9G,SAAS,CAAI,MAAM,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC;AAExD,6CAAA,EAA+C,CAClC,QAAA,IAAI,GAAG,AAAC,CAAC,IAAmB,EAAE,GAAqB,EAAE,QAAiB,EAAgB,CAC/F,CADiG,GAC7F,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE3C,yCAAA,EAA2C,CAC9B,QAAA,GAAG,GAAG,AAAC,CAAI,aAAwB,EAAE,KAA8B,EAAE,QAAiB,EAAe,CAC9G,CADgH,GAC5G,QAAQ,CAAI,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;AAErD,sCAAA,EAAwC,CAC3B,QAAA,KAAK,GAAG,AAAC,CAAC,KAA0D,EAC1D,aAA2C,EAAE,QAAiB,EAAS,CAC1F,CAD4F,GACxF,KAAK,CAAC,KAAK,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE/C,yDAAA,EAA2D,CAC9C,QAAA,wBAAwB,GAAG,AAAC,CAAC,MAAsB,EAAE,QAAiB,EAA4B,CAC3G,CAD6G,GACzG,wBAAwB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEpD,qCAAA,EAAuC,CAC1B,QAAA,IAAI,GAAG,AAAC,CAAC,MAA+B,EAAE,QAAiB,EAAQ,CAAG,CAAD,GAAK,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE/G,wCAAA,EAA0C,CAC7B,QAAA,IAAI,GAAG,AAAC,CAAC,QAAiB,EAAW,CAAG,CAAD,GAAK,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;AAE5E,qCAAA,EAAuC,CAC1B,QAAA,IAAI,GAAG,AAAC,CAAC,OAAe,EAAE,QAAiB,EAAQ,CAAG,CAAD,GAAK,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEhG,yCAAA,EAA2C,CAC9B,QAAA,QAAQ,GAAG,AAAC,CAAI,KAAQ,EAAE,QAAiB,EAAe,CAAG,CAAD,GAAK,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2306, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2312, "column": 0}, "map": {"version":3,"file":"base.js","sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/buffer-layout-utils/src/base.ts"],"sourcesContent":["import { Layout } from '@solana/buffer-layout';\n\nexport interface EncodeDecode<T> {\n    decode(buffer: Buffer, offset?: number): T;\n    encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nexport const encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n"],"names":[],"mappings":";;;AAOO,MAAM,YAAY,GAAG,CAAI,MAAiB,EAAmB,EAAE;IAClE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,OAAO;QAAE,MAAM;QAAE,MAAM;IAAA,CAAE,CAAC;AAC9B,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2329, "column": 0}, "map": {"version":3,"file":"bigint.js","sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/buffer-layout-utils/src/bigint.ts"],"sourcesContent":["import { blob, Layout } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base';\n\nexport const bigInt =\n    (length: number) =>\n    (property?: string): Layout<bigint> => {\n        const layout = blob(length, property);\n        const { encode, decode } = encodeDecode(layout);\n\n        const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n        bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n            const src = decode(buffer, offset);\n            return toBigIntLE(Buffer.from(src));\n        };\n\n        bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n            const src = toBufferLE(bigInt, length);\n            return encode(src, buffer, offset);\n        };\n\n        return bigIntLayout;\n    };\n\nexport const bigIntBE =\n    (length: number) =>\n    (property?: string): Layout<bigint> => {\n        const layout = blob(length, property);\n        const { encode, decode } = encodeDecode(layout);\n\n        const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n        bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n            const src = decode(buffer, offset);\n            return toBigIntBE(Buffer.from(src));\n        };\n\n        bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n            const src = toBufferBE(bigInt, length);\n            return encode(src, buffer, offset);\n        };\n\n        return bigIntLayout;\n    };\n\nexport const u64 = bigInt(8);\n\nexport const u64be = bigIntBE(8);\n\nexport const u128 = bigInt(16);\n\nexport const u128be = bigIntBE(16);\n\nexport const u192 = bigInt(24);\n\nexport const u192be = bigIntBE(24);\n\nexport const u256 = bigInt(32);\n\nexport const u256be = bigIntBE(32);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,IAAI,EAAU,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;;;;AAE/B,MAAM,MAAM,GACf,CAAC,MAAc,EAAE,CACjB,CADmB,AAClB,QAAiB,EAAkB,EAAE;QAClC,MAAM,MAAM,qKAAG,OAAA,AAAI,EAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAG,4LAAA,AAAY,EAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,YAAY,GAAG,MAA2C,CAAC;QAEjE,YAAY,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;YACrD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACnC,4JAAO,aAAA,AAAU,EAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,YAAY,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;YACrE,MAAM,GAAG,wJAAG,aAAA,AAAU,EAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACvC,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,OAAO,YAAY,CAAC;IACxB,CAAC,CAAC;AAEC,MAAM,QAAQ,GACjB,CAAC,MAAc,EAAE,CACjB,CADmB,AAClB,QAAiB,EAAkB,EAAE;QAClC,MAAM,MAAM,qKAAG,OAAA,AAAI,EAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAG,+LAAA,AAAY,EAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,YAAY,GAAG,MAA2C,CAAC;QAEjE,YAAY,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;YACrD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACnC,QAAO,iKAAA,AAAU,EAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,YAAY,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;YACrE,MAAM,GAAG,wJAAG,aAAA,AAAU,EAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACvC,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,OAAO,YAAY,CAAC;IACxB,CAAC,CAAC;AAEC,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAEtB,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAE1B,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAExB,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;AAE5B,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAExB,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;AAE5B,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAExB,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2389, "column": 0}, "map": {"version":3,"file":"decimal.js","sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/buffer-layout-utils/src/decimal.ts"],"sourcesContent":["import { Layout } from '@solana/buffer-layout';\nimport BigNumber from 'bignumber.js';\nimport { encodeDecode } from './base';\nimport { u128 } from './bigint';\n\nexport const WAD = new BigNumber('1e+18');\n\nexport const decimal = (property?: string): Layout<BigNumber> => {\n    const layout = u128(property);\n    const { encode, decode } = encodeDecode(layout);\n\n    const decimalLayout = layout as Layout<unknown> as Layout<BigNumber>;\n\n    decimalLayout.decode = (buffer: Buffer, offset: number) => {\n        const src = decode(buffer, offset).toString();\n        return new BigNumber(src).div(WAD);\n    };\n\n    decimalLayout.encode = (decimal: BigNumber, buffer: Buffer, offset: number) => {\n        const src = BigInt(decimal.times(WAD).integerValue().toString());\n        return encode(src, buffer, offset);\n    };\n\n    return decimalLayout;\n};\n"],"names":[],"mappings":";;;;AACA,OAAO,SAAS,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AACtC,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;;;;AAEzB,MAAM,GAAG,GAAG,kJAAI,UAAS,CAAC,OAAO,CAAC,CAAC;AAEnC,MAAM,OAAO,GAAG,CAAC,QAAiB,EAAqB,EAAE;IAC5D,MAAM,MAAM,sLAAG,OAAA,AAAI,EAAC,QAAQ,CAAC,CAAC;IAC9B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,oLAAG,eAAA,AAAY,EAAC,MAAM,CAAC,CAAC;IAEhD,MAAM,aAAa,GAAG,MAA8C,CAAC;IAErE,aAAa,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;QACtD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC9C,OAAO,kJAAI,UAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,aAAa,CAAC,MAAM,GAAG,CAAC,OAAkB,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;QAC1E,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjE,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,aAAa,CAAC;AACzB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2420, "column": 0}, "map": {"version":3,"file":"native.js","sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/buffer-layout-utils/src/native.ts"],"sourcesContent":["import { Layout, u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base';\n\nexport const bool = (property?: string): Layout<boolean> => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n\n    const boolLayout = layout as Layout<unknown> as Layout<boolean>;\n\n    boolLayout.decode = (buffer: Buffer, offset: number) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n\n    boolLayout.encode = (bool: boolean, buffer: Buffer, offset: number) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n\n    return boolLayout;\n};\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAU,EAAE,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;;;AAE/B,MAAM,IAAI,GAAG,CAAC,QAAiB,EAAmB,EAAE;IACvD,MAAM,MAAM,qKAAG,KAAA,AAAE,EAAC,QAAQ,CAAC,CAAC;IAC5B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,oLAAG,eAAA,AAAY,EAAC,MAAM,CAAC,CAAC;IAEhD,MAAM,UAAU,GAAG,MAA4C,CAAC;IAEhE,UAAU,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;QACnD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACnC,OAAO,CAAC,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC;IAEF,UAAU,CAAC,MAAM,GAAG,CAAC,IAAa,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;QAClE,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACzB,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2447, "column": 0}, "map": {"version":3,"file":"web3.js","sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/buffer-layout-utils/src/web3.ts"],"sourcesContent":["import { blob, Layout } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base';\n\nexport const publicKey = (property?: string): Layout<PublicKey> => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n\n    const publicKeyLayout = layout as Layout<unknown> as Layout<PublicKey>;\n\n    publicKeyLayout.decode = (buffer: Buffer, offset: number) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n\n    publicKeyLayout.encode = (publicKey: PublicKey, buffer: Buffer, offset: number) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n\n    return publicKeyLayout;\n};\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,IAAI,EAAU,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;;;;AAE/B,MAAM,SAAS,GAAG,CAAC,QAAiB,EAAqB,EAAE;IAC9D,MAAM,MAAM,qKAAG,OAAA,AAAI,EAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAClC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,oLAAG,eAAA,AAAY,EAAC,MAAM,CAAC,CAAC;IAEhD,MAAM,eAAe,GAAG,MAA8C,CAAC;IAEvE,eAAe,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;QACxD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACnC,OAAO,kKAAI,YAAS,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEF,eAAe,CAAC,MAAM,GAAG,CAAC,SAAoB,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;QAC9E,MAAM,GAAG,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QACjC,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,eAAe,CAAC;AAC3B,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2476, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/buffer-layout-utils/src/index.ts"],"sourcesContent":["export * from './base';\nexport * from './bigint';\nexport * from './decimal';\nexport * from './native';\nexport * from './web3';\n"],"names":[],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 2483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2502, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/build-scripts/env-shim.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/errors/src/codes.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/errors/src/messages.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/errors/src/message-formatter.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/errors/src/error.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/errors/src/stack-trace.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/errors/src/rpc-enum-errors.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/errors/src/instruction-error.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/errors/src/transaction-error.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/errors/src/json-rpc-error.ts"],"sourcesContent":["// Clever obfuscation to prevent the build system from inlining the value of `NODE_ENV`\nexport const __DEV__ = /* @__PURE__ */ (() => (process as any)['en' + 'v'].NODE_ENV === 'development')();\n","/**\n * To add a new error, follow the instructions at\n * https://github.com/solana-labs/solana-web3.js/tree/master/packages/errors/#adding-a-new-error\n *\n * WARNING:\n *   - Don't remove error codes\n *   - Don't change or reorder error codes.\n *\n * Good naming conventions:\n *   - Prefixing common errors — e.g. under the same package — can be a good way to namespace them. E.g. All codec-related errors start with `SOLANA_ERROR__CODECS__`.\n *   - Use consistent names — e.g. choose `PDA` or `PROGRAM_DERIVED_ADDRESS` and stick with it. Ensure your names are consistent with existing error codes. The decision might have been made for you.\n *   - Recommended prefixes and suffixes:\n *     - `MALFORMED_`: Some input was not constructed properly. E.g. `MALFORMED_BASE58_ENCODED_ADDRESS`.\n *     - `INVALID_`: Some input is invalid (other than because it was MALFORMED). E.g. `INVALID_NUMBER_OF_BYTES`.\n *     - `EXPECTED_`: Some input was different than expected, no need to specify the \"GOT\" part unless necessary. E.g. `EXPECTED_DECODED_ACCOUNT`.\n *     - `_CANNOT_`: Some operation cannot be performed or some input cannot be used due to some condition. E.g. `CANNOT_DECODE_EMPTY_BYTE_ARRAY` or `PDA_CANNOT_END_WITH_PDA_MARKER`.\n *     - `_MUST_BE_`: Some condition must be true. E.g. `NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE`.\n *     - `_FAILED_TO_`: Tried to perform some operation and failed. E.g. `FAILED_TO_DECODE_ACCOUNT`.\n *     - `_NOT_FOUND`: Some operation lead to not finding something. E.g. `ACCOUNT_NOT_FOUND`.\n *     - `_OUT_OF_RANGE`: Some value is out of range. E.g. `ENUM_DISCRIMINATOR_OUT_OF_RANGE`.\n *     - `_EXCEEDED`: Some limit was exceeded. E.g. `PDA_MAX_SEED_LENGTH_EXCEEDED`.\n *     - `_MISMATCH`: Some elements do not match. E.g. `ENCODER_DECODER_FIXED_SIZE_MISMATCH`.\n *     - `_MISSING`: Some required input is missing. E.g. `TRANSACTION_FEE_PAYER_MISSING`.\n *     - `_UNIMPLEMENTED`: Some required component is not available in the environment. E.g. `SUBTLE_CRYPTO_VERIFY_FUNCTION_UNIMPLEMENTED`.\n */\nexport const SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1 as const;\nexport const SOLANA_ERROR__INVALID_NONCE = 2 as const;\nexport const SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3 as const;\nexport const SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4 as const;\nexport const SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5 as const;\nexport const SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6 as const;\nexport const SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7 as const;\nexport const SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8 as const;\nexport const SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9 as const;\n\n// JSON-RPC-related errors.\n// Reserve error codes in the range [-32768, -32000]\n// Keep in sync with https://github.com/anza-xyz/agave/blob/master/rpc-client-api/src/custom_error.rs\nexport const SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700 as const;\nexport const SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603 as const;\nexport const SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602 as const;\nexport const SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601 as const;\nexport const SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013 as const;\nexport const SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001 as const;\n\n// Addresses-related errors.\n// Reserve error codes in the range [2800000-2800999].\nexport const SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 2800000 as const;\nexport const SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001 as const;\nexport const SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002 as const;\nexport const SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003 as const;\nexport const SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004 as const;\nexport const SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005 as const;\nexport const SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006 as const;\nexport const SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007 as const;\nexport const SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008 as const;\nexport const SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009 as const;\nexport const SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010 as const;\n\n// Account-related errors.\n// Reserve error codes in the range [3230000-3230999].\nexport const SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 3230000 as const;\nexport const SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001 as const;\nexport const SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002 as const;\nexport const SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003 as const;\nexport const SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004 as const;\n\n// Subtle-Crypto-related errors.\n// Reserve error codes in the range [3610000-3610999].\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 3610000 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006 as const;\n\n// Key-related errors.\n// Reserve error codes in the range [3704000-3704999].\nexport const SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704000 as const;\nexport const SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001 as const;\nexport const SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002 as const;\nexport const SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003 as const;\n\n// Instruction-related errors.\n// Reserve error codes in the range [4128000-4128999].\nexport const SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128000 as const;\nexport const SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001 as const;\nexport const SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002 as const;\n\n// Instruction errors.\n// Reserve error codes starting with [4615000-4615999] for the Rust enum `InstructionError`.\n// Error names here are dictated by the RPC (see ./instruction-error.ts).\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615000 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054 as const;\n\n// Signer-related errors.\n// Reserve error codes in the range [5508000-5508999].\nexport const SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508000 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008 as const;\nexport const SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009 as const;\nexport const SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010 as const;\n\n// Transaction-related errors.\n// Reserve error codes in the range [5663000-5663999].\nexport const SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663000 as const;\nexport const SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001 as const;\nexport const SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002 as const;\nexport const SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003 as const;\nexport const SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004 as const;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005 as const;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006 as const;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007 as const;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008 as const;\nexport const SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009 as const;\nexport const SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010 as const;\nexport const SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011 as const;\nexport const SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012 as const;\nexport const SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013 as const;\nexport const SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE =\n    5663014 as const;\n\n// Transaction errors.\n// Reserve error codes starting with [7050000-7050999] for the Rust enum `TransactionError`.\n// Error names here are dictated by the RPC (see ./transaction-error.ts).\nexport const SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 7050000 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008 as const;\n// `InstructionError` intentionally omitted.\nexport const SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036 as const;\n\n// Codec-related errors.\n// Reserve error codes in the range [8078000-8078999].\nexport const SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078000 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001 as const;\nexport const SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002 as const;\nexport const SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003 as const;\nexport const SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004 as const;\nexport const SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005 as const;\nexport const SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007 as const;\nexport const SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT = 8078009 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT = 8078010 as const;\nexport const SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012 as const;\nexport const SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013 as const;\nexport const SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014 as const;\n\n// RPC-related errors.\n// Reserve error codes in the range [8100000-8100999].\nexport const SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 8100000 as const;\nexport const SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001 as const;\nexport const SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002 as const;\n\n// RPC-Subscriptions-related errors.\n// Reserve error codes in the range [8190000-8190999].\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST = 8190000 as const;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001 as const;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002 as const;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED = 8190003 as const;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT = 8190004 as const;\n\n// Invariant violation errors.\n// Reserve error codes in the range [9900000-9900999].\n// These errors should only be thrown when there is a bug with the\n// library itself and should, in theory, never reach the end user.\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING = 9900000 as const;\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE =\n    9900001 as const;\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002 as const;\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003 as const;\n\n/**\n * A union of every Solana error code\n *\n * You might be wondering why this is not a TypeScript enum or const enum.\n *\n * One of the goals of this library is to enable people to use some or none of it without having to\n * bundle all of it.\n *\n * If we made the set of error codes an enum then anyone who imported it (even if to only use a\n * single error code) would be forced to bundle every code and its label.\n *\n * Const enums appear to solve this problem by letting the compiler inline only the codes that are\n * actually used. Unfortunately exporting ambient (const) enums from a library like `@solana/errors`\n * is not safe, for a variety of reasons covered here: https://stackoverflow.com/a/28818850\n */\nexport type SolanaErrorCode =\n    | typeof SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED\n    | typeof SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT\n    | typeof SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT\n    | typeof SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND\n    | typeof SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE\n    | typeof SOLANA_ERROR__ADDRESSES__MALFORMED_PDA\n    | typeof SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED\n    | typeof SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED\n    | typeof SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER\n    | typeof SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED\n    | typeof SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY\n    | typeof SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH\n    | typeof SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH\n    | typeof SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH\n    | typeof SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH\n    | typeof SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH\n    | typeof SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT\n    | typeof SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS\n    | typeof SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT\n    | typeof SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE\n    | typeof SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS\n    | typeof SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA\n    | typeof SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR\n    | typeof SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH\n    | typeof SOLANA_ERROR__INVALID_NONCE\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING\n    | typeof SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR\n    | typeof SOLANA_ERROR__JSON_RPC__INVALID_PARAMS\n    | typeof SOLANA_ERROR__JSON_RPC__INVALID_REQUEST\n    | typeof SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND\n    | typeof SOLANA_ERROR__JSON_RPC__PARSE_ERROR\n    | typeof SOLANA_ERROR__JSON_RPC__SCAN_ERROR\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION\n    | typeof SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH\n    | typeof SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH\n    | typeof SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH\n    | typeof SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__MALFORMED_BIGINT_STRING\n    | typeof SOLANA_ERROR__MALFORMED_NUMBER_STRING\n    | typeof SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__RPC__INTEGER_OVERFLOW\n    | typeof SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR\n    | typeof SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT\n    | typeof SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS\n    | typeof SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME\n    | typeof SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE\n    | typeof SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES\n    | typeof SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE\n    | typeof SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT;\n","import {\n    SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED,\n    SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT,\n    SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT,\n    SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND,\n    SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED,\n    SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS,\n    SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH,\n    SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY,\n    SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE,\n    SOLANA_ERROR__ADDRESSES__MALFORMED_PDA,\n    SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED,\n    SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED,\n    SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE,\n    SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER,\n    SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED,\n    SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH,\n    SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH,\n    SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH,\n    SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH,\n    SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH,\n    SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS,\n    SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE,\n    SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE,\n    SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS,\n    SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA,\n    SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW,\n    SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH,\n    SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,\n    SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX,\n    SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND,\n    SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER,\n    SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR,\n    SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH,\n    SOLANA_ERROR__INVALID_NONCE,\n    SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING,\n    SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE,\n    SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE,\n    SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING,\n    SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR,\n    SOLANA_ERROR__JSON_RPC__INVALID_PARAMS,\n    SOLANA_ERROR__JSON_RPC__INVALID_REQUEST,\n    SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND,\n    SOLANA_ERROR__JSON_RPC__PARSE_ERROR,\n    SOLANA_ERROR__JSON_RPC__SCAN_ERROR,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION,\n    SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE,\n    SOLANA_ERROR__MALFORMED_BIGINT_STRING,\n    SOLANA_ERROR__MALFORMED_NUMBER_STRING,\n    SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__RPC__INTEGER_OVERFLOW,\n    SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR,\n    SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT,\n    SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS,\n    SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER,\n    SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS,\n    SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING,\n    SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT,\n    SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING,\n    SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME,\n    SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING,\n    SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING,\n    SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE,\n    SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING,\n    SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES,\n    SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE,\n    SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING,\n    SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING,\n    SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE,\n    SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE,\n    SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED,\n    SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP,\n    SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE,\n    SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE,\n    SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT,\n    SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED,\n    SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE,\n    SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED,\n    SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED,\n    SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE,\n    SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE,\n    SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION,\n    SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT,\n    SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT,\n    SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT,\n    SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT,\n    SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT,\n    SolanaErrorCode,\n} from './codes';\n\n/**\n * To add a new error, follow the instructions at\n * https://github.com/solana-labs/solana-web3.js/tree/master/packages/errors#adding-a-new-error\n *\n * WARNING:\n *   - Don't change the meaning of an error message.\n */\nexport const SolanaErrorMessages: Readonly<{\n    // This type makes this data structure exhaustive with respect to `SolanaErrorCode`.\n    // TypeScript will fail to build this project if add an error code without a message.\n    [P in SolanaErrorCode]: string;\n}> = {\n    [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: 'Account not found at address: $address',\n    [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]:\n        'Not all accounts were decoded. Encoded accounts found at addresses: $addresses.',\n    [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: 'Expected decoded account at address: $address',\n    [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: 'Failed to decode account data at address: $address',\n    [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: 'Accounts not found at addresses: $addresses',\n    [SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED]:\n        'Unable to find a viable program address bump seed.',\n    [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: '$putativeAddress is not a base58-encoded address.',\n    [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]:\n        'Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.',\n    [SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY]: 'The `CryptoKey` must be an `Ed25519` public key.',\n    [SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE]: 'Invalid seeds; point must fall off the Ed25519 curve.',\n    [SOLANA_ERROR__ADDRESSES__MALFORMED_PDA]:\n        'Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].',\n    [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]:\n        'A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.',\n    [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]:\n        'The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.',\n    [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]:\n        'Expected program derived address bump to be in the range [0, 255], got: $bump.',\n    [SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER]: 'Program address cannot end with PDA marker.',\n    [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]:\n        'Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.',\n    [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]:\n        'Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.',\n    [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]:\n        'The network has progressed past the last block for which this transaction could have been committed.',\n    [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]:\n        'Codec [$codecDescription] cannot decode empty byte arrays.',\n    [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]:\n        'Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].',\n    [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]:\n        'Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].',\n    [SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH]:\n        'Encoder and decoder must either both be fixed-size or variable-size.',\n    [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]:\n        'Enum discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.',\n    [SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH]: 'Expected a fixed-size codec, got a variable-size one.',\n    [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]:\n        'Codec [$codecDescription] expected a positive byte length, got $bytesLength.',\n    [SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH]: 'Expected a variable-size codec, got a fixed-size one.',\n    [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]:\n        'Codec [$codecDescription] expected $expected bytes, got $bytesLength.',\n    [SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT]:\n        'Invalid data enum variant. Expected one of [$variants], got $value.',\n    [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]:\n        'Expected [$codecDescription] to have $expected items, got $actual.',\n    [SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT]:\n        'Invalid scalar enum variant. Expected one of [$variants] or a number between $minRange and $maxRange, got $value.',\n    [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: 'Invalid value $value for base $base with alphabet $alphabet.',\n    [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]:\n        'Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.',\n    [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]:\n        'Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED]: 'instruction requires an uninitialized account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED]:\n        'instruction tries to borrow reference for an account which is already borrowed',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]:\n        'instruction left account with an outstanding borrowed reference',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED]:\n        \"program other than the account's owner changed the size of the account data\",\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL]: 'account data too small for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE]: 'instruction expected an executable account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT]:\n        'An account does not have enough lamports to be rent-exempt',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW]: 'Program arithmetic overflowed',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: 'Failed to serialize or deserialize account data: $encodedData',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS]:\n        'Builtin programs must consume compute units',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH]: 'Cross-program invocation call depth too deep',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED]: 'Computational budget exceeded',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: 'custom program error: #$code',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX]: 'instruction contains duplicate accounts',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC]:\n        'instruction modifications of multiply-passed account differ',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT]: 'executable accounts must be rent exempt',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED]: 'instruction changed executable accounts data',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE]:\n        'instruction changed the balance of an executable account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED]: 'instruction changed executable bit of an account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED]:\n        'instruction modified data of an account it does not own',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND]:\n        'instruction spent from the balance of an account it does not own',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR]: 'generic instruction error',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER]: 'Provided owner is not allowed',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE]: 'Account is immutable',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY]: 'Incorrect authority provided',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID]: 'incorrect program id for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS]: 'insufficient funds for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA]: 'invalid account data for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER]: 'Invalid account owner',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT]: 'invalid program argument',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR]: 'program returned invalid error code',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA]: 'invalid instruction data',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC]: 'Failed to reallocate account data',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS]: 'Provided seeds do not result in a valid address',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED]:\n        'Accounts data allocations exceeded the maximum allowed per transaction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED]: 'Max accounts exceeded',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED]: 'Max instruction trace length exceeded',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED]:\n        'Length of the seed is too long for address generation',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT]: 'An account required by the instruction is missing',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE]: 'missing required signature for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID]:\n        'instruction illegally modified the program id of an account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS]: 'insufficient account keys for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION]:\n        'Cross-program invocation with unauthorized signer or writable account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE]:\n        'Failed to create program execution environment',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE]: 'Program failed to compile',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE]: 'Program failed to complete',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED]: 'instruction modified data of a read-only account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE]:\n        'instruction changed the balance of a read-only account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED]:\n        'Cross-program invocation reentrancy not allowed for this instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED]: 'instruction modified rent epoch of an account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION]:\n        'sum of account balances before and after instruction do not match',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT]: 'instruction requires an initialized account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: '',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID]: 'Unsupported program id',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR]: 'Unsupported sysvar',\n    [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: 'The instruction does not have any accounts.',\n    [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: 'The instruction does not have any data.',\n    [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]:\n        'Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.',\n    [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]:\n        'Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.',\n    [SOLANA_ERROR__INVALID_NONCE]:\n        'The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`',\n    [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]:\n        'Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It ' +\n        'should be impossible to hit this error; please file an issue at ' +\n        'https://sola.na/web3invariant',\n    [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]:\n        'Invariant violation: Switch statement non-exhaustive. Received unexpected value ' +\n        '`$unexpectedValue`. It should be impossible to hit this error; please file an issue at ' +\n        'https://sola.na/web3invariant',\n    [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE]:\n        'Invariant violation: WebSocket message iterator state is corrupt; iterated without first ' +\n        'resolving existing message promise. It should be impossible to hit this error; please ' +\n        'file an issue at https://sola.na/web3invariant',\n    [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING]:\n        'Invariant violation: WebSocket message iterator is missing state storage. It should be ' +\n        'impossible to hit this error; please file an issue at https://sola.na/web3invariant',\n    [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: 'JSON-RPC error: Internal JSON-RPC error ($__serverMessage)',\n    [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: 'JSON-RPC error: Invalid method parameter(s) ($__serverMessage)',\n    [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]:\n        'JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)',\n    [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]:\n        'JSON-RPC error: The method does not exist / is not available ($__serverMessage)',\n    [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]:\n        'JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)',\n    [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: 'Minimum context slot has not been reached',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: 'Node is unhealthy; behind by $numSlotsBehind slots',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT]: 'No snapshot',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: 'Transaction simulation failed',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE]:\n        'Transaction history is not available from this node',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH]: 'Transaction signature length mismatch',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE]:\n        'Transaction signature verification failure',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: '$__serverMessage',\n    [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: 'Key pair bytes must be of length 64, got $byteLength.',\n    [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]:\n        'Expected private key bytes with length 32. Actual length: $actualLength.',\n    [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]:\n        'Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.',\n    [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]:\n        'Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.',\n    [SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE]: 'Lamports value must be in the range [0, 2e64-1]',\n    [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: '`$value` cannot be parsed as a `BigInt`',\n    [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: '`$value` cannot be parsed as a `Number`',\n    [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: 'No nonce account could be found at address `$nonceAccountAddress`',\n    [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST]:\n        \"Either the notification name must end in 'Notifications' or the API must supply a \" +\n        \"subscription creator function for the notification '$notificationName' to map between \" +\n        'the notification name and the subscribe/unsubscribe method names.',\n    [SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID]:\n        'Failed to obtain a subscription id from the server',\n    [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED]:\n        'WebSocket was closed before payload could be added to the send buffer',\n    [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED]: 'WebSocket connection closed',\n    [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT]: 'WebSocket failed to connect',\n    [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]:\n        'The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was ' +\n        '`$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds ' +\n        '`Number.MAX_SAFE_INTEGER`.',\n    [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: 'HTTP error ($statusCode): $message',\n    [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]:\n        'HTTP header(s) forbidden: $headers. Learn more at ' +\n        'https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.',\n    [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]:\n        'Multiple distinct signers were identified for address `$address`. Please ensure that ' +\n        'you are using the same signer instance for each address.',\n    [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]:\n        'The provided value does not implement the `KeyPairSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]:\n        'The provided value does not implement the `MessageModifyingSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]:\n        'The provided value does not implement the `MessagePartialSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]:\n        'The provided value does not implement any of the `MessageSigner` interfaces',\n    [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]:\n        'The provided value does not implement the `TransactionModifyingSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]:\n        'The provided value does not implement the `TransactionPartialSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]:\n        'The provided value does not implement the `TransactionSendingSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]:\n        'The provided value does not implement any of the `TransactionSigner` interfaces',\n    [SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS]:\n        'More than one `TransactionSendingSigner` was identified.',\n    [SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING]:\n        'No `TransactionSendingSigner` was identified. Please provide a valid ' +\n        '`ITransactionWithSingleSendingSigner` transaction.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED]: 'No digest implementation could be found.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT]:\n        'Cryptographic operations are only allowed in secure browser contexts. Read more ' +\n        'here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED]:\n        'This runtime does not support the generation of Ed25519 key pairs.\\n\\nInstall and ' +\n        'import `@solana/webcrypto-ed25519-polyfill` before generating keys in ' +\n        'environments that do not support Ed25519.\\n\\nFor a list of runtimes that ' +\n        'currently support Ed25519 operations, visit ' +\n        'https://github.com/WICG/webcrypto-secure-curves/issues/20.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED]:\n        'No signature verification implementation could be found.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED]: 'No key generation implementation could be found.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED]: 'No signing implementation could be found.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED]: 'No key export implementation could be found.',\n    [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: 'Timestamp value must be in the range [-8.64e15, 8.64e15]. `$value` given',\n    [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]:\n        'Transaction processing left an account with an outstanding borrowed reference',\n    [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE]: 'Account in use',\n    [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE]: 'Account loaded twice',\n    [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND]:\n        'Attempt to debit an account but found no record of a prior credit.',\n    [SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND]:\n        \"Transaction loads an address table account that doesn't exist\",\n    [SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED]: 'This transaction has already been processed',\n    [SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND]: 'Blockhash not found',\n    [SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP]: 'Loader call chain is too deep',\n    [SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE]:\n        'Transactions are currently disabled due to cluster maintenance',\n    [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]:\n        'Transaction contains a duplicate instruction ($index) that is not allowed',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE]: 'Insufficient funds for fee',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]:\n        'Transaction results in an account ($accountIndex) with insufficient funds for rent',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE]: 'This account may not be used to pay transaction fees',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX]: 'Transaction contains an invalid account reference',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA]:\n        'Transaction loads an address table account with invalid data',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX]:\n        'Transaction address table lookup uses an invalid index',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER]:\n        'Transaction loads an address table account with an invalid owner',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT]:\n        'LoadedAccountsDataSizeLimit set for transaction must be greater than 0.',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION]:\n        'This program may not be used for executing instructions',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT]:\n        'Transaction leaves an account with a lower balance than rent-exempt minimum',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT]:\n        'Transaction loads a writable account that cannot be written',\n    [SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED]:\n        'Transaction exceeded max loaded accounts data size cap',\n    [SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE]:\n        'Transaction requires a fee but has no signature present',\n    [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND]: 'Attempt to load a program that does not exist',\n    [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]:\n        'Execution of the program referenced by account at index $accountIndex is temporarily restricted.',\n    [SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED]: 'ResanitizationNeeded',\n    [SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE]: 'Transaction failed to sanitize accounts offsets correctly',\n    [SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE]: 'Transaction did not pass signature verification',\n    [SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS]: 'Transaction locked too many accounts',\n    [SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION]:\n        'Sum of account balances before and after transaction do not match',\n    [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: 'The transaction failed with the error `$errorName`',\n    [SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION]: 'Transaction version is unsupported',\n    [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT]:\n        'Transaction would exceed account data limit within the block',\n    [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT]:\n        'Transaction would exceed total account data limit',\n    [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT]:\n        'Transaction would exceed max account limit within the block',\n    [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT]:\n        'Transaction would exceed max Block Cost Limit',\n    [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT]: 'Transaction would exceed max Vote Cost Limit',\n    [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: 'Transaction is missing an address at index: $index.',\n    [SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME]: 'Transaction does not have a blockhash lifetime',\n    [SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME]: 'Transaction is not a durable nonce transaction',\n    [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]:\n        'Contents of these address lookup tables unknown: $lookupTableAddresses',\n    [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]:\n        'Lookup of address at index $highestRequestedIndex failed for lookup table ' +\n        '`$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table ' +\n        'may have been extended since its contents were retrieved',\n    [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING]: 'No fee payer set in CompiledTransaction',\n    [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]:\n        'Could not find program address at index $index',\n    [SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING]: 'Transaction is missing a fee payer.',\n    [SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING]:\n        \"Could not determine this transaction's signature. Make sure that the transaction has \" +\n        'been signed by its fee payer.',\n    [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE]:\n        'Transaction first instruction is not advance nonce account instruction.',\n    [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING]:\n        'Transaction with no instructions cannot be durable nonce transaction.',\n    [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]:\n        'This transaction includes an address (`$programAddress`) which is both ' +\n        'invoked and set as the fee payer. Program addresses may not pay fees',\n    [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]:\n        'This transaction includes an address (`$programAddress`) which is both invoked and ' +\n        'marked writable. Program addresses may not be writable',\n    [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: 'Transaction is missing signatures for addresses: $addresses.',\n    [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]:\n        'Transaction version must be in the range [0, 127]. `$actualVersion` given',\n};\n","import { SolanaErrorCode } from './codes';\nimport { SolanaErrorMessages } from './messages';\n\nfunction encodeValue(value: unknown): string {\n    if (Array.isArray(value)) {\n        return (\n            /* \"[\" */ '%5B' +\n            value\n                .map(element =>\n                    typeof element === 'string'\n                        ? encodeURIComponent(`\"${element.replace(/\"/g, '\\\\\"')}\"`)\n                        : encodeValue(element),\n                )\n                .join(/* \", \" */ '%2C%20') +\n            /* \"]\" */ '%5D'\n        );\n    } else if (typeof value === 'bigint') {\n        return `${value}n`;\n    } else {\n        return encodeURIComponent(\n            String(\n                value != null && Object.getPrototypeOf(value) === null\n                    ? // Plain objects with no protoype don't have a `toString` method.\n                      // Convert them before stringifying them.\n                      { ...(value as object) }\n                    : value,\n            ),\n        );\n    }\n}\n\nfunction encodeObjectContextEntry([key, value]: [string, unknown]): `${typeof key}=${string}` {\n    return `${key}=${encodeValue(value)}`;\n}\n\nfunction encodeContextObject(context: object) {\n    return Object.entries(context).map(encodeObjectContextEntry).join('&');\n}\n\nexport function getHumanReadableErrorMessage<TErrorCode extends SolanaErrorCode>(\n    code: TErrorCode,\n    context: object = {},\n): string {\n    const messageFormatString = SolanaErrorMessages[code];\n    const message = messageFormatString.replace(/(?<!\\\\)\\$(\\w+)/g, (substring, variableName) =>\n        variableName in context ? `${context[variableName as keyof typeof context]}` : substring,\n    );\n    return message;\n}\n\nexport function getErrorMessage<TErrorCode extends SolanaErrorCode>(code: TErrorCode, context: object = {}): string {\n    if (__DEV__) {\n        return getHumanReadableErrorMessage(code, context);\n    } else {\n        let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode ${code}`;\n        if (Object.keys(context).length) {\n            /**\n             * DANGER: Be sure that the shell command is escaped in such a way that makes it\n             *         impossible for someone to craft malicious context values that would result in\n             *         an exploit against anyone who bindly copy/pastes it into their terminal.\n             */\n            decodingAdviceMessage += ` $\"${encodeContextObject(context)}\"`;\n        }\n        return `${decodingAdviceMessage}\\``;\n    }\n}\n","import { SolanaErrorCode } from './codes';\nimport { SolanaErrorContext } from './context';\nimport { getErrorMessage } from './message-formatter';\n\nexport function isSolanaError<TErrorCode extends SolanaErrorCode>(\n    e: unknown,\n    code?: TErrorCode,\n): e is SolanaError<TErrorCode> {\n    const isSolanaError = e instanceof Error && e.name === 'SolanaError';\n    if (isSolanaError) {\n        if (code !== undefined) {\n            return (e as SolanaError<TErrorCode>).context.__code === code;\n        }\n        return true;\n    }\n    return false;\n}\n\ntype SolanaErrorCodedContext = Readonly<{\n    [P in SolanaErrorCode]: (SolanaErrorContext[P] extends undefined ? object : SolanaErrorContext[P]) & {\n        __code: P;\n    };\n}>;\n\nexport class SolanaError<TErrorCode extends SolanaErrorCode = SolanaErrorCode> extends Error {\n    readonly context: SolanaErrorCodedContext[TErrorCode];\n    constructor(\n        ...[code, contextAndErrorOptions]: SolanaErrorContext[TErrorCode] extends undefined\n            ? [code: TErrorCode, errorOptions?: ErrorOptions | undefined]\n            : [code: TErrorCode, contextAndErrorOptions: SolanaErrorContext[TErrorCode] & (ErrorOptions | undefined)]\n    ) {\n        let context: SolanaErrorContext[TErrorCode] | undefined;\n        let errorOptions: ErrorOptions | undefined;\n        if (contextAndErrorOptions) {\n            // If the `ErrorOptions` type ever changes, update this code.\n            const { cause, ...contextRest } = contextAndErrorOptions;\n            if (cause) {\n                errorOptions = { cause };\n            }\n            if (Object.keys(contextRest).length > 0) {\n                context = contextRest as SolanaErrorContext[TErrorCode];\n            }\n        }\n        const message = getErrorMessage(code, context);\n        super(message, errorOptions);\n        this.context = {\n            __code: code,\n            ...context,\n        } as SolanaErrorCodedContext[TErrorCode];\n        // This is necessary so that `isSolanaError()` can identify a `SolanaError` without having\n        // to import the class for use in an `instanceof` check.\n        this.name = 'SolanaError';\n    }\n}\n","export function safeCaptureStackTrace(...args: Parameters<typeof Error.captureStackTrace>): void {\n    if ('captureStackTrace' in Error && typeof Error.captureStackTrace === 'function') {\n        Error.captureStackTrace(...args);\n    }\n}\n","import { SolanaErrorCode } from './codes';\nimport { SolanaErrorContext } from './context';\nimport { SolanaError } from './error';\nimport { safeCaptureStackTrace } from './stack-trace';\n\ntype Config = Readonly<{\n    /**\n     * Oh, hello. You might wonder what in tarnation is going on here. Allow us to explain.\n     *\n     * One of the goals of `@solana/errors` is to allow errors that are not interesting to your\n     * application to shake out of your app bundle in production. This means that we must never\n     * export large hardcoded maps of error codes/messages.\n     *\n     * Unfortunately, where instruction and transaction errors from the RPC are concerned, we have\n     * no choice but to keep a map between the RPC `rpcEnumError` enum name and its corresponding\n     * `SolanaError` code. In the interest of implementing that map in as few bytes of source code\n     * as possible, we do the following:\n     *\n     *   1. Reserve a block of sequential error codes for the enum in question\n     *   2. Hardcode the list of enum names in that same order\n     *   3. Match the enum error name from the RPC with its index in that list, and reconstruct the\n     *      `SolanaError` code by adding the `errorCodeBaseOffset` to that index\n     */\n    errorCodeBaseOffset: number;\n    getErrorContext: (\n        errorCode: SolanaErrorCode,\n        rpcErrorName: string,\n        rpcErrorContext?: unknown,\n    ) => SolanaErrorContext[SolanaErrorCode];\n    orderedErrorNames: string[];\n    rpcEnumError: string | { [key: string]: unknown };\n}>;\n\nexport function getSolanaErrorFromRpcError(\n    { errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }: Config,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    constructorOpt: Function,\n): SolanaError {\n    let rpcErrorName;\n    let rpcErrorContext;\n    if (typeof rpcEnumError === 'string') {\n        rpcErrorName = rpcEnumError;\n    } else {\n        rpcErrorName = Object.keys(rpcEnumError)[0];\n        rpcErrorContext = rpcEnumError[rpcErrorName];\n    }\n    const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n    const errorCode = (errorCodeBaseOffset + codeOffset) as SolanaErrorCode;\n    const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n    const err = new SolanaError(errorCode, errorContext);\n    safeCaptureStackTrace(err, constructorOpt);\n    return err;\n}\n","import {\n    SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN,\n} from './codes';\nimport { SolanaError } from './error';\nimport { getSolanaErrorFromRpcError } from './rpc-enum-errors';\n\nconst ORDERED_ERROR_NAMES = [\n    // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n    // If this list ever gets too large, consider implementing a compression strategy like this:\n    // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n    'GenericError',\n    'InvalidArgument',\n    'InvalidInstructionData',\n    'InvalidAccountData',\n    'AccountDataTooSmall',\n    'InsufficientFunds',\n    'IncorrectProgramId',\n    'MissingRequiredSignature',\n    'AccountAlreadyInitialized',\n    'UninitializedAccount',\n    'UnbalancedInstruction',\n    'ModifiedProgramId',\n    'ExternalAccountLamportSpend',\n    'ExternalAccountDataModified',\n    'ReadonlyLamportChange',\n    'ReadonlyDataModified',\n    'DuplicateAccountIndex',\n    'ExecutableModified',\n    'RentEpochModified',\n    'NotEnoughAccountKeys',\n    'AccountDataSizeChanged',\n    'AccountNotExecutable',\n    'AccountBorrowFailed',\n    'AccountBorrowOutstanding',\n    'DuplicateAccountOutOfSync',\n    'Custom',\n    'InvalidError',\n    'ExecutableDataModified',\n    'ExecutableLamportChange',\n    'ExecutableAccountNotRentExempt',\n    'UnsupportedProgramId',\n    'CallDepth',\n    'MissingAccount',\n    'ReentrancyNotAllowed',\n    'MaxSeedLengthExceeded',\n    'InvalidSeeds',\n    'InvalidRealloc',\n    'ComputationalBudgetExceeded',\n    'PrivilegeEscalation',\n    'ProgramEnvironmentSetupFailure',\n    'ProgramFailedToComplete',\n    'ProgramFailedToCompile',\n    'Immutable',\n    'IncorrectAuthority',\n    'BorshIoError',\n    'AccountNotRentExempt',\n    'InvalidAccountOwner',\n    'ArithmeticOverflow',\n    'UnsupportedSysvar',\n    'IllegalOwner',\n    'MaxAccountsDataAllocationsExceeded',\n    'MaxAccountsExceeded',\n    'MaxInstructionTraceLengthExceeded',\n    'BuiltinProgramsMustConsumeComputeUnits',\n];\n\nexport function getSolanaErrorFromInstructionError(\n    index: number,\n    instructionError: string | { [key: string]: unknown },\n): SolanaError {\n    return getSolanaErrorFromRpcError(\n        {\n            errorCodeBaseOffset: 4615001,\n            getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n                if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n                    return {\n                        errorName: rpcErrorName,\n                        index,\n                        ...(rpcErrorContext !== undefined ? { instructionErrorContext: rpcErrorContext } : null),\n                    };\n                } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n                    return {\n                        code: rpcErrorContext as number,\n                        index,\n                    };\n                } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n                    return {\n                        encodedData: rpcErrorContext as string,\n                        index,\n                    };\n                }\n                return { index };\n            },\n            orderedErrorNames: ORDERED_ERROR_NAMES,\n            rpcEnumError: instructionError,\n        },\n        getSolanaErrorFromInstructionError,\n    );\n}\n","import {\n    SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT,\n    SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN,\n} from './codes';\nimport { SolanaError } from './error';\nimport { getSolanaErrorFromInstructionError } from './instruction-error';\nimport { getSolanaErrorFromRpcError } from './rpc-enum-errors';\n\n/**\n * How to add an error when an entry is added to the RPC `TransactionError` enum:\n *\n *   1. Follow the instructions in `./codes.ts` to add a corresponding Solana error code\n *   2. Add the `TransactionError` enum name in the same order as it appears in `./codes.ts`\n *   3. Add the new error name/code mapping to `./__tests__/transaction-error-test.ts`\n */\nconst ORDERED_ERROR_NAMES = [\n    // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n    // If this list ever gets too large, consider implementing a compression strategy like this:\n    // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n    'AccountInUse',\n    'AccountLoadedTwice',\n    'AccountNotFound',\n    'ProgramAccountNotFound',\n    'InsufficientFundsForFee',\n    'InvalidAccountForFee',\n    'AlreadyProcessed',\n    'BlockhashNotFound',\n    // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n    'CallChainTooDeep',\n    'MissingSignatureForFee',\n    'InvalidAccountIndex',\n    'SignatureFailure',\n    'InvalidProgramForExecution',\n    'SanitizeFailure',\n    'ClusterMaintenance',\n    'AccountBorrowOutstanding',\n    'WouldExceedMaxBlockCostLimit',\n    'UnsupportedVersion',\n    'InvalidWritableAccount',\n    'WouldExceedMaxAccountCostLimit',\n    'WouldExceedAccountDataBlockLimit',\n    'TooManyAccountLocks',\n    'AddressLookupTableNotFound',\n    'InvalidAddressLookupTableOwner',\n    'InvalidAddressLookupTableData',\n    'InvalidAddressLookupTableIndex',\n    'InvalidRentPayingAccount',\n    'WouldExceedMaxVoteCostLimit',\n    'WouldExceedAccountDataTotalLimit',\n    'DuplicateInstruction',\n    'InsufficientFundsForRent',\n    'MaxLoadedAccountsDataSizeExceeded',\n    'InvalidLoadedAccountsDataSizeLimit',\n    'ResanitizationNeeded',\n    'ProgramExecutionTemporarilyRestricted',\n    'UnbalancedTransaction',\n];\n\nexport function getSolanaErrorFromTransactionError(transactionError: string | { [key: string]: unknown }): SolanaError {\n    if (typeof transactionError === 'object' && 'InstructionError' in transactionError) {\n        return getSolanaErrorFromInstructionError(\n            ...(transactionError.InstructionError as Parameters<typeof getSolanaErrorFromInstructionError>),\n        );\n    }\n    return getSolanaErrorFromRpcError(\n        {\n            errorCodeBaseOffset: 7050001,\n            getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n                if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n                    return {\n                        errorName: rpcErrorName,\n                        ...(rpcErrorContext !== undefined ? { transactionErrorContext: rpcErrorContext } : null),\n                    };\n                } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n                    return {\n                        index: rpcErrorContext as number,\n                    };\n                } else if (\n                    errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT ||\n                    errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED\n                ) {\n                    return {\n                        accountIndex: (rpcErrorContext as { account_index: number }).account_index,\n                    };\n                }\n            },\n            orderedErrorNames: ORDERED_ERROR_NAMES,\n            rpcEnumError: transactionError,\n        },\n        getSolanaErrorFromTransactionError,\n    );\n}\n","import {\n    SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR,\n    SOLANA_ERROR__JSON_RPC__INVALID_PARAMS,\n    SOLANA_ERROR__JSON_RPC__INVALID_REQUEST,\n    SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND,\n    SOLANA_ERROR__JSON_RPC__PARSE_ERROR,\n    SOLANA_ERROR__JSON_RPC__SCAN_ERROR,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION,\n    SolanaErrorCode,\n} from './codes';\nimport { SolanaErrorContext } from './context';\nimport { SolanaError } from './error';\nimport { safeCaptureStackTrace } from './stack-trace';\nimport { getSolanaErrorFromTransactionError } from './transaction-error';\n\ninterface RpcErrorResponse {\n    code: number;\n    data?: unknown;\n    message: string;\n}\n\ntype TransactionError = string | { [key: string]: unknown };\n\n// Keep in sync with https://github.com/anza-xyz/agave/blob/master/rpc-client-api/src/response.rs\nexport interface RpcSimulateTransactionResult {\n    accounts:\n        | ({\n              data:\n                  | string // LegacyBinary\n                  | {\n                        // Json\n                        parsed: unknown;\n                        program: string;\n                        space: number;\n                    }\n                  // Binary\n                  | [encodedBytes: string, encoding: 'base58' | 'base64' | 'base64+zstd' | 'binary' | 'jsonParsed'];\n              executable: boolean;\n              lamports: number;\n              owner: string;\n              rentEpoch: number;\n              space?: number;\n          } | null)[]\n        | null;\n    err: TransactionError | null;\n    // Enabled by `enable_cpi_recording`\n    innerInstructions?:\n        | {\n              index: number;\n              instructions: (\n                  | {\n                        // Compiled\n                        accounts: number[];\n                        data: string;\n                        programIdIndex: number;\n                        stack_height?: number;\n                    }\n                  | {\n                        // Parsed\n                        parsed: unknown;\n                        program: string;\n                        program_id: string;\n                        stack_height?: number;\n                    }\n                  | {\n                        // PartiallyDecoded\n                        accounts: string[];\n                        data: string;\n                        program_id: string;\n                        stack_height?: number;\n                    }\n              )[];\n          }[]\n        | null;\n    logs: string[] | null;\n    returnData: {\n        data: [string, 'base64'];\n        programId: string;\n    } | null;\n    unitsConsumed: number | null;\n}\n\nexport function getSolanaErrorFromJsonRpcError({ code, data, message }: RpcErrorResponse): SolanaError {\n    let out: SolanaError;\n    if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n        const { err, ...preflightErrorContext } = data as RpcSimulateTransactionResult;\n        const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n        out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n            ...preflightErrorContext,\n            ...causeObject,\n        });\n    } else {\n        let errorContext;\n        switch (code) {\n            case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n            case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n            case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n            case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n            case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n            case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n                // The server supplies no structured data, but rather a pre-formatted message. Put\n                // the server message in `context` so as not to completely lose the data. The long\n                // term fix for this is to add data to the server responses and modify the\n                // messages in `@solana/errors` to be actual format strings.\n                errorContext = { __serverMessage: message };\n                break;\n            default:\n                if (typeof data === 'object' && !Array.isArray(data)) {\n                    errorContext = data;\n                }\n        }\n        out = new SolanaError(code as SolanaErrorCode, errorContext as SolanaErrorContext[SolanaErrorCode]);\n    }\n    safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n    return out;\n}\n"],"names":["isSolanaError","ORDERED_ERROR_NAMES"],"mappings":"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C,CAAA;QAC1C,kBAAkB,YAAA,CAAa,YAAY,CAAA;IAC/C;IACA,MAAM,aAAa,kBAAkB,OAAA,CAAQ,YAAY;IACzD,MAAM,YAAa,sBAAsB;IACzC,MAAM,eAAe,gBAAgB,WAAW,cAAc,eAAe;IAC7E,MAAM,MAAM,IAAI,YAAY,WAAW,YAAY;IACnD,sBAAsB,KAAK,cAAc;IACzC,OAAO;AACX;;AC5CA,IAAM,sBAAsB;IAAA,4GAAA;IAAA,4FAAA;IAAA,wEAAA;IAIxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACJ;AAEO,SAAS,mCACZ,KAAA,EACA,gBAAA,EACW;IACX,OAAO,2BACH;QACI,qBAAqB;QACrB,iBAAgB,SAAA,EAAW,YAAA,EAAc,eAAA,EAAiB;YACtD,IAAI,cAAc,0CAA0C;gBACxD,OAAO;oBACH,WAAW;oBACX;oBACA,GAAI,oBAAoB,KAAA,IAAY;wBAAE,yBAAyB;oBAAgB,IAAI,IAAA;gBACvF;YACJ,OAAA,IAAW,cAAc,yCAAyC;gBAC9D,OAAO;oBACH,MAAM;oBACN;gBACJ;YACJ,OAAA,IAAW,cAAc,iDAAiD;gBACtE,OAAO;oBACH,aAAa;oBACb;gBACJ;YACJ;YACA,OAAO;gBAAE;YAAM;QACnB;QACA,mBAAmB;QACnB,cAAc;IAClB,GACA;AAER;;ACnFA,IAAMC,uBAAsB;IAAA,0GAAA;IAAA,4FAAA;IAAA,wEAAA;IAIxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA,8FAAA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACJ;AAEO,SAAS,mCAAmC,gBAAA,EAAoE;IACnH,IAAI,OAAO,qBAAqB,YAAY,sBAAsB,kBAAkB;QAChF,OAAO,sCACC,iBAAiB,gBAAA;IAE7B;IACA,OAAO,2BACH;QACI,qBAAqB;QACrB,iBAAgB,SAAA,EAAW,YAAA,EAAc,eAAA,EAAiB;YACtD,IAAI,cAAc,0CAA0C;gBACxD,OAAO;oBACH,WAAW;oBACX,GAAI,oBAAoB,KAAA,IAAY;wBAAE,yBAAyB;oBAAgB,IAAI,IAAA;gBACvF;YACJ,OAAA,IAAW,cAAc,wDAAwD;gBAC7E,OAAO;oBACH,OAAO;gBACX;YACJ,OAAA,IACI,cAAc,gEACd,cAAc,2EAChB;gBACE,OAAO;oBACH,cAAe,gBAA8C,aAAA;gBACjE;YACJ;QACJ;QACA,mBAAmBA;QACnB,cAAc;IAClB,GACA;AAER;;ACHO,SAAS,+BAA+B,EAAE,IAAA,EAAM,IAAA,EAAM,OAAA,CAAQ,CAAA,EAAkC;IACnG,IAAI;IACJ,IAAI,SAAS,yEAAyE;QAClF,MAAM,EAAE,GAAA,EAAK,GAAG,sBAAsB,CAAA,GAAI;QAC1C,MAAM,cAAc,MAAM;YAAE,OAAO,mCAAmC,GAAG;QAAE,IAAI;QAC/E,MAAM,IAAI,YAAY,yEAAyE;YAC3F,GAAG,qBAAA;YACH,GAAG,WAAA;QACP,CAAC;IACL,OAAO;QACH,IAAI;QACJ,OAAQ,MAAM;YACV,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;gBAKD,eAAe;oBAAE,iBAAiB;gBAAQ;gBAC1C;YACJ;gBACI,IAAI,OAAO,SAAS,YAAY,CAAC,MAAM,OAAA,CAAQ,IAAI,GAAG;oBAClD,eAAe;gBACnB;QACR;QACA,MAAM,IAAI,YAAY,MAAyB,YAAmD;IACtG;IACA,sBAAsB,KAAK,8BAA8B;IACzD,OAAO;AACX","ignoreList":[0,1,2,3,4,5,6,7,8,9]}},
    {"offset": {"line": 3434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3440, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-core/src/assertions.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-core/src/bytes.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-core/src/codec.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-core/src/combine-codec.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-core/src/fix-codec.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-core/src/map-codec.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-core/src/offset-codec.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-core/src/resize-codec.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-core/src/pad-codec.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-core/src/reverse-codec.ts"],"sourcesContent":["import {\n    SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY,\n    SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH,\n    SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE,\n    SolanaError,\n} from '@solana/errors';\n\n/**\n * Asserts that a given byte array is not empty.\n */\nexport function assertByteArrayIsNotEmptyForCodec(codecDescription: string, bytes: Uint8Array, offset = 0) {\n    if (bytes.length - offset <= 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, {\n            codecDescription,\n        });\n    }\n}\n\n/**\n * Asserts that a given byte array has enough bytes to decode.\n */\nexport function assertByteArrayHasEnoughBytesForCodec(\n    codecDescription: string,\n    expected: number,\n    bytes: Uint8Array,\n    offset = 0,\n) {\n    const bytesLength = bytes.length - offset;\n    if (bytesLength < expected) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, {\n            bytesLength,\n            codecDescription,\n            expected,\n        });\n    }\n}\n\n/**\n * Asserts that a given offset is within the byte array bounds.\n * This range is between 0 and the byte array length and is inclusive.\n * An offset equals to the byte array length is considered a valid offset\n * as it allows the post-offset of codecs to signal the end of the byte array.\n */\nexport function assertByteArrayOffsetIsNotOutOfRange(codecDescription: string, offset: number, bytesLength: number) {\n    if (offset < 0 || offset > bytesLength) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, {\n            bytesLength,\n            codecDescription,\n            offset,\n        });\n    }\n}\n","/**\n * Concatenates an array of `Uint8Array`s into a single `Uint8Array`.\n * Reuses the original byte array when applicable.\n */\nexport const mergeBytes = (byteArrays: Uint8Array[]): Uint8Array => {\n    const nonEmptyByteArrays = byteArrays.filter(arr => arr.length);\n    if (nonEmptyByteArrays.length === 0) {\n        return byteArrays.length ? byteArrays[0] : new Uint8Array();\n    }\n\n    if (nonEmptyByteArrays.length === 1) {\n        return nonEmptyByteArrays[0];\n    }\n\n    const totalLength = nonEmptyByteArrays.reduce((total, arr) => total + arr.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    nonEmptyByteArrays.forEach(arr => {\n        result.set(arr, offset);\n        offset += arr.length;\n    });\n    return result;\n};\n\n/**\n * Pads a `Uint8Array` with zeroes to the specified length.\n * If the array is longer than the specified length, it is returned as-is.\n */\nexport const padBytes = (bytes: Uint8Array, length: number): Uint8Array => {\n    if (bytes.length >= length) return bytes;\n    const paddedBytes = new Uint8Array(length).fill(0);\n    paddedBytes.set(bytes);\n    return paddedBytes;\n};\n\n/**\n * Fixes a `Uint8Array` to the specified length.\n * If the array is longer than the specified length, it is truncated.\n * If the array is shorter than the specified length, it is padded with zeroes.\n */\nexport const fixBytes = (bytes: Uint8Array, length: number): Uint8Array =>\n    padBytes(bytes.length <= length ? bytes : bytes.slice(0, length), length);\n","import {\n    SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH,\n    SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH,\n    SolanaError,\n} from '@solana/errors';\n\n/**\n * Defines an offset in bytes.\n */\nexport type Offset = number;\n\ntype BaseEncoder<TFrom> = {\n    /** Encode the provided value and return the encoded bytes directly. */\n    readonly encode: (value: TFrom) => Uint8Array;\n    /**\n     * Writes the encoded value into the provided byte array at the given offset.\n     * Returns the offset of the next byte after the encoded value.\n     */\n    readonly write: (value: TFrom, bytes: Uint8Array, offset: Offset) => Offset;\n};\n\nexport type FixedSizeEncoder<TFrom, TSize extends number = number> = BaseEncoder<TFrom> & {\n    /** The fixed size of the encoded value in bytes. */\n    readonly fixedSize: TSize;\n};\n\nexport type VariableSizeEncoder<TFrom> = BaseEncoder<TFrom> & {\n    /** The total size of the encoded value in bytes. */\n    readonly getSizeFromValue: (value: TFrom) => number;\n    /** The maximum size an encoded value can be in bytes, if applicable. */\n    readonly maxSize?: number;\n};\n\n/**\n * An object that can encode a value to a `Uint8Array`.\n */\nexport type Encoder<TFrom> = FixedSizeEncoder<TFrom> | VariableSizeEncoder<TFrom>;\n\ntype BaseDecoder<TTo> = {\n    /** Decodes the provided byte array at the given offset (or zero) and returns the value directly. */\n    readonly decode: (bytes: Uint8Array, offset?: Offset) => TTo;\n    /**\n     * Reads the encoded value from the provided byte array at the given offset.\n     * Returns the decoded value and the offset of the next byte after the encoded value.\n     */\n    readonly read: (bytes: Uint8Array, offset: Offset) => [TTo, Offset];\n};\n\nexport type FixedSizeDecoder<TTo, TSize extends number = number> = BaseDecoder<TTo> & {\n    /** The fixed size of the encoded value in bytes. */\n    readonly fixedSize: TSize;\n};\n\nexport type VariableSizeDecoder<TTo> = BaseDecoder<TTo> & {\n    /** The maximum size an encoded value can be in bytes, if applicable. */\n    readonly maxSize?: number;\n};\n\n/**\n * An object that can decode a value from a `Uint8Array`.\n */\nexport type Decoder<TTo> = FixedSizeDecoder<TTo> | VariableSizeDecoder<TTo>;\n\nexport type FixedSizeCodec<TFrom, TTo extends TFrom = TFrom, TSize extends number = number> = FixedSizeDecoder<\n    TTo,\n    TSize\n> &\n    FixedSizeEncoder<TFrom, TSize>;\n\nexport type VariableSizeCodec<TFrom, TTo extends TFrom = TFrom> = VariableSizeDecoder<TTo> & VariableSizeEncoder<TFrom>;\n\n/**\n * An object that can encode and decode a value to and from a `Uint8Array`.\n * It supports encoding looser types than it decodes for convenience.\n * For example, a `bigint` encoder will always decode to a `bigint`\n * but can be used to encode a `number`.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value. Defaults to `TFrom`.\n */\nexport type Codec<TFrom, TTo extends TFrom = TFrom> = FixedSizeCodec<TFrom, TTo> | VariableSizeCodec<TFrom, TTo>;\n\n/**\n * Get the encoded size of a given value in bytes.\n */\nexport function getEncodedSize<TFrom>(\n    value: TFrom,\n    encoder: { fixedSize: number } | { getSizeFromValue: (value: TFrom) => number },\n): number {\n    return 'fixedSize' in encoder ? encoder.fixedSize : encoder.getSizeFromValue(value);\n}\n\n/** Fills the missing `encode` function using the existing `write` function. */\nexport function createEncoder<TFrom, TSize extends number>(\n    encoder: Omit<FixedSizeEncoder<TFrom, TSize>, 'encode'>,\n): FixedSizeEncoder<TFrom, TSize>;\nexport function createEncoder<TFrom>(encoder: Omit<VariableSizeEncoder<TFrom>, 'encode'>): VariableSizeEncoder<TFrom>;\nexport function createEncoder<TFrom>(\n    encoder: Omit<FixedSizeEncoder<TFrom>, 'encode'> | Omit<VariableSizeEncoder<TFrom>, 'encode'>,\n): Encoder<TFrom>;\nexport function createEncoder<TFrom>(\n    encoder: Omit<FixedSizeEncoder<TFrom>, 'encode'> | Omit<VariableSizeEncoder<TFrom>, 'encode'>,\n): Encoder<TFrom> {\n    return Object.freeze({\n        ...encoder,\n        encode: value => {\n            const bytes = new Uint8Array(getEncodedSize(value, encoder));\n            encoder.write(value, bytes, 0);\n            return bytes;\n        },\n    });\n}\n\n/** Fills the missing `decode` function using the existing `read` function. */\nexport function createDecoder<TTo, TSize extends number>(\n    decoder: Omit<FixedSizeDecoder<TTo, TSize>, 'decode'>,\n): FixedSizeDecoder<TTo, TSize>;\nexport function createDecoder<TTo>(decoder: Omit<VariableSizeDecoder<TTo>, 'decode'>): VariableSizeDecoder<TTo>;\nexport function createDecoder<TTo>(\n    decoder: Omit<FixedSizeDecoder<TTo>, 'decode'> | Omit<VariableSizeDecoder<TTo>, 'decode'>,\n): Decoder<TTo>;\nexport function createDecoder<TTo>(\n    decoder: Omit<FixedSizeDecoder<TTo>, 'decode'> | Omit<VariableSizeDecoder<TTo>, 'decode'>,\n): Decoder<TTo> {\n    return Object.freeze({\n        ...decoder,\n        decode: (bytes, offset = 0) => decoder.read(bytes, offset)[0],\n    });\n}\n\n/** Fills the missing `encode` and `decode` function using the existing `write` and `read` functions. */\nexport function createCodec<TFrom, TTo extends TFrom = TFrom, TSize extends number = number>(\n    codec: Omit<FixedSizeCodec<TFrom, TTo, TSize>, 'decode' | 'encode'>,\n): FixedSizeCodec<TFrom, TTo, TSize>;\nexport function createCodec<TFrom, TTo extends TFrom = TFrom>(\n    codec: Omit<VariableSizeCodec<TFrom, TTo>, 'decode' | 'encode'>,\n): VariableSizeCodec<TFrom, TTo>;\nexport function createCodec<TFrom, TTo extends TFrom = TFrom>(\n    codec:\n        | Omit<FixedSizeCodec<TFrom, TTo>, 'decode' | 'encode'>\n        | Omit<VariableSizeCodec<TFrom, TTo>, 'decode' | 'encode'>,\n): Codec<TFrom, TTo>;\nexport function createCodec<TFrom, TTo extends TFrom = TFrom>(\n    codec:\n        | Omit<FixedSizeCodec<TFrom, TTo>, 'decode' | 'encode'>\n        | Omit<VariableSizeCodec<TFrom, TTo>, 'decode' | 'encode'>,\n): Codec<TFrom, TTo> {\n    return Object.freeze({\n        ...codec,\n        decode: (bytes, offset = 0) => codec.read(bytes, offset)[0],\n        encode: value => {\n            const bytes = new Uint8Array(getEncodedSize(value, codec));\n            codec.write(value, bytes, 0);\n            return bytes;\n        },\n    });\n}\n\nexport function isFixedSize<TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize> | VariableSizeEncoder<TFrom>,\n): encoder is FixedSizeEncoder<TFrom, TSize>;\nexport function isFixedSize<TTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TTo, TSize> | VariableSizeDecoder<TTo>,\n): decoder is FixedSizeDecoder<TTo, TSize>;\nexport function isFixedSize<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize> | VariableSizeCodec<TFrom, TTo>,\n): codec is FixedSizeCodec<TFrom, TTo, TSize>;\nexport function isFixedSize<TSize extends number>(\n    codec: { fixedSize: TSize } | { maxSize?: number },\n): codec is { fixedSize: TSize };\nexport function isFixedSize(codec: { fixedSize: number } | { maxSize?: number }): codec is { fixedSize: number } {\n    return 'fixedSize' in codec && typeof codec.fixedSize === 'number';\n}\n\nexport function assertIsFixedSize<TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize> | VariableSizeEncoder<TFrom>,\n): asserts encoder is FixedSizeEncoder<TFrom, TSize>;\nexport function assertIsFixedSize<TTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TTo, TSize> | VariableSizeDecoder<TTo>,\n): asserts decoder is FixedSizeDecoder<TTo, TSize>;\nexport function assertIsFixedSize<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize> | VariableSizeCodec<TFrom, TTo>,\n): asserts codec is FixedSizeCodec<TFrom, TTo, TSize>;\nexport function assertIsFixedSize<TSize extends number>(\n    codec: { fixedSize: TSize } | { maxSize?: number },\n): asserts codec is { fixedSize: TSize };\nexport function assertIsFixedSize(\n    codec: { fixedSize: number } | { maxSize?: number },\n): asserts codec is { fixedSize: number } {\n    if (!isFixedSize(codec)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH);\n    }\n}\n\nexport function isVariableSize<TFrom>(encoder: Encoder<TFrom>): encoder is VariableSizeEncoder<TFrom>;\nexport function isVariableSize<TTo>(decoder: Decoder<TTo>): decoder is VariableSizeDecoder<TTo>;\nexport function isVariableSize<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n): codec is VariableSizeCodec<TFrom, TTo>;\nexport function isVariableSize(codec: { fixedSize: number } | { maxSize?: number }): codec is { maxSize?: number };\nexport function isVariableSize(codec: { fixedSize: number } | { maxSize?: number }): codec is { maxSize?: number } {\n    return !isFixedSize(codec);\n}\n\nexport function assertIsVariableSize<T>(encoder: Encoder<T>): asserts encoder is VariableSizeEncoder<T>;\nexport function assertIsVariableSize<T>(decoder: Decoder<T>): asserts decoder is VariableSizeDecoder<T>;\nexport function assertIsVariableSize<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n): asserts codec is VariableSizeCodec<TFrom, TTo>;\nexport function assertIsVariableSize(\n    codec: { fixedSize: number } | { maxSize?: number },\n): asserts codec is { maxSize?: number };\nexport function assertIsVariableSize(\n    codec: { fixedSize: number } | { maxSize?: number },\n): asserts codec is { maxSize?: number } {\n    if (!isVariableSize(codec)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH);\n    }\n}\n","import {\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH,\n    SolanaError,\n} from '@solana/errors';\n\nimport {\n    Codec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from './codec';\n\n/**\n * Combines an encoder and a decoder into a codec.\n * The encoder and decoder must have the same fixed size, max size and description.\n * If a description is provided, it will override the encoder and decoder descriptions.\n */\nexport function combineCodec<TFrom, TTo extends TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize>,\n    decoder: FixedSizeDecoder<TTo, TSize>,\n): FixedSizeCodec<TFrom, TTo, TSize>;\nexport function combineCodec<TFrom, TTo extends TFrom>(\n    encoder: VariableSizeEncoder<TFrom>,\n    decoder: VariableSizeDecoder<TTo>,\n): VariableSizeCodec<TFrom, TTo>;\nexport function combineCodec<TFrom, TTo extends TFrom>(\n    encoder: Encoder<TFrom>,\n    decoder: Decoder<TTo>,\n): Codec<TFrom, TTo>;\nexport function combineCodec<TFrom, TTo extends TFrom>(\n    encoder: Encoder<TFrom>,\n    decoder: Decoder<TTo>,\n): Codec<TFrom, TTo> {\n    if (isFixedSize(encoder) !== isFixedSize(decoder)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);\n    }\n\n    if (isFixedSize(encoder) && isFixedSize(decoder) && encoder.fixedSize !== decoder.fixedSize) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, {\n            decoderFixedSize: decoder.fixedSize,\n            encoderFixedSize: encoder.fixedSize,\n        });\n    }\n\n    if (!isFixedSize(encoder) && !isFixedSize(decoder) && encoder.maxSize !== decoder.maxSize) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, {\n            decoderMaxSize: decoder.maxSize,\n            encoderMaxSize: encoder.maxSize,\n        });\n    }\n\n    return {\n        ...decoder,\n        ...encoder,\n        decode: decoder.decode,\n        encode: encoder.encode,\n        read: decoder.read,\n        write: encoder.write,\n    };\n}\n","import { assertByteArrayHasEnoughBytesForCodec } from './assertions';\nimport { fixBytes } from './bytes';\nimport {\n    Codec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n    Offset,\n} from './codec';\nimport { combineCodec } from './combine-codec';\n\n/**\n * Creates a fixed-size encoder from a given encoder.\n *\n * @param encoder - The encoder to wrap into a fixed-size encoder.\n * @param fixedBytes - The fixed number of bytes to write.\n */\nexport function fixEncoder<TFrom, TSize extends number>(\n    encoder: Encoder<TFrom>,\n    fixedBytes: TSize,\n): FixedSizeEncoder<TFrom, TSize> {\n    return createEncoder({\n        fixedSize: fixedBytes,\n        write: (value: TFrom, bytes: Uint8Array, offset: Offset) => {\n            // Here we exceptionally use the `encode` function instead of the `write`\n            // function as using the nested `write` function on a fixed-sized byte\n            // array may result in a out-of-bounds error on the nested encoder.\n            const variableByteArray = encoder.encode(value);\n            const fixedByteArray =\n                variableByteArray.length > fixedBytes ? variableByteArray.slice(0, fixedBytes) : variableByteArray;\n            bytes.set(fixedByteArray, offset);\n            return offset + fixedBytes;\n        },\n    });\n}\n\n/**\n * Creates a fixed-size decoder from a given decoder.\n *\n * @param decoder - The decoder to wrap into a fixed-size decoder.\n * @param fixedBytes - The fixed number of bytes to read.\n */\nexport function fixDecoder<TTo, TSize extends number>(\n    decoder: Decoder<TTo>,\n    fixedBytes: TSize,\n): FixedSizeDecoder<TTo, TSize> {\n    return createDecoder({\n        fixedSize: fixedBytes,\n        read: (bytes: Uint8Array, offset: Offset) => {\n            assertByteArrayHasEnoughBytesForCodec('fixCodec', fixedBytes, bytes, offset);\n            // Slice the byte array to the fixed size if necessary.\n            if (offset > 0 || bytes.length > fixedBytes) {\n                bytes = bytes.slice(offset, offset + fixedBytes);\n            }\n            // If the nested decoder is fixed-size, pad and truncate the byte array accordingly.\n            if (isFixedSize(decoder)) {\n                bytes = fixBytes(bytes, decoder.fixedSize);\n            }\n            // Decode the value using the nested decoder.\n            const [value] = decoder.read(bytes, 0);\n            return [value, offset + fixedBytes];\n        },\n    });\n}\n\n/**\n * Creates a fixed-size codec from a given codec.\n *\n * @param codec - The codec to wrap into a fixed-size codec.\n * @param fixedBytes - The fixed number of bytes to read/write.\n */\nexport function fixCodec<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: Codec<TFrom, TTo>,\n    fixedBytes: TSize,\n): FixedSizeCodec<TFrom, TTo, TSize> {\n    return combineCodec(fixEncoder(codec, fixedBytes), fixDecoder(codec, fixedBytes));\n}\n","import {\n    Codec,\n    createCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isVariableSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from './codec';\n\n/**\n * Converts an encoder A to a encoder B by mapping their values.\n */\nexport function mapEncoder<TOldFrom, TNewFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TOldFrom, TSize>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): FixedSizeEncoder<TNewFrom, TSize>;\nexport function mapEncoder<TOldFrom, TNewFrom>(\n    encoder: VariableSizeEncoder<TOldFrom>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): VariableSizeEncoder<TNewFrom>;\nexport function mapEncoder<TOldFrom, TNewFrom>(\n    encoder: Encoder<TOldFrom>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): Encoder<TNewFrom>;\nexport function mapEncoder<TOldFrom, TNewFrom>(\n    encoder: Encoder<TOldFrom>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): Encoder<TNewFrom> {\n    return createEncoder({\n        ...(isVariableSize(encoder)\n            ? { ...encoder, getSizeFromValue: (value: TNewFrom) => encoder.getSizeFromValue(unmap(value)) }\n            : encoder),\n        write: (value: TNewFrom, bytes, offset) => encoder.write(unmap(value), bytes, offset),\n    });\n}\n\n/**\n * Converts an decoder A to a decoder B by mapping their values.\n */\nexport function mapDecoder<TOldTo, TNewTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TOldTo, TSize>,\n    map: (value: TOldTo, bytes: Uint8Array, offset: number) => TNewTo,\n): FixedSizeDecoder<TNewTo, TSize>;\nexport function mapDecoder<TOldTo, TNewTo>(\n    decoder: VariableSizeDecoder<TOldTo>,\n    map: (value: TOldTo, bytes: Uint8Array, offset: number) => TNewTo,\n): VariableSizeDecoder<TNewTo>;\nexport function mapDecoder<TOldTo, TNewTo>(\n    decoder: Decoder<TOldTo>,\n    map: (value: TOldTo, bytes: Uint8Array, offset: number) => TNewTo,\n): Decoder<TNewTo>;\nexport function mapDecoder<TOldTo, TNewTo>(\n    decoder: Decoder<TOldTo>,\n    map: (value: TOldTo, bytes: Uint8Array, offset: number) => TNewTo,\n): Decoder<TNewTo> {\n    return createDecoder({\n        ...decoder,\n        read: (bytes: Uint8Array, offset) => {\n            const [value, newOffset] = decoder.read(bytes, offset);\n            return [map(value, bytes, offset), newOffset];\n        },\n    });\n}\n\n/**\n * Converts a codec A to a codec B by mapping their values.\n */\nexport function mapCodec<TOldFrom, TNewFrom, TTo extends TNewFrom & TOldFrom, TSize extends number>(\n    codec: FixedSizeCodec<TOldFrom, TTo, TSize>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): FixedSizeCodec<TNewFrom, TTo, TSize>;\nexport function mapCodec<TOldFrom, TNewFrom, TTo extends TNewFrom & TOldFrom>(\n    codec: VariableSizeCodec<TOldFrom, TTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): VariableSizeCodec<TNewFrom, TTo>;\nexport function mapCodec<TOldFrom, TNewFrom, TTo extends TNewFrom & TOldFrom>(\n    codec: Codec<TOldFrom, TTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): Codec<TNewFrom, TTo>;\nexport function mapCodec<TOldFrom, TNewFrom, TOldTo extends TOldFrom, TNewTo extends TNewFrom, TSize extends number>(\n    codec: FixedSizeCodec<TOldFrom, TOldTo, TSize>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map: (value: TOldTo, bytes: Uint8Array, offset: number) => TNewTo,\n): FixedSizeCodec<TNewFrom, TNewTo, TSize>;\nexport function mapCodec<TOldFrom, TNewFrom, TOldTo extends TOldFrom, TNewTo extends TNewFrom>(\n    codec: VariableSizeCodec<TOldFrom, TOldTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map: (value: TOldTo, bytes: Uint8Array, offset: number) => TNewTo,\n): VariableSizeCodec<TNewFrom, TNewTo>;\nexport function mapCodec<TOldFrom, TNewFrom, TOldTo extends TOldFrom, TNewTo extends TNewFrom>(\n    codec: Codec<TOldFrom, TOldTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map: (value: TOldTo, bytes: Uint8Array, offset: number) => TNewTo,\n): Codec<TNewFrom, TNewTo>;\nexport function mapCodec<TOldFrom, TNewFrom, TOldTo extends TOldFrom, TNewTo extends TNewFrom>(\n    codec: Codec<TOldFrom, TOldTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map?: (value: TOldTo, bytes: Uint8Array, offset: number) => TNewTo,\n): Codec<TNewFrom, TNewTo> {\n    return createCodec({\n        ...mapEncoder(codec, unmap),\n        read: map ? mapDecoder(codec, map).read : (codec.read as unknown as Decoder<TNewTo>['read']),\n    });\n}\n","import { assertByteArrayOffsetIsNotOutOfRange } from './assertions';\nimport { Codec, createDecoder, createEncoder, Decoder, Encoder, Offset } from './codec';\nimport { combineCodec } from './combine-codec';\n\ntype OffsetConfig = {\n    postOffset?: PostOffsetFunction;\n    preOffset?: PreOffsetFunction;\n};\n\ntype PreOffsetFunctionScope = {\n    /** The entire byte array. */\n    bytes: Uint8Array;\n    /** The original offset prior to encode or decode. */\n    preOffset: Offset;\n    /** Wraps the offset to the byte array length. */\n    wrapBytes: (offset: Offset) => Offset;\n};\n\ntype PreOffsetFunction = (scope: PreOffsetFunctionScope) => Offset;\ntype PostOffsetFunction = (\n    scope: PreOffsetFunctionScope & {\n        /** The modified offset used to encode or decode. */\n        newPreOffset: Offset;\n        /** The original offset returned by the encoder or decoder. */\n        postOffset: Offset;\n    },\n) => Offset;\n\n/**\n * Moves the offset of a given encoder.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function offsetEncoder<TEncoder extends Encoder<any>>(encoder: TEncoder, config: OffsetConfig): TEncoder {\n    return createEncoder({\n        ...encoder,\n        write: (value, bytes, preOffset) => {\n            const wrapBytes = (offset: Offset) => modulo(offset, bytes.length);\n            const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetEncoder', newPreOffset, bytes.length);\n            const postOffset = encoder.write(value, bytes, newPreOffset);\n            const newPostOffset = config.postOffset\n                ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes })\n                : postOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetEncoder', newPostOffset, bytes.length);\n            return newPostOffset;\n        },\n    }) as TEncoder;\n}\n\n/**\n * Moves the offset of a given decoder.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function offsetDecoder<TDecoder extends Decoder<any>>(decoder: TDecoder, config: OffsetConfig): TDecoder {\n    return createDecoder({\n        ...decoder,\n        read: (bytes, preOffset) => {\n            const wrapBytes = (offset: Offset) => modulo(offset, bytes.length);\n            const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetDecoder', newPreOffset, bytes.length);\n            const [value, postOffset] = decoder.read(bytes, newPreOffset);\n            const newPostOffset = config.postOffset\n                ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes })\n                : postOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetDecoder', newPostOffset, bytes.length);\n            return [value, newPostOffset];\n        },\n    }) as TDecoder;\n}\n\n/**\n * Moves the offset of a given codec.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function offsetCodec<TCodec extends Codec<any>>(codec: TCodec, config: OffsetConfig): TCodec {\n    return combineCodec(offsetEncoder(codec, config), offsetDecoder(codec, config)) as TCodec;\n}\n\n/** A modulo function that handles negative dividends and zero divisors. */\nfunction modulo(dividend: number, divisor: number) {\n    if (divisor === 0) return 0;\n    return ((dividend % divisor) + divisor) % divisor;\n}\n","import { SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SolanaError } from '@solana/errors';\n\nimport {\n    Codec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n} from './codec';\nimport { combineCodec } from './combine-codec';\n\n/**\n * Updates the size of a given encoder.\n */\nexport function resizeEncoder<TFrom, TSize extends number, TNewSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize>,\n    resize: (size: TSize) => TNewSize,\n): FixedSizeEncoder<TFrom, TNewSize>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function resizeEncoder<TEncoder extends Encoder<any>>(\n    encoder: TEncoder,\n    resize: (size: number) => number,\n): TEncoder;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function resizeEncoder<TEncoder extends Encoder<any>>(\n    encoder: TEncoder,\n    resize: (size: number) => number,\n): TEncoder {\n    if (isFixedSize(encoder)) {\n        const fixedSize = resize(encoder.fixedSize);\n        if (fixedSize < 0) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n                bytesLength: fixedSize,\n                codecDescription: 'resizeEncoder',\n            });\n        }\n        return createEncoder({ ...encoder, fixedSize }) as TEncoder;\n    }\n    return createEncoder({\n        ...encoder,\n        getSizeFromValue: value => {\n            const newSize = resize(encoder.getSizeFromValue(value));\n            if (newSize < 0) {\n                throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n                    bytesLength: newSize,\n                    codecDescription: 'resizeEncoder',\n                });\n            }\n            return newSize;\n        },\n    }) as TEncoder;\n}\n\n/**\n * Updates the size of a given decoder.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nexport function resizeDecoder<TFrom, TSize extends number, TNewSize extends number>(\n    decoder: FixedSizeDecoder<TFrom, TSize>,\n    resize: (size: TSize) => TNewSize,\n): FixedSizeDecoder<TFrom, TNewSize>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function resizeDecoder<TDecoder extends Decoder<any>>(\n    decoder: TDecoder,\n    resize: (size: number) => number,\n): TDecoder;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function resizeDecoder<TDecoder extends Decoder<any>>(\n    decoder: TDecoder,\n    resize: (size: number) => number,\n): TDecoder {\n    if (isFixedSize(decoder)) {\n        const fixedSize = resize(decoder.fixedSize);\n        if (fixedSize < 0) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n                bytesLength: fixedSize,\n                codecDescription: 'resizeDecoder',\n            });\n        }\n        return createDecoder({ ...decoder, fixedSize }) as TDecoder;\n    }\n    return decoder;\n}\n\n/**\n * Updates the size of a given codec.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function resizeCodec<TFrom, TTo extends TFrom, TSize extends number, TNewSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize>,\n    resize: (size: TSize) => TNewSize,\n): FixedSizeCodec<TFrom, TTo, TNewSize>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function resizeCodec<TCodec extends Codec<any>>(codec: TCodec, resize: (size: number) => number): TCodec;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function resizeCodec<TCodec extends Codec<any>>(codec: TCodec, resize: (size: number) => number): TCodec {\n    return combineCodec(resizeEncoder(codec, resize), resizeDecoder(codec, resize)) as TCodec;\n}\n","import { Codec, Decoder, Encoder, Offset } from './codec';\nimport { combineCodec } from './combine-codec';\nimport { offsetDecoder, offsetEncoder } from './offset-codec';\nimport { resizeDecoder, resizeEncoder } from './resize-codec';\n\n/**\n * Adds left padding to the given encoder.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function padLeftEncoder<TEncoder extends Encoder<any>>(encoder: TEncoder, offset: Offset): TEncoder {\n    return offsetEncoder(\n        resizeEncoder(encoder, size => size + offset),\n        { preOffset: ({ preOffset }) => preOffset + offset },\n    );\n}\n\n/**\n * Adds right padding to the given encoder.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function padRightEncoder<TEncoder extends Encoder<any>>(encoder: TEncoder, offset: Offset): TEncoder {\n    return offsetEncoder(\n        resizeEncoder(encoder, size => size + offset),\n        { postOffset: ({ postOffset }) => postOffset + offset },\n    );\n}\n\n/**\n * Adds left padding to the given decoder.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function padLeftDecoder<TDecoder extends Decoder<any>>(decoder: TDecoder, offset: Offset): TDecoder {\n    return offsetDecoder(\n        resizeDecoder(decoder, size => size + offset),\n        { preOffset: ({ preOffset }) => preOffset + offset },\n    );\n}\n\n/**\n * Adds right padding to the given decoder.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function padRightDecoder<TDecoder extends Decoder<any>>(decoder: TDecoder, offset: Offset): TDecoder {\n    return offsetDecoder(\n        resizeDecoder(decoder, size => size + offset),\n        { postOffset: ({ postOffset }) => postOffset + offset },\n    );\n}\n\n/**\n * Adds left padding to the given codec.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function padLeftCodec<TCodec extends Codec<any>>(codec: TCodec, offset: Offset): TCodec {\n    return combineCodec(padLeftEncoder(codec, offset), padLeftDecoder(codec, offset)) as TCodec;\n}\n\n/**\n * Adds right padding to the given codec.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function padRightCodec<TCodec extends Codec<any>>(codec: TCodec, offset: Offset): TCodec {\n    return combineCodec(padRightEncoder(codec, offset), padRightDecoder(codec, offset)) as TCodec;\n}\n","import {\n    assertIsFixedSize,\n    createDecoder,\n    createEncoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n} from './codec';\nimport { combineCodec } from './combine-codec';\n\n/**\n * Reverses the bytes of a fixed-size encoder.\n */\nexport function reverseEncoder<TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize>,\n): FixedSizeEncoder<TFrom, TSize> {\n    assertIsFixedSize(encoder);\n    return createEncoder({\n        ...encoder,\n        write: (value: TFrom, bytes, offset) => {\n            const newOffset = encoder.write(value, bytes, offset);\n            const slice = bytes.slice(offset, offset + encoder.fixedSize).reverse();\n            bytes.set(slice, offset);\n            return newOffset;\n        },\n    });\n}\n\n/**\n * Reverses the bytes of a fixed-size decoder.\n */\nexport function reverseDecoder<TTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TTo, TSize>,\n): FixedSizeDecoder<TTo, TSize> {\n    assertIsFixedSize(decoder);\n    return createDecoder({\n        ...decoder,\n        read: (bytes, offset) => {\n            const reverseEnd = offset + decoder.fixedSize;\n            if (offset === 0 && bytes.length === reverseEnd) {\n                return decoder.read(bytes.reverse(), offset);\n            }\n            const reversedBytes = bytes.slice();\n            reversedBytes.set(bytes.slice(offset, reverseEnd).reverse(), offset);\n            return decoder.read(reversedBytes, offset);\n        },\n    });\n}\n\n/**\n * Reverses the bytes of a fixed-size codec.\n */\nexport function reverseCodec<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize>,\n): FixedSizeCodec<TFrom, TTo, TSize> {\n    return combineCodec(reverseEncoder(codec), reverseDecoder(codec));\n}\n"],"names":["SolanaError"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9]}},
    {"offset": {"line": 3832, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3838, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/assertions.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/common.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/f32.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/utils.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/f64.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/i128.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/i16.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/i32.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/i64.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/i8.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/short-u16.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/u128.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/u16.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/u32.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/u64.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-numbers/src/u8.ts"],"sourcesContent":["import { SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, SolanaError } from '@solana/errors';\n\n/**\n * Asserts that a given number is between a given range.\n */\nexport function assertNumberIsBetweenForCodec(\n    codecDescription: string,\n    min: bigint | number,\n    max: bigint | number,\n    value: bigint | number,\n) {\n    if (value < min || value > max) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, {\n            codecDescription,\n            max,\n            min,\n            value,\n        });\n    }\n}\n","import { Codec, Decoder, Encoder, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\n/** Defines a encoder for numbers and bigints. */\nexport type NumberEncoder = Encoder<bigint | number> | Encoder<number>;\n\n/** Defines a fixed-size encoder for numbers and bigints. */\nexport type FixedSizeNumberEncoder<TSize extends number = number> =\n    | FixedSizeEncoder<bigint | number, TSize>\n    | FixedSizeEncoder<number, TSize>;\n\n/** Defines a decoder for numbers and bigints. */\nexport type NumberDecoder = Decoder<bigint> | Decoder<number>;\n\n/** Defines a fixed-size decoder for numbers and bigints. */\nexport type FixedSizeNumberDecoder<TSize extends number = number> =\n    | FixedSizeDecoder<bigint, TSize>\n    | FixedSizeDecoder<number, TSize>;\n\n/** Defines a codec for numbers and bigints. */\nexport type NumberCodec = Codec<bigint | number, bigint> | Codec<number>;\n\n/** Defines a fixed-size codec for numbers and bigints. */\nexport type FixedSizeNumberCodec<TSize extends number = number> =\n    | FixedSizeCodec<bigint | number, bigint, TSize>\n    | FixedSizeCodec<number, number, TSize>;\n\n/** Defines the config for number codecs that use more than one byte. */\nexport type NumberCodecConfig = {\n    /**\n     * Whether the serializer should use little-endian or big-endian encoding.\n     * @defaultValue `Endian.LITTLE`\n     */\n    endian?: Endian;\n};\n\n/** Defines the endianness of a number serializer. */\nexport enum Endian {\n    LITTLE,\n    BIG,\n}\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getF32Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<number, 4> =>\n    numberEncoderFactory({\n        config,\n        name: 'f32',\n        set: (view, value, le) => view.setFloat32(0, value, le),\n        size: 4,\n    });\n\nexport const getF32Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 4> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getFloat32(0, le),\n        name: 'f32',\n        size: 4,\n    });\n\nexport const getF32Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<number, number, 4> =>\n    combineCodec(getF32Encoder(config), getF32Decoder(config));\n","import {\n    assertByteArrayHasEnoughBytesForCodec,\n    assertByteArrayIsNotEmptyForCodec,\n    createDecoder,\n    createEncoder,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    Offset,\n} from '@solana/codecs-core';\n\nimport { assertNumberIsBetweenForCodec } from './assertions';\nimport { Endian, NumberCodecConfig } from './common';\n\ntype NumberFactorySharedInput<TSize extends number> = {\n    config?: NumberCodecConfig;\n    name: string;\n    size: TSize;\n};\n\ntype NumberFactoryEncoderInput<TFrom, TSize extends number> = NumberFactorySharedInput<TSize> & {\n    range?: [bigint | number, bigint | number];\n    set: (view: DataView, value: TFrom, littleEndian?: boolean) => void;\n};\n\ntype NumberFactoryDecoderInput<TTo, TSize extends number> = NumberFactorySharedInput<TSize> & {\n    get: (view: DataView, littleEndian?: boolean) => TTo;\n};\n\nfunction isLittleEndian(config?: NumberCodecConfig): boolean {\n    return config?.endian === Endian.BIG ? false : true;\n}\n\nexport function numberEncoderFactory<TFrom extends bigint | number, TSize extends number>(\n    input: NumberFactoryEncoderInput<TFrom, TSize>,\n): FixedSizeEncoder<TFrom, TSize> {\n    return createEncoder({\n        fixedSize: input.size,\n        write(value: TFrom, bytes: Uint8Array, offset: Offset): Offset {\n            if (input.range) {\n                assertNumberIsBetweenForCodec(input.name, input.range[0], input.range[1], value);\n            }\n            const arrayBuffer = new ArrayBuffer(input.size);\n            input.set(new DataView(arrayBuffer), value, isLittleEndian(input.config));\n            bytes.set(new Uint8Array(arrayBuffer), offset);\n            return offset + input.size;\n        },\n    });\n}\n\nexport function numberDecoderFactory<TTo extends bigint | number, TSize extends number>(\n    input: NumberFactoryDecoderInput<TTo, TSize>,\n): FixedSizeDecoder<TTo, TSize> {\n    return createDecoder({\n        fixedSize: input.size,\n        read(bytes, offset = 0): [TTo, number] {\n            assertByteArrayIsNotEmptyForCodec(input.name, bytes, offset);\n            assertByteArrayHasEnoughBytesForCodec(input.name, input.size, bytes, offset);\n            const view = new DataView(toArrayBuffer(bytes, offset, input.size));\n            return [input.get(view, isLittleEndian(input.config)), offset + input.size];\n        },\n    });\n}\n\n/**\n * Helper function to ensure that the ArrayBuffer is converted properly from a Uint8Array\n * Source: https://stackoverflow.com/questions/37228285/uint8array-to-arraybuffer\n */\nfunction toArrayBuffer(bytes: Uint8Array, offset?: number, length?: number): ArrayBuffer {\n    const bytesOffset = bytes.byteOffset + (offset ?? 0);\n    const bytesLength = length ?? bytes.byteLength;\n    return bytes.buffer.slice(bytesOffset, bytesOffset + bytesLength);\n}\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getF64Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<number, 8> =>\n    numberEncoderFactory({\n        config,\n        name: 'f64',\n        set: (view, value, le) => view.setFloat64(0, value, le),\n        size: 8,\n    });\n\nexport const getF64Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 8> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getFloat64(0, le),\n        name: 'f64',\n        size: 8,\n    });\n\nexport const getF64Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<number, number, 8> =>\n    combineCodec(getF64Encoder(config), getF64Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getI128Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 16> =>\n    numberEncoderFactory({\n        config,\n        name: 'i128',\n        range: [-BigInt('0x7fffffffffffffffffffffffffffffff') - 1n, BigInt('0x7fffffffffffffffffffffffffffffff')],\n        set: (view, value, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const rightMask = 0xffffffffffffffffn;\n            view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n            view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n        },\n        size: 16,\n    });\n\nexport const getI128Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 16> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const left = view.getBigInt64(leftOffset, le);\n            const right = view.getBigUint64(rightOffset, le);\n            return (left << 64n) + right;\n        },\n        name: 'i128',\n        size: 16,\n    });\n\nexport const getI128Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 16> =>\n    combineCodec(getI128Encoder(config), getI128Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getI16Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<number, 2> =>\n    numberEncoderFactory({\n        config,\n        name: 'i16',\n        range: [-Number('0x7fff') - 1, Number('0x7fff')],\n        set: (view, value, le) => view.setInt16(0, value, le),\n        size: 2,\n    });\n\nexport const getI16Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 2> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getInt16(0, le),\n        name: 'i16',\n        size: 2,\n    });\n\nexport const getI16Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<number, number, 2> =>\n    combineCodec(getI16Encoder(config), getI16Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getI32Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<number, 4> =>\n    numberEncoderFactory({\n        config,\n        name: 'i32',\n        range: [-Number('0x7fffffff') - 1, Number('0x7fffffff')],\n        set: (view, value, le) => view.setInt32(0, value, le),\n        size: 4,\n    });\n\nexport const getI32Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 4> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getInt32(0, le),\n        name: 'i32',\n        size: 4,\n    });\n\nexport const getI32Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<number, number, 4> =>\n    combineCodec(getI32Encoder(config), getI32Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getI64Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 8> =>\n    numberEncoderFactory({\n        config,\n        name: 'i64',\n        range: [-BigInt('0x7fffffffffffffff') - 1n, BigInt('0x7fffffffffffffff')],\n        set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n        size: 8,\n    });\n\nexport const getI64Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 8> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getBigInt64(0, le),\n        name: 'i64',\n        size: 8,\n    });\n\nexport const getI64Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 8> =>\n    combineCodec(getI64Encoder(config), getI64Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getI8Encoder = (): FixedSizeEncoder<number, 1> =>\n    numberEncoderFactory({\n        name: 'i8',\n        range: [-Number('0x7f') - 1, Number('0x7f')],\n        set: (view, value) => view.setInt8(0, value),\n        size: 1,\n    });\n\nexport const getI8Decoder = (): FixedSizeDecoder<number, 1> =>\n    numberDecoderFactory({\n        get: view => view.getInt8(0),\n        name: 'i8',\n        size: 1,\n    });\n\nexport const getI8Codec = (): FixedSizeCodec<number, number, 1> => combineCodec(getI8Encoder(), getI8Decoder());\n","import {\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Offset,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\n\nimport { assertNumberIsBetweenForCodec } from './assertions';\n\n/**\n * Encodes short u16 numbers.\n * @see {@link getShortU16Codec} for a more detailed description.\n */\nexport const getShortU16Encoder = (): VariableSizeEncoder<number> =>\n    createEncoder({\n        getSizeFromValue: (value: number): number => {\n            if (value <= 0b01111111) return 1;\n            if (value <= 0b0011111111111111) return 2;\n            return 3;\n        },\n        maxSize: 3,\n        write: (value: number, bytes: Uint8Array, offset: Offset): Offset => {\n            assertNumberIsBetweenForCodec('shortU16', 0, 65535, value);\n            const shortU16Bytes = [0];\n            for (let ii = 0; ; ii += 1) {\n                // Shift the bits of the value over such that the next 7 bits are at the right edge.\n                const alignedValue = value >> (ii * 7);\n                if (alignedValue === 0) {\n                    // No more bits to consume.\n                    break;\n                }\n                // Extract those 7 bits using a mask.\n                const nextSevenBits = 0b1111111 & alignedValue;\n                shortU16Bytes[ii] = nextSevenBits;\n                if (ii > 0) {\n                    // Set the continuation bit of the previous slice.\n                    shortU16Bytes[ii - 1] |= 0b10000000;\n                }\n            }\n            bytes.set(shortU16Bytes, offset);\n            return offset + shortU16Bytes.length;\n        },\n    });\n\n/**\n * Decodes short u16 numbers.\n * @see {@link getShortU16Codec} for a more detailed description.\n */\nexport const getShortU16Decoder = (): VariableSizeDecoder<number> =>\n    createDecoder({\n        maxSize: 3,\n        read: (bytes: Uint8Array, offset): [number, Offset] => {\n            let value = 0;\n            let byteCount = 0;\n            while (++byteCount) {\n                const byteIndex = byteCount - 1;\n                const currentByte = bytes[offset + byteIndex];\n                const nextSevenBits = 0b1111111 & currentByte;\n                // Insert the next group of seven bits into the correct slot of the output value.\n                value |= nextSevenBits << (byteIndex * 7);\n                if ((currentByte & 0b10000000) === 0) {\n                    // This byte does not have its continuation bit set. We're done.\n                    break;\n                }\n            }\n            return [value, offset + byteCount];\n        },\n    });\n\n/**\n * Encodes and decodes short u16 numbers.\n *\n * Short u16 numbers are the same as u16, but serialized with 1 to 3 bytes.\n * If the value is above 0x7f, the top bit is set and the remaining\n * value is stored in the next bytes. Each byte follows the same\n * pattern until the 3rd byte. The 3rd byte, if needed, uses\n * all 8 bits to store the last byte of the original value.\n */\nexport const getShortU16Codec = (): VariableSizeCodec<number> =>\n    combineCodec(getShortU16Encoder(), getShortU16Decoder());\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getU128Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 16> =>\n    numberEncoderFactory({\n        config,\n        name: 'u128',\n        range: [0n, BigInt('0xffffffffffffffffffffffffffffffff')],\n        set: (view, value, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const rightMask = 0xffffffffffffffffn;\n            view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n            view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n        },\n        size: 16,\n    });\n\nexport const getU128Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 16> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const left = view.getBigUint64(leftOffset, le);\n            const right = view.getBigUint64(rightOffset, le);\n            return (left << 64n) + right;\n        },\n        name: 'u128',\n        size: 16,\n    });\n\nexport const getU128Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 16> =>\n    combineCodec(getU128Encoder(config), getU128Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getU16Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<number, 2> =>\n    numberEncoderFactory({\n        config,\n        name: 'u16',\n        range: [0, Number('0xffff')],\n        set: (view, value, le) => view.setUint16(0, value, le),\n        size: 2,\n    });\n\nexport const getU16Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 2> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getUint16(0, le),\n        name: 'u16',\n        size: 2,\n    });\n\nexport const getU16Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<number, number, 2> =>\n    combineCodec(getU16Encoder(config), getU16Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getU32Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<number, 4> =>\n    numberEncoderFactory({\n        config,\n        name: 'u32',\n        range: [0, Number('0xffffffff')],\n        set: (view, value, le) => view.setUint32(0, value, le),\n        size: 4,\n    });\n\nexport const getU32Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 4> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getUint32(0, le),\n        name: 'u32',\n        size: 4,\n    });\n\nexport const getU32Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<number, number, 4> =>\n    combineCodec(getU32Encoder(config), getU32Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getU64Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 8> =>\n    numberEncoderFactory({\n        config,\n        name: 'u64',\n        range: [0n, BigInt('0xffffffffffffffff')],\n        set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n        size: 8,\n    });\n\nexport const getU64Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 8> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getBigUint64(0, le),\n        name: 'u64',\n        size: 8,\n    });\n\nexport const getU64Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 8> =>\n    combineCodec(getU64Encoder(config), getU64Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getU8Encoder = (): FixedSizeEncoder<number, 1> =>\n    numberEncoderFactory({\n        name: 'u8',\n        range: [0, Number('0xff')],\n        set: (view, value) => view.setUint8(0, value),\n        size: 1,\n    });\n\nexport const getU8Decoder = (): FixedSizeDecoder<number, 1> =>\n    numberDecoderFactory({\n        get: view => view.getUint8(0),\n        name: 'u8',\n        size: 1,\n    });\n\nexport const getU8Codec = (): FixedSizeCodec<number, number, 1> => combineCodec(getU8Encoder(), getU8Decoder());\n"],"names":["Endian","combineCodec","createDecoder","createEncoder"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}},
    {"offset": {"line": 4206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4212, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/array.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/assertions.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/utils.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/bit-array.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/boolean.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/bytes.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/data-enum.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/map.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/tuple.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/nullable.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/scalar-enum.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/set.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/struct.ts","file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/codecs-data-structures/src/unit.ts"],"sourcesContent":["import {\n    Codec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    getEncodedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport { getU32Decoder, getU32Encoder, NumberCodec, NumberDecoder, NumberEncoder } from '@solana/codecs-numbers';\n\nimport { assertValidNumberOfItemsForCodec } from './assertions';\nimport { getFixedSize, getMaxSize } from './utils';\n\n/**\n * Represents all the size options for array-like codecs\n * — i.e. `array`, `map` and `set`.\n *\n * It can be one of the following:\n * - a {@link NumberCodec} that prefixes its content with its size.\n * - a fixed number of items.\n * - or `'remainder'` to infer the number of items by dividing\n *   the rest of the byte array by the fixed size of its item.\n *   Note that this option is only available for fixed-size items.\n */\nexport type ArrayLikeCodecSize<TPrefix extends NumberCodec | NumberDecoder | NumberEncoder> =\n    | TPrefix\n    | number\n    | 'remainder';\n\n/** Defines the configs for array codecs. */\nexport type ArrayCodecConfig<TPrefix extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The size of the array.\n     * @defaultValue u32 prefix.\n     */\n    size?: ArrayLikeCodecSize<TPrefix>;\n};\n\n/**\n * Encodes an array of items.\n *\n * @param item - The encoder to use for the array's items.\n * @param config - A set of config for the encoder.\n */\nexport function getArrayEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config: ArrayCodecConfig<NumberEncoder> & { size: 0 },\n): FixedSizeEncoder<TFrom[], 0>;\nexport function getArrayEncoder<TFrom>(\n    item: FixedSizeEncoder<TFrom>,\n    config: ArrayCodecConfig<NumberEncoder> & { size: number },\n): FixedSizeEncoder<TFrom[]>;\nexport function getArrayEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config?: ArrayCodecConfig<NumberEncoder>,\n): VariableSizeEncoder<TFrom[]>;\nexport function getArrayEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config: ArrayCodecConfig<NumberEncoder> = {},\n): Encoder<TFrom[]> {\n    const size = config.size ?? getU32Encoder();\n    const fixedSize = computeArrayLikeCodecSize(size, getFixedSize(item));\n    const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? undefined;\n\n    return createEncoder({\n        ...(fixedSize !== null\n            ? { fixedSize }\n            : {\n                  getSizeFromValue: (array: TFrom[]) => {\n                      const prefixSize = typeof size === 'object' ? getEncodedSize(array.length, size) : 0;\n                      return prefixSize + [...array].reduce((all, value) => all + getEncodedSize(value, item), 0);\n                  },\n                  maxSize,\n              }),\n        write: (array: TFrom[], bytes, offset) => {\n            if (typeof size === 'number') {\n                assertValidNumberOfItemsForCodec('array', size, array.length);\n            }\n            if (typeof size === 'object') {\n                offset = size.write(array.length, bytes, offset);\n            }\n            array.forEach(value => {\n                offset = item.write(value, bytes, offset);\n            });\n            return offset;\n        },\n    });\n}\n\n/**\n * Decodes an array of items.\n *\n * @param item - The encoder to use for the array's items.\n * @param config - A set of config for the encoder.\n */\nexport function getArrayDecoder<TTo>(\n    item: Decoder<TTo>,\n    config: ArrayCodecConfig<NumberDecoder> & { size: 0 },\n): FixedSizeDecoder<TTo[], 0>;\nexport function getArrayDecoder<TTo>(\n    item: FixedSizeDecoder<TTo>,\n    config: ArrayCodecConfig<NumberDecoder> & { size: number },\n): FixedSizeDecoder<TTo[]>;\nexport function getArrayDecoder<TTo>(\n    item: Decoder<TTo>,\n    config?: ArrayCodecConfig<NumberDecoder>,\n): VariableSizeDecoder<TTo[]>;\nexport function getArrayDecoder<TTo>(item: Decoder<TTo>, config: ArrayCodecConfig<NumberDecoder> = {}): Decoder<TTo[]> {\n    const size = config.size ?? getU32Decoder();\n    const itemSize = getFixedSize(item);\n    const fixedSize = computeArrayLikeCodecSize(size, itemSize);\n    const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? undefined;\n\n    return createDecoder({\n        ...(fixedSize !== null ? { fixedSize } : { maxSize }),\n        read: (bytes: Uint8Array, offset) => {\n            const array: TTo[] = [];\n            if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n                return [array, offset];\n            }\n\n            if (size === 'remainder') {\n                while (offset < bytes.length) {\n                    const [value, newOffset] = item.read(bytes, offset);\n                    offset = newOffset;\n                    array.push(value);\n                }\n                return [array, offset];\n            }\n\n            const [resolvedSize, newOffset] = typeof size === 'number' ? [size, offset] : size.read(bytes, offset);\n            offset = newOffset;\n            for (let i = 0; i < resolvedSize; i += 1) {\n                const [value, newOffset] = item.read(bytes, offset);\n                offset = newOffset;\n                array.push(value);\n            }\n            return [array, offset];\n        },\n    });\n}\n\n/**\n * Creates a codec for an array of items.\n *\n * @param item - The codec to use for the array's items.\n * @param config - A set of config for the codec.\n */\nexport function getArrayCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config: ArrayCodecConfig<NumberCodec> & { size: 0 },\n): FixedSizeCodec<TFrom[], TTo[], 0>;\nexport function getArrayCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: FixedSizeCodec<TFrom, TTo>,\n    config: ArrayCodecConfig<NumberCodec> & { size: number },\n): FixedSizeCodec<TFrom[], TTo[]>;\nexport function getArrayCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config?: ArrayCodecConfig<NumberCodec>,\n): VariableSizeCodec<TFrom[], TTo[]>;\nexport function getArrayCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config: ArrayCodecConfig<NumberCodec> = {},\n): Codec<TFrom[], TTo[]> {\n    return combineCodec(getArrayEncoder(item, config as object), getArrayDecoder(item, config as object));\n}\n\nfunction computeArrayLikeCodecSize(size: number | object | 'remainder', itemSize: number | null): number | null {\n    if (typeof size !== 'number') return null;\n    if (size === 0) return 0;\n    return itemSize === null ? null : itemSize * size;\n}\n","import { SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SolanaError } from '@solana/errors';\n\n/** Checks the number of items in an array-like structure is expected. */\nexport function assertValidNumberOfItemsForCodec(\n    codecDescription: string,\n    expected: bigint | number,\n    actual: bigint | number,\n) {\n    if (expected !== actual) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, {\n            actual,\n            codecDescription,\n            expected,\n        });\n    }\n}\n","import { isFixedSize } from '@solana/codecs-core';\n\nexport function maxCodecSizes(sizes: (number | null)[]): number | null {\n    return sizes.reduce(\n        (all, size) => (all === null || size === null ? null : Math.max(all, size)),\n        0 as number | null,\n    );\n}\n\nexport function sumCodecSizes(sizes: (number | null)[]): number | null {\n    return sizes.reduce((all, size) => (all === null || size === null ? null : all + size), 0 as number | null);\n}\n\nexport function getFixedSize(codec: { fixedSize: number } | { maxSize?: number }): number | null {\n    return isFixedSize(codec) ? codec.fixedSize : null;\n}\n\nexport function getMaxSize(codec: { fixedSize: number } | { maxSize?: number }): number | null {\n    return isFixedSize(codec) ? codec.fixedSize : codec.maxSize ?? null;\n}\n","import {\n    assertByteArrayHasEnoughBytesForCodec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n} from '@solana/codecs-core';\n\n/** Defines the config for bitArray codecs. */\nexport type BitArrayCodecConfig = {\n    /**\n     * Whether to read the bits in reverse order.\n     * @defaultValue `false`\n     */\n    backward?: boolean;\n};\n\n/**\n * Encodes an array of booleans into bits.\n *\n * @param size - The amount of bytes to use for the bit array.\n * @param config - A set of config for the encoder.\n */\nexport function getBitArrayEncoder<TSize extends number>(\n    size: TSize,\n    config: BitArrayCodecConfig | boolean = {},\n): FixedSizeEncoder<boolean[], TSize> {\n    const parsedConfig: BitArrayCodecConfig = typeof config === 'boolean' ? { backward: config } : config;\n    const backward = parsedConfig.backward ?? false;\n    return createEncoder({\n        fixedSize: size,\n        write(value: boolean[], bytes, offset) {\n            const bytesToAdd: number[] = [];\n\n            for (let i = 0; i < size; i += 1) {\n                let byte = 0;\n                for (let j = 0; j < 8; j += 1) {\n                    const feature = Number(value[i * 8 + j] ?? 0);\n                    byte |= feature << (backward ? j : 7 - j);\n                }\n                if (backward) {\n                    bytesToAdd.unshift(byte);\n                } else {\n                    bytesToAdd.push(byte);\n                }\n            }\n\n            bytes.set(bytesToAdd, offset);\n            return size;\n        },\n    });\n}\n\n/**\n * Decodes bits into an array of booleans.\n *\n * @param size - The amount of bytes to use for the bit array.\n * @param config - A set of config for the decoder.\n */\nexport function getBitArrayDecoder<TSize extends number>(\n    size: TSize,\n    config: BitArrayCodecConfig | boolean = {},\n): FixedSizeDecoder<boolean[], TSize> {\n    const parsedConfig: BitArrayCodecConfig = typeof config === 'boolean' ? { backward: config } : config;\n    const backward = parsedConfig.backward ?? false;\n    return createDecoder({\n        fixedSize: size,\n        read(bytes, offset) {\n            assertByteArrayHasEnoughBytesForCodec('bitArray', size, bytes, offset);\n            const booleans: boolean[] = [];\n            let slice = bytes.slice(offset, offset + size);\n            slice = backward ? slice.reverse() : slice;\n\n            slice.forEach(byte => {\n                for (let i = 0; i < 8; i += 1) {\n                    if (backward) {\n                        booleans.push(Boolean(byte & 1));\n                        byte >>= 1;\n                    } else {\n                        booleans.push(Boolean(byte & 0b1000_0000));\n                        byte <<= 1;\n                    }\n                }\n            });\n\n            return [booleans, offset + size];\n        },\n    });\n}\n\n/**\n * An array of boolean codec that converts booleans to bits and vice versa.\n *\n * @param size - The amount of bytes to use for the bit array.\n * @param config - A set of config for the codec.\n */\nexport function getBitArrayCodec<TSize extends number>(\n    size: TSize,\n    config: BitArrayCodecConfig | boolean = {},\n): FixedSizeCodec<boolean[], boolean[], TSize> {\n    return combineCodec(getBitArrayEncoder(size, config), getBitArrayDecoder(size, config));\n}\n","import {\n    assertIsFixedSize,\n    Codec,\n    combineCodec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    mapDecoder,\n    mapEncoder,\n} from '@solana/codecs-core';\nimport {\n    FixedSizeNumberCodec,\n    FixedSizeNumberDecoder,\n    FixedSizeNumberEncoder,\n    getU8Decoder,\n    getU8Encoder,\n    NumberCodec,\n    NumberDecoder,\n    NumberEncoder,\n} from '@solana/codecs-numbers';\n\n/** Defines the config for boolean codecs. */\nexport type BooleanCodecConfig<TSize extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The number codec to delegate to.\n     * @defaultValue u8 size.\n     */\n    size?: TSize;\n};\n\n/**\n * Encodes booleans.\n *\n * @param config - A set of config for the encoder.\n */\nexport function getBooleanEncoder(): FixedSizeEncoder<boolean, 1>;\nexport function getBooleanEncoder<TSize extends number>(\n    config: BooleanCodecConfig<NumberEncoder> & { size: FixedSizeNumberEncoder<TSize> },\n): FixedSizeEncoder<boolean, TSize>;\nexport function getBooleanEncoder(config: BooleanCodecConfig<NumberEncoder>): Encoder<boolean>;\nexport function getBooleanEncoder(config: BooleanCodecConfig<NumberEncoder> = {}): Encoder<boolean> {\n    const size = config.size ?? getU8Encoder();\n    assertIsFixedSize(size);\n    return mapEncoder(size, (value: boolean) => (value ? 1 : 0));\n}\n\n/**\n * Decodes booleans.\n *\n * @param config - A set of config for the decoder.\n */\nexport function getBooleanDecoder(): FixedSizeDecoder<boolean, 1>;\nexport function getBooleanDecoder<TSize extends number>(\n    config: BooleanCodecConfig<NumberDecoder> & { size: FixedSizeNumberDecoder<TSize> },\n): FixedSizeDecoder<boolean, TSize>;\nexport function getBooleanDecoder(config: BooleanCodecConfig<NumberDecoder>): Decoder<boolean>;\nexport function getBooleanDecoder(config: BooleanCodecConfig<NumberDecoder> = {}): Decoder<boolean> {\n    const size = config.size ?? getU8Decoder();\n    assertIsFixedSize(size);\n    return mapDecoder(size, (value: bigint | number): boolean => Number(value) === 1);\n}\n\n/**\n * Creates a boolean codec.\n *\n * @param config - A set of config for the codec.\n */\nexport function getBooleanCodec(): FixedSizeCodec<boolean, boolean, 1>;\nexport function getBooleanCodec<TSize extends number>(\n    config: BooleanCodecConfig<NumberCodec> & { size: FixedSizeNumberCodec<TSize> },\n): FixedSizeCodec<boolean, boolean, TSize>;\nexport function getBooleanCodec(config: BooleanCodecConfig<NumberCodec>): Codec<boolean>;\nexport function getBooleanCodec(config: BooleanCodecConfig<NumberCodec> = {}): Codec<boolean> {\n    return combineCodec(getBooleanEncoder(config), getBooleanDecoder(config));\n}\n","import {\n    assertByteArrayHasEnoughBytesForCodec,\n    assertByteArrayIsNotEmptyForCodec,\n    Codec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    fixDecoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    fixEncoder,\n    getEncodedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport { NumberCodec, NumberDecoder, NumberEncoder } from '@solana/codecs-numbers';\n\n/** Defines the config for bytes codecs. */\nexport type BytesCodecConfig<TSize extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The size of the byte array. It can be one of the following:\n     * - a {@link NumberSerializer} that prefixes the byte array with its size.\n     * - a fixed number of bytes.\n     * - or `'variable'` to use the rest of the byte array.\n     * @defaultValue `'variable'`\n     */\n    size?: TSize | number | 'variable';\n};\n\n/**\n * Encodes sized bytes.\n *\n * @param config - A set of config for the encoder.\n */\nexport function getBytesEncoder<TSize extends number>(\n    config: BytesCodecConfig<NumberEncoder> & { size: TSize },\n): FixedSizeEncoder<Uint8Array, TSize>;\nexport function getBytesEncoder(config?: BytesCodecConfig<NumberEncoder>): VariableSizeEncoder<Uint8Array>;\nexport function getBytesEncoder(config: BytesCodecConfig<NumberEncoder> = {}): Encoder<Uint8Array> {\n    const size = config.size ?? 'variable';\n\n    const byteEncoder: Encoder<Uint8Array> = createEncoder({\n        getSizeFromValue: (value: Uint8Array) => value.length,\n        write: (value: Uint8Array, bytes, offset) => {\n            bytes.set(value, offset);\n            return offset + value.length;\n        },\n    });\n\n    if (size === 'variable') {\n        return byteEncoder;\n    }\n\n    if (typeof size === 'number') {\n        return fixEncoder(byteEncoder, size);\n    }\n\n    return createEncoder({\n        getSizeFromValue: (value: Uint8Array) => getEncodedSize(value.length, size) + value.length,\n        write: (value: Uint8Array, bytes, offset) => {\n            offset = size.write(value.length, bytes, offset);\n            return byteEncoder.write(value, bytes, offset);\n        },\n    });\n}\n\n/**\n * Decodes sized bytes.\n *\n * @param config - A set of config for the decoder.\n */\nexport function getBytesDecoder<TSize extends number>(\n    config: BytesCodecConfig<NumberDecoder> & { size: TSize },\n): FixedSizeDecoder<Uint8Array, TSize>;\nexport function getBytesDecoder(config?: BytesCodecConfig<NumberDecoder>): VariableSizeDecoder<Uint8Array>;\nexport function getBytesDecoder(config: BytesCodecConfig<NumberDecoder> = {}): Decoder<Uint8Array> {\n    const size = config.size ?? 'variable';\n\n    const byteDecoder: Decoder<Uint8Array> = createDecoder({\n        read: (bytes: Uint8Array, offset) => {\n            const slice = bytes.slice(offset);\n            return [slice, offset + slice.length];\n        },\n    });\n\n    if (size === 'variable') {\n        return byteDecoder;\n    }\n\n    if (typeof size === 'number') {\n        return fixDecoder(byteDecoder, size);\n    }\n\n    return createDecoder({\n        read: (bytes: Uint8Array, offset) => {\n            assertByteArrayIsNotEmptyForCodec('bytes', bytes, offset);\n            const [lengthBigInt, lengthOffset] = size.read(bytes, offset);\n            const length = Number(lengthBigInt);\n            offset = lengthOffset;\n            const contentBytes = bytes.slice(offset, offset + length);\n            assertByteArrayHasEnoughBytesForCodec('bytes', length, contentBytes);\n            const [value, contentOffset] = byteDecoder.read(contentBytes, 0);\n            offset += contentOffset;\n            return [value, offset];\n        },\n    });\n}\n\n/**\n * Creates a sized bytes codec.\n *\n * @param config - A set of config for the codec.\n */\nexport function getBytesCodec<TSize extends number>(\n    config: BytesCodecConfig<NumberCodec> & { size: TSize },\n): FixedSizeCodec<Uint8Array, Uint8Array, TSize>;\nexport function getBytesCodec(config?: BytesCodecConfig<NumberCodec>): VariableSizeCodec<Uint8Array>;\nexport function getBytesCodec(config: BytesCodecConfig<NumberCodec> = {}): Codec<Uint8Array> {\n    return combineCodec(getBytesEncoder(config), getBytesDecoder(config));\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n    assertByteArrayIsNotEmptyForCodec,\n    Codec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    getEncodedSize,\n    isFixedSize,\n} from '@solana/codecs-core';\nimport { getU8Decoder, getU8Encoder, NumberCodec, NumberDecoder, NumberEncoder } from '@solana/codecs-numbers';\nimport {\n    SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT,\n    SolanaError,\n} from '@solana/errors';\n\nimport { getMaxSize, maxCodecSizes, sumCodecSizes } from './utils';\n\n/**\n * Defines a data enum using discriminated union types.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * ```\n */\nexport type DataEnum = { __kind: string };\n\n/**\n * Extracts a variant from a data enum.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * type ClickEvent = GetDataEnumKind<WebPageEvent, 'click'>;\n * // -> { __kind: 'click', x: number, y: number }\n * ```\n */\nexport type GetDataEnumKind<T extends DataEnum, K extends T['__kind']> = Extract<T, { __kind: K }>;\n\n/**\n * Extracts a variant from a data enum without its discriminator.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * type ClickEvent = GetDataEnumKindContent<WebPageEvent, 'click'>;\n * // -> { x: number, y: number }\n * ```\n */\nexport type GetDataEnumKindContent<T extends DataEnum, K extends T['__kind']> = Omit<\n    Extract<T, { __kind: K }>,\n    '__kind'\n>;\n\n/** Defines the config for data enum codecs. */\nexport type DataEnumCodecConfig<TDiscriminator = NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The codec to use for the enum discriminator prefixing the variant.\n     * @defaultValue u8 prefix.\n     */\n    size?: TDiscriminator;\n};\n\ntype Variants<T> = readonly (readonly [string, T])[];\ntype ArrayIndices<T extends readonly unknown[]> = Exclude<Partial<T>['length'], T['length']> & number;\n\ntype GetEncoderTypeFromVariants<TVariants extends Variants<Encoder<any>>> = {\n    [I in ArrayIndices<TVariants>]: (TVariants[I][1] extends Encoder<infer TFrom>\n        ? TFrom extends object\n            ? TFrom\n            : object\n        : never) & { __kind: TVariants[I][0] };\n}[ArrayIndices<TVariants>];\n\ntype GetDecoderTypeFromVariants<TVariants extends Variants<Decoder<any>>> = {\n    [I in ArrayIndices<TVariants>]: (TVariants[I][1] extends Decoder<infer TTo>\n        ? TTo extends object\n            ? TTo\n            : object\n        : never) & { __kind: TVariants[I][0] };\n}[ArrayIndices<TVariants>];\n\n/**\n * Creates a data enum encoder.\n *\n * @param variants - The variant encoders of the data enum.\n * @param config - A set of config for the encoder.\n */\nexport function getDataEnumEncoder<const TVariants extends Variants<Encoder<any>>>(\n    variants: TVariants,\n    config: DataEnumCodecConfig<NumberEncoder> = {},\n): Encoder<GetEncoderTypeFromVariants<TVariants>> {\n    type TFrom = GetEncoderTypeFromVariants<TVariants>;\n    const prefix = config.size ?? getU8Encoder();\n    const fixedSize = getDataEnumFixedSize(variants, prefix);\n    return createEncoder({\n        ...(fixedSize !== null\n            ? { fixedSize }\n            : {\n                  getSizeFromValue: (variant: TFrom) => {\n                      const discriminator = getVariantDiscriminator(variants, variant);\n                      const variantEncoder = variants[discriminator][1];\n                      return (\n                          getEncodedSize(discriminator, prefix) +\n                          getEncodedSize(variant as TFrom & void, variantEncoder)\n                      );\n                  },\n                  maxSize: getDataEnumMaxSize(variants, prefix),\n              }),\n        write: (variant: TFrom, bytes, offset) => {\n            const discriminator = getVariantDiscriminator(variants, variant);\n            offset = prefix.write(discriminator, bytes, offset);\n            const variantEncoder = variants[discriminator][1];\n            return variantEncoder.write(variant as TFrom & void, bytes, offset);\n        },\n    });\n}\n\n/**\n * Creates a data enum decoder.\n *\n * @param variants - The variant decoders of the data enum.\n * @param config - A set of config for the decoder.\n */\nexport function getDataEnumDecoder<const TVariants extends Variants<Decoder<any>>>(\n    variants: TVariants,\n    config: DataEnumCodecConfig<NumberDecoder> = {},\n): Decoder<GetDecoderTypeFromVariants<TVariants>> {\n    type TTo = GetDecoderTypeFromVariants<TVariants>;\n    const prefix = config.size ?? getU8Decoder();\n    const fixedSize = getDataEnumFixedSize(variants, prefix);\n    return createDecoder({\n        ...(fixedSize !== null ? { fixedSize } : { maxSize: getDataEnumMaxSize(variants, prefix) }),\n        read: (bytes: Uint8Array, offset) => {\n            assertByteArrayIsNotEmptyForCodec('dataEnum', bytes, offset);\n            const [discriminator, dOffset] = prefix.read(bytes, offset);\n            offset = dOffset;\n            const variantField = variants[Number(discriminator)] ?? null;\n            if (!variantField) {\n                throw new SolanaError(SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, {\n                    discriminator,\n                    maxRange: variants.length - 1,\n                    minRange: 0,\n                });\n            }\n            const [variant, vOffset] = variantField[1].read(bytes, offset);\n            offset = vOffset;\n            return [{ __kind: variantField[0], ...(variant ?? {}) } as TTo, offset];\n        },\n    });\n}\n\n/**\n * Creates a data enum codec.\n *\n * @param variants - The variant codecs of the data enum.\n * @param config - A set of config for the codec.\n */\nexport function getDataEnumCodec<const TVariants extends Variants<Codec<any, any>>>(\n    variants: TVariants,\n    config: DataEnumCodecConfig<NumberCodec> = {},\n): Codec<\n    GetEncoderTypeFromVariants<TVariants>,\n    GetDecoderTypeFromVariants<TVariants> & GetEncoderTypeFromVariants<TVariants>\n> {\n    return combineCodec(\n        getDataEnumEncoder(variants, config),\n        getDataEnumDecoder(variants, config) as Decoder<\n            GetDecoderTypeFromVariants<TVariants> & GetEncoderTypeFromVariants<TVariants>\n        >,\n    );\n}\n\nfunction getDataEnumFixedSize<const TVariants extends Variants<Decoder<any> | Encoder<any>>>(\n    variants: TVariants,\n    prefix: object | { fixedSize: number },\n): number | null {\n    if (variants.length === 0) return isFixedSize(prefix) ? prefix.fixedSize : null;\n    if (!isFixedSize(variants[0][1])) return null;\n    const variantSize = variants[0][1].fixedSize;\n    const sameSizedVariants = variants.every(\n        variant => isFixedSize(variant[1]) && variant[1].fixedSize === variantSize,\n    );\n    if (!sameSizedVariants) return null;\n    return isFixedSize(prefix) ? prefix.fixedSize + variantSize : null;\n}\n\nfunction getDataEnumMaxSize<const TVariants extends Variants<Decoder<any> | Encoder<any>>>(\n    variants: TVariants,\n    prefix: object | { fixedSize: number },\n) {\n    const maxVariantSize = maxCodecSizes(variants.map(([, codec]) => getMaxSize(codec)));\n    return sumCodecSizes([getMaxSize(prefix), maxVariantSize]) ?? undefined;\n}\n\nfunction getVariantDiscriminator<const TVariants extends Variants<Decoder<any> | Encoder<any>>>(\n    variants: TVariants,\n    variant: { __kind: string },\n) {\n    const discriminator = variants.findIndex(([key]) => variant.__kind === key);\n    if (discriminator < 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT, {\n            value: variant.__kind,\n            variants: variants.map(([key]) => key),\n        });\n    }\n    return discriminator;\n}\n","import {\n    Codec,\n    combineCodec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    mapDecoder,\n    mapEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport { NumberCodec, NumberDecoder, NumberEncoder } from '@solana/codecs-numbers';\n\nimport { ArrayLikeCodecSize, getArrayDecoder, getArrayEncoder } from './array';\nimport { getTupleDecoder, getTupleEncoder } from './tuple';\n\n/** Defines the config for Map codecs. */\nexport type MapCodecConfig<TPrefix extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The size of the array.\n     * @defaultValue u32 prefix.\n     */\n    size?: ArrayLikeCodecSize<TPrefix>;\n};\n\n/**\n * Creates a encoder for a map.\n *\n * @param key - The encoder to use for the map's keys.\n * @param value - The encoder to use for the map's values.\n * @param config - A set of config for the encoder.\n */\nexport function getMapEncoder<TFromKey, TFromValue>(\n    key: Encoder<TFromKey>,\n    value: Encoder<TFromValue>,\n    config: MapCodecConfig<NumberEncoder> & { size: 0 },\n): FixedSizeEncoder<Map<TFromKey, TFromValue>, 0>;\nexport function getMapEncoder<TFromKey, TFromValue>(\n    key: FixedSizeEncoder<TFromKey>,\n    value: FixedSizeEncoder<TFromValue>,\n    config: MapCodecConfig<NumberEncoder> & { size: number },\n): FixedSizeEncoder<Map<TFromKey, TFromValue>>;\nexport function getMapEncoder<TFromKey, TFromValue>(\n    key: Encoder<TFromKey>,\n    value: Encoder<TFromValue>,\n    config?: MapCodecConfig<NumberEncoder>,\n): VariableSizeEncoder<Map<TFromKey, TFromValue>>;\nexport function getMapEncoder<TFromKey, TFromValue>(\n    key: Encoder<TFromKey>,\n    value: Encoder<TFromValue>,\n    config: MapCodecConfig<NumberEncoder> = {},\n): Encoder<Map<TFromKey, TFromValue>> {\n    return mapEncoder(\n        getArrayEncoder(getTupleEncoder([key, value]), config as object),\n        (map: Map<TFromKey, TFromValue>): [TFromKey, TFromValue][] => [...map.entries()],\n    );\n}\n\n/**\n * Creates a decoder for a map.\n *\n * @param key - The decoder to use for the map's keys.\n * @param value - The decoder to use for the map's values.\n * @param config - A set of config for the decoder.\n */\nexport function getMapDecoder<TToKey, TToValue>(\n    key: Decoder<TToKey>,\n    value: Decoder<TToValue>,\n    config: MapCodecConfig<NumberDecoder> & { size: 0 },\n): FixedSizeDecoder<Map<TToKey, TToValue>, 0>;\nexport function getMapDecoder<TToKey, TToValue>(\n    key: FixedSizeDecoder<TToKey>,\n    value: FixedSizeDecoder<TToValue>,\n    config: MapCodecConfig<NumberDecoder> & { size: number },\n): FixedSizeDecoder<Map<TToKey, TToValue>>;\nexport function getMapDecoder<TToKey, TToValue>(\n    key: Decoder<TToKey>,\n    value: Decoder<TToValue>,\n    config?: MapCodecConfig<NumberDecoder>,\n): VariableSizeDecoder<Map<TToKey, TToValue>>;\nexport function getMapDecoder<TToKey, TToValue>(\n    key: Decoder<TToKey>,\n    value: Decoder<TToValue>,\n    config: MapCodecConfig<NumberDecoder> = {},\n): Decoder<Map<TToKey, TToValue>> {\n    return mapDecoder(\n        getArrayDecoder(getTupleDecoder([key, value]), config as object),\n        (entries: [TToKey, TToValue][]): Map<TToKey, TToValue> => new Map(entries),\n    );\n}\n\n/**\n * Creates a codec for a map.\n *\n * @param key - The codec to use for the map's keys.\n * @param value - The codec to use for the map's values.\n * @param config - A set of config for the codec.\n */\nexport function getMapCodec<\n    TFromKey,\n    TFromValue,\n    TToKey extends TFromKey = TFromKey,\n    TToValue extends TFromValue = TFromValue,\n>(\n    key: Codec<TFromKey, TToKey>,\n    value: Codec<TFromValue, TToValue>,\n    config: MapCodecConfig<NumberCodec> & { size: 0 },\n): FixedSizeCodec<Map<TFromKey, TFromValue>, Map<TToKey, TToValue>, 0>;\nexport function getMapCodec<\n    TFromKey,\n    TFromValue,\n    TToKey extends TFromKey = TFromKey,\n    TToValue extends TFromValue = TFromValue,\n>(\n    key: FixedSizeCodec<TFromKey, TToKey>,\n    value: FixedSizeCodec<TFromValue, TToValue>,\n    config: MapCodecConfig<NumberCodec> & { size: number },\n): FixedSizeCodec<Map<TFromKey, TFromValue>, Map<TToKey, TToValue>>;\nexport function getMapCodec<\n    TFromKey,\n    TFromValue,\n    TToKey extends TFromKey = TFromKey,\n    TToValue extends TFromValue = TFromValue,\n>(\n    key: Codec<TFromKey, TToKey>,\n    value: Codec<TFromValue, TToValue>,\n    config?: MapCodecConfig<NumberCodec>,\n): VariableSizeCodec<Map<TFromKey, TFromValue>, Map<TToKey, TToValue>>;\nexport function getMapCodec<\n    TFromKey,\n    TFromValue,\n    TToKey extends TFromKey = TFromKey,\n    TToValue extends TFromValue = TFromValue,\n>(\n    key: Codec<TFromKey, TToKey>,\n    value: Codec<TFromValue, TToValue>,\n    config: MapCodecConfig<NumberCodec> = {},\n): Codec<Map<TFromKey, TFromValue>, Map<TToKey, TToValue>> {\n    return combineCodec(getMapEncoder(key, value, config as object), getMapDecoder(key, value, config as object));\n}\n","import {\n    Codec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    getEncodedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\n\nimport { assertValidNumberOfItemsForCodec } from './assertions';\nimport { getFixedSize, getMaxSize, sumCodecSizes } from './utils';\n\ntype WrapInFixedSizeEncoder<TFrom> = {\n    [P in keyof TFrom]: FixedSizeEncoder<TFrom[P]>;\n};\ntype WrapInEncoder<TFrom> = {\n    [P in keyof TFrom]: Encoder<TFrom[P]>;\n};\ntype WrapInFixedSizeDecoder<TTo> = {\n    [P in keyof TTo]: FixedSizeDecoder<TTo[P]>;\n};\ntype WrapInDecoder<TTo> = {\n    [P in keyof TTo]: Decoder<TTo[P]>;\n};\ntype WrapInCodec<TFrom, TTo extends TFrom> = {\n    [P in keyof TFrom]: Codec<TFrom[P], TTo[P]>;\n};\ntype WrapInFixedSizeCodec<TFrom, TTo extends TFrom> = {\n    [P in keyof TFrom]: FixedSizeCodec<TFrom[P], TTo[P]>;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyArray = any[];\n\n/**\n * Creates a encoder for a tuple-like array.\n *\n * @param items - The encoders to use for each item in the tuple.\n */\nexport function getTupleEncoder<TFrom extends AnyArray>(\n    items: WrapInFixedSizeEncoder<[...TFrom]>,\n): FixedSizeEncoder<TFrom>;\nexport function getTupleEncoder<TFrom extends AnyArray>(items: WrapInEncoder<[...TFrom]>): VariableSizeEncoder<TFrom>;\nexport function getTupleEncoder<TFrom extends AnyArray>(items: WrapInEncoder<[...TFrom]>): Encoder<TFrom> {\n    const fixedSize = sumCodecSizes(items.map(getFixedSize));\n    const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? undefined;\n\n    return createEncoder({\n        ...(fixedSize === null\n            ? {\n                  getSizeFromValue: (value: TFrom) =>\n                      items.map((item, index) => getEncodedSize(value[index], item)).reduce((all, one) => all + one, 0),\n                  maxSize,\n              }\n            : { fixedSize }),\n        write: (value: TFrom, bytes, offset) => {\n            assertValidNumberOfItemsForCodec('tuple', items.length, value.length);\n            items.forEach((item, index) => {\n                offset = item.write(value[index], bytes, offset);\n            });\n            return offset;\n        },\n    });\n}\n\n/**\n * Creates a decoder for a tuple-like array.\n *\n * @param items - The decoders to use for each item in the tuple.\n */\nexport function getTupleDecoder<TTo extends AnyArray>(items: WrapInFixedSizeDecoder<[...TTo]>): FixedSizeDecoder<TTo>;\nexport function getTupleDecoder<TTo extends AnyArray>(items: WrapInDecoder<[...TTo]>): VariableSizeDecoder<TTo>;\nexport function getTupleDecoder<TTo extends AnyArray>(items: WrapInDecoder<[...TTo]>): Decoder<TTo> {\n    const fixedSize = sumCodecSizes(items.map(getFixedSize));\n    const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? undefined;\n\n    return createDecoder({\n        ...(fixedSize === null ? { maxSize } : { fixedSize }),\n        read: (bytes: Uint8Array, offset) => {\n            const values = [] as AnyArray as TTo;\n            items.forEach(item => {\n                const [newValue, newOffset] = item.read(bytes, offset);\n                values.push(newValue);\n                offset = newOffset;\n            });\n            return [values, offset];\n        },\n    });\n}\n\n/**\n * Creates a codec for a tuple-like array.\n *\n * @param items - The codecs to use for each item in the tuple.\n */\nexport function getTupleCodec<TFrom extends AnyArray, TTo extends TFrom = TFrom>(\n    items: WrapInFixedSizeCodec<[...TFrom], [...TTo]>,\n): FixedSizeCodec<TFrom, TTo>;\nexport function getTupleCodec<TFrom extends AnyArray, TTo extends TFrom = TFrom>(\n    items: WrapInCodec<[...TFrom], [...TTo]>,\n): VariableSizeCodec<TFrom, TTo>;\nexport function getTupleCodec<TFrom extends AnyArray, TTo extends TFrom = TFrom>(\n    items: WrapInCodec<[...TFrom], [...TTo]>,\n): Codec<TFrom, TTo> {\n    return combineCodec(\n        getTupleEncoder(items as WrapInEncoder<[...TFrom]>),\n        getTupleDecoder(items as WrapInDecoder<[...TTo]>),\n    );\n}\n","import {\n    assertIsFixedSize,\n    Codec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    getEncodedSize,\n    isFixedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport {\n    FixedSizeNumberCodec,\n    FixedSizeNumberDecoder,\n    FixedSizeNumberEncoder,\n    getU8Decoder,\n    getU8Encoder,\n    NumberCodec,\n    NumberDecoder,\n    NumberEncoder,\n} from '@solana/codecs-numbers';\n\nimport { getMaxSize, sumCodecSizes } from './utils';\n\n/** Defines the config for nullable codecs. */\nexport type NullableCodecConfig<TPrefix extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * Whether the item codec should be of fixed size.\n     *\n     * When this is true, a `null` value will skip the bytes that would\n     * have been used for the item. Note that this will only work if the\n     * item codec is of fixed size.\n     * @defaultValue `false`\n     */\n    fixed?: boolean;\n\n    /**\n     * The codec to use for the boolean prefix.\n     * @defaultValue u8 prefix.\n     */\n    prefix?: TPrefix;\n};\n\n/**\n * Creates a encoder for an optional value using `null` as the `None` value.\n *\n * @param item - The encoder to use for the value that may be present.\n * @param config - A set of config for the encoder.\n */\nexport function getNullableEncoder<TFrom>(\n    item: FixedSizeEncoder<TFrom>,\n    config: NullableCodecConfig<FixedSizeNumberEncoder> & { fixed: true },\n): FixedSizeEncoder<TFrom | null>;\nexport function getNullableEncoder<TFrom>(\n    item: FixedSizeEncoder<TFrom, 0>,\n    config?: NullableCodecConfig<FixedSizeNumberEncoder>,\n): FixedSizeEncoder<TFrom | null>;\nexport function getNullableEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config?: NullableCodecConfig<NumberEncoder> & { fixed?: false },\n): VariableSizeEncoder<TFrom | null>;\nexport function getNullableEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config: NullableCodecConfig<NumberEncoder> = {},\n): Encoder<TFrom | null> {\n    const prefix = config.prefix ?? getU8Encoder();\n    const fixed = config.fixed ?? false;\n\n    const isZeroSizeItem = isFixedSize(item) && isFixedSize(prefix) && item.fixedSize === 0;\n    if (fixed || isZeroSizeItem) {\n        assertIsFixedSize(item);\n        assertIsFixedSize(prefix);\n        const fixedSize = prefix.fixedSize + item.fixedSize;\n        return createEncoder({\n            fixedSize,\n            write: (option: TFrom | null, bytes, offset) => {\n                const prefixOffset = prefix.write(Number(option !== null), bytes, offset);\n                if (option !== null) {\n                    item.write(option, bytes, prefixOffset);\n                }\n                return offset + fixedSize;\n            },\n        });\n    }\n\n    return createEncoder({\n        getSizeFromValue: (option: TFrom | null) =>\n            getEncodedSize(Number(option !== null), prefix) + (option !== null ? getEncodedSize(option, item) : 0),\n        maxSize: sumCodecSizes([prefix, item].map(getMaxSize)) ?? undefined,\n        write: (option: TFrom | null, bytes, offset) => {\n            offset = prefix.write(Number(option !== null), bytes, offset);\n            if (option !== null) {\n                offset = item.write(option, bytes, offset);\n            }\n            return offset;\n        },\n    });\n}\n\n/**\n * Creates a decoder for an optional value using `null` as the `None` value.\n *\n * @param item - The decoder to use for the value that may be present.\n * @param config - A set of config for the decoder.\n */\nexport function getNullableDecoder<TTo>(\n    item: FixedSizeDecoder<TTo>,\n    config: NullableCodecConfig<FixedSizeNumberDecoder> & { fixed: true },\n): FixedSizeDecoder<TTo | null>;\nexport function getNullableDecoder<TTo>(\n    item: FixedSizeDecoder<TTo, 0>,\n    config?: NullableCodecConfig<FixedSizeNumberDecoder>,\n): FixedSizeDecoder<TTo | null>;\nexport function getNullableDecoder<TTo>(\n    item: Decoder<TTo>,\n    config?: NullableCodecConfig<NumberDecoder> & { fixed?: false },\n): VariableSizeDecoder<TTo | null>;\nexport function getNullableDecoder<TTo>(\n    item: Decoder<TTo>,\n    config: NullableCodecConfig<NumberDecoder> = {},\n): Decoder<TTo | null> {\n    const prefix = config.prefix ?? getU8Decoder();\n    const fixed = config.fixed ?? false;\n\n    let fixedSize: number | null = null;\n    const isZeroSizeItem = isFixedSize(item) && isFixedSize(prefix) && item.fixedSize === 0;\n    if (fixed || isZeroSizeItem) {\n        assertIsFixedSize(item);\n        assertIsFixedSize(prefix);\n        fixedSize = prefix.fixedSize + item.fixedSize;\n    }\n\n    return createDecoder({\n        ...(fixedSize === null\n            ? { maxSize: sumCodecSizes([prefix, item].map(getMaxSize)) ?? undefined }\n            : { fixedSize }),\n        read: (bytes: Uint8Array, offset) => {\n            if (bytes.length - offset <= 0) {\n                return [null, offset];\n            }\n            const [isSome, prefixOffset] = prefix.read(bytes, offset);\n            if (isSome === 0) {\n                return [null, fixedSize !== null ? offset + fixedSize : prefixOffset];\n            }\n            const [value, newOffset] = item.read(bytes, prefixOffset);\n            return [value, fixedSize !== null ? offset + fixedSize : newOffset];\n        },\n    });\n}\n\n/**\n * Creates a codec for an optional value using `null` as the `None` value.\n *\n * @param item - The codec to use for the value that may be present.\n * @param config - A set of config for the codec.\n */\nexport function getNullableCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: FixedSizeCodec<TFrom, TTo>,\n    config: NullableCodecConfig<FixedSizeNumberCodec> & { fixed: true },\n): FixedSizeCodec<TFrom | null, TTo | null>;\nexport function getNullableCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: FixedSizeCodec<TFrom, TTo, 0>,\n    config?: NullableCodecConfig<FixedSizeNumberCodec>,\n): FixedSizeCodec<TFrom | null, TTo | null>;\nexport function getNullableCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config?: NullableCodecConfig<NumberCodec> & { fixed?: false },\n): VariableSizeCodec<TFrom | null, TTo | null>;\nexport function getNullableCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config: NullableCodecConfig<NumberCodec> = {},\n): Codec<TFrom | null, TTo | null> {\n    const configCast = config as NullableCodecConfig<NumberCodec> & { fixed?: false };\n    return combineCodec(getNullableEncoder<TFrom>(item, configCast), getNullableDecoder<TTo>(item, configCast));\n}\n","import {\n    Codec,\n    combineCodec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    mapDecoder,\n    mapEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport {\n    FixedSizeNumberCodec,\n    FixedSizeNumberDecoder,\n    FixedSizeNumberEncoder,\n    getU8Decoder,\n    getU8Encoder,\n    NumberCodec,\n    NumberDecoder,\n    NumberEncoder,\n} from '@solana/codecs-numbers';\nimport {\n    SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT,\n    SolanaError,\n} from '@solana/errors';\n\n/**\n * Defines the \"lookup object\" of a scalar enum.\n *\n * @example\n * ```ts\n * enum Direction { Left, Right };\n * ```\n */\nexport type ScalarEnum = { [key: string]: number | string };\n\n/**\n * Returns the allowed input for a scalar enum.\n *\n * @example\n * ```ts\n * enum Direction { Left, Right };\n * type DirectionInput = ScalarEnumFrom<Direction>; // \"Left\" | \"Right\" | 0 | 1\n * ```\n */\nexport type ScalarEnumFrom<TEnum extends ScalarEnum> = TEnum[keyof TEnum] | keyof TEnum;\n\n/**\n * Returns all the available variants of a scalar enum.\n *\n * @example\n * ```ts\n * enum Direction { Left, Right };\n * type DirectionOutput = ScalarEnumFrom<Direction>; // 0 | 1\n * ```\n */\nexport type ScalarEnumTo<TEnum extends ScalarEnum> = TEnum[keyof TEnum];\n\n/** Defines the config for scalar enum codecs. */\nexport type ScalarEnumCodecConfig<TDiscriminator extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The codec to use for the enum discriminator.\n     * @defaultValue u8 discriminator.\n     */\n    size?: TDiscriminator;\n};\n\n/**\n * Creates a scalar enum encoder.\n *\n * @param constructor - The constructor of the scalar enum.\n * @param config - A set of config for the encoder.\n */\nexport function getScalarEnumEncoder<TEnum extends ScalarEnum>(\n    constructor: TEnum,\n): FixedSizeEncoder<ScalarEnumFrom<TEnum>, 1>;\nexport function getScalarEnumEncoder<TEnum extends ScalarEnum, TSize extends number>(\n    constructor: TEnum,\n    config: ScalarEnumCodecConfig<NumberEncoder> & { size: FixedSizeNumberEncoder<TSize> },\n): FixedSizeEncoder<ScalarEnumFrom<TEnum>, TSize>;\nexport function getScalarEnumEncoder<TEnum extends ScalarEnum>(\n    constructor: TEnum,\n    config?: ScalarEnumCodecConfig<NumberEncoder>,\n): VariableSizeEncoder<ScalarEnumFrom<TEnum>>;\nexport function getScalarEnumEncoder<TEnum extends ScalarEnum>(\n    constructor: TEnum,\n    config: ScalarEnumCodecConfig<NumberEncoder> = {},\n): Encoder<ScalarEnumFrom<TEnum>> {\n    const prefix = config.size ?? getU8Encoder();\n    const { minRange, maxRange, allStringInputs, enumKeys, enumValues } = getScalarEnumStats(constructor);\n    return mapEncoder(prefix, (value: ScalarEnumFrom<TEnum>): number => {\n        const isInvalidNumber = typeof value === 'number' && (value < minRange || value > maxRange);\n        const isInvalidString = typeof value === 'string' && !allStringInputs.includes(value);\n        if (isInvalidNumber || isInvalidString) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT, {\n                maxRange,\n                minRange,\n                value,\n                variants: allStringInputs,\n            });\n        }\n        if (typeof value === 'number') return value;\n        const valueIndex = enumValues.indexOf(value as string);\n        if (valueIndex >= 0) return valueIndex;\n        return enumKeys.indexOf(value as string);\n    });\n}\n\n/**\n * Creates a scalar enum decoder.\n *\n * @param constructor - The constructor of the scalar enum.\n * @param config - A set of config for the decoder.\n */\nexport function getScalarEnumDecoder<TEnum extends ScalarEnum>(\n    constructor: TEnum,\n): FixedSizeDecoder<ScalarEnumTo<TEnum>, 1>;\nexport function getScalarEnumDecoder<TEnum extends ScalarEnum, TSize extends number>(\n    constructor: TEnum,\n    config: ScalarEnumCodecConfig<NumberDecoder> & { size: FixedSizeNumberDecoder<TSize> },\n): FixedSizeDecoder<ScalarEnumTo<TEnum>, TSize>;\nexport function getScalarEnumDecoder<TEnum extends ScalarEnum>(\n    constructor: TEnum,\n    config?: ScalarEnumCodecConfig<NumberDecoder>,\n): VariableSizeDecoder<ScalarEnumTo<TEnum>>;\nexport function getScalarEnumDecoder<TEnum extends ScalarEnum>(\n    constructor: TEnum,\n    config: ScalarEnumCodecConfig<NumberDecoder> = {},\n): Decoder<ScalarEnumTo<TEnum>> {\n    const prefix = config.size ?? getU8Decoder();\n    const { minRange, maxRange, enumKeys } = getScalarEnumStats(constructor);\n    return mapDecoder(prefix, (value: bigint | number): ScalarEnumTo<TEnum> => {\n        const valueAsNumber = Number(value);\n        if (valueAsNumber < minRange || valueAsNumber > maxRange) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, {\n                discriminator: valueAsNumber,\n                maxRange,\n                minRange,\n            });\n        }\n        return constructor[enumKeys[valueAsNumber]] as ScalarEnumTo<TEnum>;\n    });\n}\n\n/**\n * Creates a scalar enum codec.\n *\n * @param constructor - The constructor of the scalar enum.\n * @param config - A set of config for the codec.\n */\nexport function getScalarEnumCodec<TEnum extends ScalarEnum>(\n    constructor: TEnum,\n): FixedSizeCodec<ScalarEnumFrom<TEnum>, ScalarEnumTo<TEnum>, 1>;\nexport function getScalarEnumCodec<TEnum extends ScalarEnum, TSize extends number>(\n    constructor: TEnum,\n    config: ScalarEnumCodecConfig<NumberCodec> & { size: FixedSizeNumberCodec<TSize> },\n): FixedSizeCodec<ScalarEnumFrom<TEnum>, ScalarEnumTo<TEnum>, TSize>;\nexport function getScalarEnumCodec<TEnum extends ScalarEnum>(\n    constructor: TEnum,\n    config?: ScalarEnumCodecConfig<NumberCodec>,\n): VariableSizeCodec<ScalarEnumFrom<TEnum>, ScalarEnumTo<TEnum>>;\nexport function getScalarEnumCodec<TEnum extends ScalarEnum>(\n    constructor: TEnum,\n    config: ScalarEnumCodecConfig<NumberCodec> = {},\n): Codec<ScalarEnumFrom<TEnum>, ScalarEnumTo<TEnum>> {\n    return combineCodec(getScalarEnumEncoder(constructor, config), getScalarEnumDecoder(constructor, config));\n}\n\nfunction getScalarEnumStats<TEnum extends ScalarEnum>(\n    constructor: TEnum,\n): {\n    allStringInputs: string[];\n    enumKeys: string[];\n    enumValues: (number | string)[];\n    maxRange: number;\n    minRange: number;\n} {\n    const numericValues = Object.values(constructor).filter(v => typeof v === 'number') as number[];\n    const deduplicatedConstructor = Object.fromEntries(\n        Object.entries(constructor).slice(numericValues.length),\n    ) as Record<string, number | string>;\n    const enumKeys = Object.keys(deduplicatedConstructor);\n    const enumValues = Object.values(deduplicatedConstructor);\n    const minRange = 0;\n    const maxRange = enumValues.length - 1;\n    const allStringInputs: string[] = [\n        ...new Set([...enumKeys, ...enumValues.filter((v): v is string => typeof v === 'string')]),\n    ];\n\n    return {\n        allStringInputs,\n        enumKeys,\n        enumValues,\n        maxRange,\n        minRange,\n    };\n}\n","import {\n    Codec,\n    combineCodec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    mapDecoder,\n    mapEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport { NumberCodec, NumberDecoder, NumberEncoder } from '@solana/codecs-numbers';\n\nimport { ArrayLikeCodecSize, getArrayDecoder, getArrayEncoder } from './array';\n\n/** Defines the config for set codecs. */\nexport type SetCodecConfig<TPrefix extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The size of the set.\n     * @defaultValue u32 prefix.\n     */\n    size?: ArrayLikeCodecSize<TPrefix>;\n};\n\n/**\n * Encodes an set of items.\n *\n * @param item - The encoder to use for the set's items.\n * @param config - A set of config for the encoder.\n */\nexport function getSetEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config: SetCodecConfig<NumberEncoder> & { size: 0 },\n): FixedSizeEncoder<Set<TFrom>, 0>;\nexport function getSetEncoder<TFrom>(\n    item: FixedSizeEncoder<TFrom>,\n    config: SetCodecConfig<NumberEncoder> & { size: number },\n): FixedSizeEncoder<Set<TFrom>>;\nexport function getSetEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config?: SetCodecConfig<NumberEncoder>,\n): VariableSizeEncoder<Set<TFrom>>;\nexport function getSetEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config: SetCodecConfig<NumberEncoder> = {},\n): Encoder<Set<TFrom>> {\n    return mapEncoder(getArrayEncoder(item, config as object), (set: Set<TFrom>): TFrom[] => [...set]);\n}\n\n/**\n * Decodes an set of items.\n *\n * @param item - The encoder to use for the set's items.\n * @param config - A set of config for the encoder.\n */\nexport function getSetDecoder<TTo>(\n    item: Decoder<TTo>,\n    config: SetCodecConfig<NumberDecoder> & { size: 0 },\n): FixedSizeDecoder<Set<TTo>, 0>;\nexport function getSetDecoder<TTo>(\n    item: FixedSizeDecoder<TTo>,\n    config: SetCodecConfig<NumberDecoder> & { size: number },\n): FixedSizeDecoder<Set<TTo>>;\nexport function getSetDecoder<TTo>(\n    item: Decoder<TTo>,\n    config?: SetCodecConfig<NumberDecoder>,\n): VariableSizeDecoder<Set<TTo>>;\nexport function getSetDecoder<TTo>(item: Decoder<TTo>, config: SetCodecConfig<NumberDecoder> = {}): Decoder<Set<TTo>> {\n    return mapDecoder(getArrayDecoder(item, config as object), (entries: TTo[]): Set<TTo> => new Set(entries));\n}\n\n/**\n * Creates a codec for an set of items.\n *\n * @param item - The codec to use for the set's items.\n * @param config - A set of config for the codec.\n */\nexport function getSetCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config: SetCodecConfig<NumberCodec> & { size: 0 },\n): FixedSizeCodec<Set<TFrom>, Set<TTo>, 0>;\nexport function getSetCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: FixedSizeCodec<TFrom, TTo>,\n    config: SetCodecConfig<NumberCodec> & { size: number },\n): FixedSizeCodec<Set<TFrom>, Set<TTo>>;\nexport function getSetCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config?: SetCodecConfig<NumberCodec>,\n): VariableSizeCodec<Set<TFrom>, Set<TTo>>;\nexport function getSetCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config: SetCodecConfig<NumberCodec> = {},\n): Codec<Set<TFrom>, Set<TTo>> {\n    return combineCodec(getSetEncoder(item, config as object), getSetDecoder(item, config as object));\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n    Codec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    getEncodedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\n\nimport { getFixedSize, getMaxSize, sumCodecSizes } from './utils';\n\ntype Fields<T> = readonly (readonly [string, T])[];\ntype ArrayIndices<T extends readonly unknown[]> = Exclude<Partial<T>['length'], T['length']> & number;\n\ntype GetEncoderTypeFromFields<TFields extends Fields<Encoder<any>>> = {\n    [I in ArrayIndices<TFields> as TFields[I][0]]: TFields[I][1] extends Encoder<infer TFrom> ? TFrom : never;\n};\n\ntype GetDecoderTypeFromFields<TFields extends Fields<Decoder<any>>> = {\n    [I in ArrayIndices<TFields> as TFields[I][0]]: TFields[I][1] extends Decoder<infer TTo> ? TTo : never;\n};\n\n/**\n * Creates a encoder for a custom object.\n *\n * @param fields - The name and encoder of each field.\n */\nexport function getStructEncoder<const TFields extends Fields<FixedSizeEncoder<any>>>(\n    fields: TFields,\n): FixedSizeEncoder<GetEncoderTypeFromFields<TFields>>;\nexport function getStructEncoder<const TFields extends Fields<Encoder<any>>>(\n    fields: TFields,\n): VariableSizeEncoder<GetEncoderTypeFromFields<TFields>>;\nexport function getStructEncoder<const TFields extends Fields<Encoder<any>>>(\n    fields: TFields,\n): Encoder<GetEncoderTypeFromFields<TFields>> {\n    type TFrom = GetEncoderTypeFromFields<TFields>;\n    const fieldCodecs = fields.map(([, codec]) => codec);\n    const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n    const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? undefined;\n\n    return createEncoder({\n        ...(fixedSize === null\n            ? {\n                  getSizeFromValue: (value: TFrom) =>\n                      fields\n                          .map(([key, codec]) => getEncodedSize(value[key as keyof TFrom], codec))\n                          .reduce((all, one) => all + one, 0),\n                  maxSize,\n              }\n            : { fixedSize }),\n        write: (struct: TFrom, bytes, offset) => {\n            fields.forEach(([key, codec]) => {\n                offset = codec.write(struct[key as keyof TFrom], bytes, offset);\n            });\n            return offset;\n        },\n    });\n}\n\n/**\n * Creates a decoder for a custom object.\n *\n * @param fields - The name and decoder of each field.\n */\nexport function getStructDecoder<const TFields extends Fields<FixedSizeDecoder<any>>>(\n    fields: TFields,\n): FixedSizeDecoder<GetDecoderTypeFromFields<TFields>>;\nexport function getStructDecoder<const TFields extends Fields<Decoder<any>>>(\n    fields: TFields,\n): VariableSizeDecoder<GetDecoderTypeFromFields<TFields>>;\nexport function getStructDecoder<const TFields extends Fields<Decoder<any>>>(\n    fields: TFields,\n): Decoder<GetDecoderTypeFromFields<TFields>> {\n    type TTo = GetDecoderTypeFromFields<TFields>;\n    const fieldCodecs = fields.map(([, codec]) => codec);\n    const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n    const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? undefined;\n\n    return createDecoder({\n        ...(fixedSize === null ? { maxSize } : { fixedSize }),\n        read: (bytes: Uint8Array, offset) => {\n            const struct = {} as TTo;\n            fields.forEach(([key, codec]) => {\n                const [value, newOffset] = codec.read(bytes, offset);\n                offset = newOffset;\n                struct[key as keyof TTo] = value;\n            });\n            return [struct, offset];\n        },\n    });\n}\n\n/**\n * Creates a codec for a custom object.\n *\n * @param fields - The name and codec of each field.\n */\nexport function getStructCodec<const TFields extends Fields<FixedSizeCodec<any>>>(\n    fields: TFields,\n): FixedSizeCodec<\n    GetEncoderTypeFromFields<TFields>,\n    GetDecoderTypeFromFields<TFields> & GetEncoderTypeFromFields<TFields>\n>;\nexport function getStructCodec<const TFields extends Fields<Codec<any>>>(\n    fields: TFields,\n): VariableSizeCodec<\n    GetEncoderTypeFromFields<TFields>,\n    GetDecoderTypeFromFields<TFields> & GetEncoderTypeFromFields<TFields>\n>;\nexport function getStructCodec<const TFields extends Fields<Codec<any>>>(\n    fields: TFields,\n): Codec<GetEncoderTypeFromFields<TFields>, GetDecoderTypeFromFields<TFields> & GetEncoderTypeFromFields<TFields>> {\n    return combineCodec(\n        getStructEncoder(fields),\n        getStructDecoder(fields) as Decoder<GetDecoderTypeFromFields<TFields> & GetEncoderTypeFromFields<TFields>>,\n    );\n}\n","import {\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n} from '@solana/codecs-core';\n\n/**\n * Creates a void encoder.\n */\nexport function getUnitEncoder(): FixedSizeEncoder<void, 0> {\n    return createEncoder({\n        fixedSize: 0,\n        write: (_value, _bytes, offset) => offset,\n    });\n}\n\n/**\n * Creates a void decoder.\n */\nexport function getUnitDecoder(): FixedSizeDecoder<void, 0> {\n    return createDecoder({\n        fixedSize: 0,\n        read: (_bytes: Uint8Array, offset) => [undefined, offset],\n    });\n}\n\n/**\n * Creates a void codec.\n */\nexport function getUnitCodec(): FixedSizeCodec<void, void, 0> {\n    return combineCodec(getUnitEncoder(), getUnitDecoder());\n}\n"],"names":["newOffset","combineCodec","createDecoder","createEncoder","assertByteArrayHasEnoughBytesForCodec","getEncodedSize","assertByteArrayIsNotEmptyForCodec","isFixedSize","getU8Decoder","getU8Encoder","SolanaError","mapDecoder","mapEncoder","assertIsFixedSize","SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}},
    {"offset": {"line": 4859, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4865, "column": 0}, "map": {"version":3,"file":"tokenGroup.js","sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/spl-token-group/src/state/tokenGroup.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { getBytesCodec, getStructCodec, getU32Codec } from '@solana/codecs';\n\nconst tokenGroupCodec = getStructCodec([\n    ['updateAuthority', getBytesCodec({ size: 32 })],\n    ['mint', getBytesCodec({ size: 32 })],\n    ['size', getU32Codec()],\n    ['maxSize', getU32Codec()],\n]);\n\nexport const TOKEN_GROUP_SIZE = tokenGroupCodec.fixedSize;\n\nexport interface TokenGroup {\n    /** The authority that can sign to update the group */\n    updateAuthority?: PublicKey;\n    /** The associated mint, used to counter spoofing to be sure that group belongs to a particular mint */\n    mint: PublicKey;\n    /** The current number of group members */\n    size: number;\n    /** The maximum number of group members */\n    maxSize: number;\n}\n\n// Checks if all elements in the array are 0\nfunction isNonePubkey(buffer: Uint8Array): boolean {\n    for (let i = 0; i < buffer.length; i++) {\n        if (buffer[i] !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Pack TokenGroup into byte slab\nexport function packTokenGroup(group: TokenGroup): Uint8Array {\n    // If no updateAuthority given, set it to the None/Zero PublicKey for encoding\n    const updateAuthority = group.updateAuthority ?? PublicKey.default;\n    return tokenGroupCodec.encode({\n        updateAuthority: updateAuthority.toBuffer(),\n        mint: group.mint.toBuffer(),\n        size: group.size,\n        maxSize: group.maxSize,\n    });\n}\n\n// unpack byte slab into TokenGroup\nexport function unpackTokenGroup(buffer: Buffer | Uint8Array): TokenGroup {\n    const data = tokenGroupCodec.decode(buffer);\n\n    return isNonePubkey(data.updateAuthority)\n        ? {\n              mint: new PublicKey(data.mint),\n              size: data.size,\n              maxSize: data.maxSize,\n          }\n        : {\n              updateAuthority: new PublicKey(data.updateAuthority),\n              mint: new PublicKey(data.mint),\n              size: data.size,\n              maxSize: data.maxSize,\n          };\n}\n"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;;;;AAE5E,MAAM,eAAe,yLAAG,iBAAA,AAAc,EAAC;IACnC;QAAC,iBAAiB;8LAAE,gBAAA,AAAa,EAAC;YAAE,IAAI,EAAE,EAAE;QAAA,CAAE,CAAC;KAAC;IAChD;QAAC,MAAM;YAAE,kMAAA,AAAa,EAAC;YAAE,IAAI,EAAE,EAAE;QAAA,CAAE,CAAC;KAAC;IACrC;QAAC,MAAM;mLAAE,cAAA,AAAW,EAAE;KAAC;IACvB;QAAC,SAAS;mLAAE,cAAA,AAAW,EAAE;KAAC;CAC7B,CAAC,CAAC;AAEI,MAAM,gBAAgB,GAAG,eAAe,CAAC,SAAS,CAAC;AAa1D,4CAA4C;AAC5C,SAAS,YAAY,CAAC,MAAkB;IACpC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE,CAAC;QACrC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;YAClB,OAAO,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAGK,SAAU,cAAc,CAAC,KAAiB;IAC5C,8EAA8E;IAC9E,MAAM,eAAe,GAAG,KAAK,CAAC,eAAe,kKAAI,YAAS,CAAC,OAAO,CAAC;IACnE,OAAO,eAAe,CAAC,MAAM,CAAC;QAC1B,eAAe,EAAE,eAAe,CAAC,QAAQ,EAAE;QAC3C,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC3B,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,OAAO,EAAE,KAAK,CAAC,OAAO;KACzB,CAAC,CAAC;AACP,CAAC;AAGK,SAAU,gBAAgB,CAAC,MAA2B;IACxD,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAE5C,OAAO,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,GACnC;QACI,IAAI,EAAE,kKAAI,YAAS,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,OAAO,EAAE,IAAI,CAAC,OAAO;KACxB,GACD;QACI,eAAe,EAAE,kKAAI,YAAS,CAAC,IAAI,CAAC,eAAe,CAAC;QACpD,IAAI,EAAE,kKAAI,YAAS,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,OAAO,EAAE,IAAI,CAAC,OAAO;KACxB,CAAC;AACZ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4930, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4936, "column": 0}, "map": {"version":3,"file":"tokenGroupMember.js","sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40solana/spl-token-group/src/state/tokenGroupMember.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { getBytesCodec, getStructCodec, getU32Codec } from '@solana/codecs';\n\nconst tokenGroupMemberCodec = getStructCodec([\n    ['mint', getBytesCodec({ size: 32 })],\n    ['group', getBytesCodec({ size: 32 })],\n    ['memberNumber', getU32Codec()],\n]);\n\nexport const TOKEN_GROUP_MEMBER_SIZE = tokenGroupMemberCodec.fixedSize;\n\nexport interface TokenGroupMember {\n    /** The associated mint, used to counter spoofing to be sure that member belongs to a particular mint */\n    mint: PublicKey;\n    /** The pubkey of the `TokenGroup` */\n    group: PublicKey;\n    /** The member number */\n    memberNumber: number;\n}\n\n// Pack TokenGroupMember into byte slab\nexport function packTokenGroupMember(member: TokenGroupMember): Uint8Array {\n    return tokenGroupMemberCodec.encode({\n        mint: member.mint.toBuffer(),\n        group: member.group.toBuffer(),\n        memberNumber: member.memberNumber,\n    });\n}\n\n// unpack byte slab into TokenGroupMember\nexport function unpackTokenGroupMember(buffer: Buffer | Uint8Array): TokenGroupMember {\n    const data = tokenGroupMemberCodec.decode(buffer);\n    return {\n        mint: new PublicKey(data.mint),\n        group: new PublicKey(data.group),\n        memberNumber: data.memberNumber,\n    };\n}\n"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;;;;AAE5E,MAAM,qBAAqB,yLAAG,iBAAA,AAAc,EAAC;IACzC;QAAC,MAAM;YAAE,kMAAA,AAAa,EAAC;YAAE,IAAI,EAAE,EAAE;QAAA,CAAE,CAAC;KAAC;IACrC;QAAC,OAAO;8LAAE,gBAAA,AAAa,EAAC;YAAE,IAAI,EAAE,EAAE;QAAA,CAAE,CAAC;KAAC;IACtC;QAAC,cAAc;mLAAE,cAAA,AAAW,EAAE;KAAC;CAClC,CAAC,CAAC;AAEI,MAAM,uBAAuB,GAAG,qBAAqB,CAAC,SAAS,CAAC;AAYjE,SAAU,oBAAoB,CAAC,MAAwB;IACzD,OAAO,qBAAqB,CAAC,MAAM,CAAC;QAChC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC5B,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE;QAC9B,YAAY,EAAE,MAAM,CAAC,YAAY;KACpC,CAAC,CAAC;AACP,CAAC;AAGK,SAAU,sBAAsB,CAAC,MAA2B;IAC9D,MAAM,IAAI,GAAG,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAClD,OAAO;QACH,IAAI,EAAE,kKAAI,YAAS,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,KAAK,EAAE,kKAAI,YAAS,CAAC,IAAI,CAAC,KAAK,CAAC;QAChC,YAAY,EAAE,IAAI,CAAC,YAAY;KAClC,CAAC;AACN,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}