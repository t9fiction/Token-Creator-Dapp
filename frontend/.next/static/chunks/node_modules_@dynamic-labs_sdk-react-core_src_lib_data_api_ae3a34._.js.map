{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/api.js"],"sourcesContent":["'use client'\nimport { SDKApi, Configuration } from '@dynamic-labs/sdk-api-core';\nimport { FetchService } from '@dynamic-labs/utils';\nimport { VERSION, API_VERSION } from '../../../version.js';\nimport ApiEndpoint from '../../config/ApiEndpoint.js';\nimport '../../utils/constants/values.js';\nimport '../../../../_virtual/_tslib.js';\nimport '@dynamic-labs/multi-wallet';\nimport '../../shared/logger.js';\nimport '../../utils/constants/colors.js';\nimport { getMinAuthToken } from '../../utils/functions/getMinAuthToken/getMinAuthToken.js';\nimport 'react-international-phone';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '../../store/state/loadingAndLifecycle.js';\nimport '../../shared/consts/index.js';\nimport '../../store/state/user/user.js';\nimport '../../locale/locale.js';\nimport { isCookieEnabled } from '../../utils/functions/isCookieEnabled/isCookieEnabled.js';\n\nconst sdkApi = ({ customHeaders } = {}) => {\n    const settings = {\n        basePath: ApiEndpoint.getBaseUrl(),\n        headers: Object.assign({ 'Content-Type': 'application/json' }, customHeaders),\n    };\n    const minJwt = getMinAuthToken();\n    if (minJwt) {\n        settings.headers.Authorization = `Bearer ${minJwt}`;\n    }\n    const credentials = isCookieEnabled()\n        ? 'include'\n        : undefined;\n    settings.headers['x-dyn-version'] = `WalletKit/${VERSION}`;\n    settings.headers['x-dyn-api-version'] = `API/${API_VERSION}`;\n    return new SDKApi(new Configuration(Object.assign(Object.assign({}, settings), { credentials, fetchApi: FetchService.fetch })));\n};\n\nexport { sdkApi };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAM,SAAS,CAAC,EAAE,aAAa,EAAE,GAAG,CAAC,CAAC;IAClC,MAAM,WAAW;QACb,UAAU,mMAAA,CAAA,UAAW,CAAC,UAAU;QAChC,SAAS,OAAO,MAAM,CAAC;YAAE,gBAAgB;QAAmB,GAAG;IACnE;IACA,MAAM,SAAS,CAAA,GAAA,sOAAA,CAAA,kBAAe,AAAD;IAC7B,IAAI,QAAQ;QACR,SAAS,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,QAAQ;IACvD;IACA,MAAM,cAAc,CAAA,GAAA,sOAAA,CAAA,kBAAe,AAAD,MAC5B,YACA;IACN,SAAS,OAAO,CAAC,gBAAgB,GAAG,CAAC,UAAU,EAAE,8KAAA,CAAA,UAAO,EAAE;IAC1D,SAAS,OAAO,CAAC,oBAAoB,GAAG,CAAC,IAAI,EAAE,8KAAA,CAAA,cAAW,EAAE;IAC5D,OAAO,IAAI,mLAAA,CAAA,SAAM,CAAC,IAAI,4KAAA,CAAA,gBAAa,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,WAAW;QAAE;QAAa,UAAU,gMAAA,CAAA,eAAY,CAAC,KAAK;IAAC;AAC/H","ignoreList":[0]}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/settings/settings.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '@dynamic-labs/utils';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport { sdkApi } from '../api.js';\nimport { isDynamicContextSessionSettingExpired, setDynamicContextSessionSettings, isWagmiSessionSettingExpired, setWagmiSessionSettings } from '../../../context/DynamicContext/helpers/helpers.js';\nimport { VERSION } from '../../../../version.js';\n\nconst fetchProjectSettings = (environmentId) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const res = yield sdkApi().getEnvironmentSettings({\n            environmentId,\n            sdkVersion: `WalletKit/${VERSION}`,\n        }, {\n            credentials: 'omit',\n        });\n        return res;\n    }\n    catch (e) {\n        logger.error(e);\n        return undefined;\n    }\n});\nconst sendDynamicProps = (environmentId, settingsToSend) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const { dynamicContextProps, dynamicWagmiSettings, frameworkSettings } = settingsToSend;\n        if (dynamicContextProps) {\n            yield sendDynamicContextSettings(environmentId, { dynamicContextProps, frameworkSettings }, isDynamicContextSessionSettingExpired, setDynamicContextSessionSettings);\n        }\n        if (dynamicWagmiSettings) {\n            yield sendDynamicContextSettings(environmentId, { dynamicWagmiSettings }, isWagmiSessionSettingExpired, setWagmiSessionSettings);\n        }\n    }\n    catch (error) {\n        logger.warn('Error caught when sending sdkSettings to api. Please notify Dynamic, and send the DynamicContextProvider settings you currently have configured', { error });\n    }\n});\nconst sendDynamicContextSettings = (environmentId, sdkSettingsRequest, isSdkSettingExpired, setSDKSessionSettings) => __awaiter(void 0, void 0, void 0, function* () {\n    // sent once. no need to send again\n    if (!isSdkSettingExpired()) {\n        return;\n    }\n    yield sdkApi().logDynamicSdkSettings({ environmentId, sdkSettingsRequest });\n    setSDKSessionSettings();\n});\n\nexport { fetchProjectSettings, sendDynamicProps };\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;;;;;;;;;;;;;;;;;AAmBA,MAAM,uBAAuB,CAAC,gBAAkB,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;QAC9E,IAAI;YACA,MAAM,MAAM,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,sBAAsB,CAAC;gBAC9C;gBACA,YAAY,CAAC,UAAU,EAAE,8KAAA,CAAA,UAAO,EAAE;YACtC,GAAG;gBACC,aAAa;YACjB;YACA,OAAO;QACX,EACA,OAAO,GAAG;YACN,8LAAA,CAAA,SAAM,CAAC,KAAK,CAAC;YACb,OAAO;QACX;IACJ;AACA,MAAM,mBAAmB,CAAC,eAAe,iBAAmB,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;QAC1F,IAAI;YACA,MAAM,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,GAAG;YACzE,IAAI,qBAAqB;gBACrB,MAAM,2BAA2B,eAAe;oBAAE;oBAAqB;gBAAkB,GAAG,6NAAA,CAAA,wCAAqC,EAAE,6NAAA,CAAA,mCAAgC;YACvK;YACA,IAAI,sBAAsB;gBACtB,MAAM,2BAA2B,eAAe;oBAAE;gBAAqB,GAAG,6NAAA,CAAA,+BAA4B,EAAE,6NAAA,CAAA,0BAAuB;YACnI;QACJ,EACA,OAAO,OAAO;YACV,8LAAA,CAAA,SAAM,CAAC,IAAI,CAAC,mJAAmJ;gBAAE;YAAM;QAC3K;IACJ;AACA,MAAM,6BAA6B,CAAC,eAAe,oBAAoB,qBAAqB,wBAA0B,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;QACpJ,mCAAmC;QACnC,IAAI,CAAC,uBAAuB;YACxB;QACJ;QACA,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,qBAAqB,CAAC;YAAE;YAAe;QAAmB;QACzE;IACJ","ignoreList":[0]}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/wallets/wallets.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { VerifyRequestFromJSON } from '@dynamic-labs/sdk-api-core';\nimport { WalletUsedError, MergeAccountsConfirmationError, SandboxMaximumThresholdReachedError, DynamicError, WalletNotDeployedError, ChainalysisError, GateBlockedError, NoAccessError, AccountExistsError } from '@dynamic-labs/utils';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport { sdkApi } from '../api.js';\nimport { storeAuthTokenAndUser } from '../../../store/state/user/storeAuthTokenAndUser/storeAuthTokenAndUser.js';\nimport '../../../store/state/user/user.js';\n\nconst storeSelectedWallet = (_a) => __awaiter(void 0, [_a], void 0, function* ({ environmentId, walletId, }) {\n    try {\n        const response = yield sdkApi().selectUserWallet({\n            environmentId,\n            userWalletSelectionRequest: {\n                walletId,\n            },\n        });\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        logger.error('error storing selected wallet', e);\n        return undefined;\n    }\n});\nconst linkWallet = (environmentId_1, _b) => __awaiter(void 0, [environmentId_1, _b], void 0, function* (environmentId, { messageToSign, network, signedMessage, publicWalletAddress, chain, walletName, walletProvider, additionalWalletAddresses, backup, password, passwordSource, }) {\n    const verifyRequest = VerifyRequestFromJSON({\n        additionalWalletAddresses,\n        backup,\n        chain,\n        messageToSign,\n        network,\n        password,\n        passwordSource,\n        publicWalletAddress,\n        signedMessage,\n        walletName,\n        walletProvider,\n    });\n    try {\n        const response = yield sdkApi().verifyLink({\n            environmentId,\n            verifyRequest,\n        });\n        storeAuthTokenAndUser(response);\n        return response;\n    }\n    catch (e) {\n        logger.error(e);\n        const data = yield e.json();\n        if (data.code === 'reassign_wallet_confirm' ||\n            data.code === 'reassign_wallet_error') {\n            throw new WalletUsedError(data.code);\n        }\n        if (data.code === 'merge_accounts_confirmation') {\n            throw new MergeAccountsConfirmationError({\n                code: data.code,\n                mergeConflicts: data.payload.mergeConflicts,\n                walletAddress: publicWalletAddress,\n            });\n        }\n        if (data.error.code === 'sandbox_maximum_threshold_reached') {\n            throw new SandboxMaximumThresholdReachedError(data.error.message);\n        }\n        throw new DynamicError(data.error);\n    }\n});\nconst unlinkWallet = (_c) => __awaiter(void 0, [_c], void 0, function* ({ environmentId, primaryWalletId, walletId, onSuccess, }) {\n    try {\n        const response = yield sdkApi().verifyUnlink({\n            environmentId,\n            verifyUnlinkRequest: {\n                primaryWalletId,\n                walletId,\n            },\n        });\n        onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess();\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        return undefined;\n    }\n});\nconst transferWallet = (environmentId_2, _d) => __awaiter(void 0, [environmentId_2, _d], void 0, function* (environmentId, { network, messageToSign, signedMessage, publicWalletAddress, chain, walletName, walletProvider, skipEmptyAccountCheck = false, }) {\n    // We should find a better way to do this than force type casting\n    const verifyRequest = {\n        chain,\n        messageToSign,\n        network,\n        publicWalletAddress,\n        signedMessage,\n        skipEmptyAccountCheck,\n        walletName,\n        walletProvider,\n    };\n    try {\n        const response = yield sdkApi().verifyTransfer({\n            environmentId,\n            verifyRequest,\n        });\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        logger.error('error transferring wallet', e);\n        return undefined;\n    }\n});\nconst verifyWallet = (environmentId_3, _e) => __awaiter(void 0, [environmentId_3, _e], void 0, function* (environmentId, { messageToSign, signedMessage, publicWalletAddress, chain, walletName, walletProvider, captchaToken, network, oauth, additionalWalletAddresses, sessionPublicKey, }) {\n    const verifyRequest = VerifyRequestFromJSON({\n        additionalWalletAddresses,\n        captchaToken,\n        chain,\n        messageToSign,\n        network,\n        oauth,\n        publicWalletAddress,\n        sessionPublicKey,\n        signedMessage,\n        walletName,\n        walletProvider,\n    });\n    try {\n        const response = yield sdkApi().verify({\n            environmentId,\n            verifyRequest,\n        });\n        return response;\n    }\n    catch (e) {\n        logger.error(e);\n        const data = yield e.json();\n        if (data.code === 'wallet_not_deployed') {\n            throw new WalletNotDeployedError();\n        }\n        if (data.error.code === 'chainalysis_blocked_wallet') {\n            throw new ChainalysisError(data.payload.walletPublicKey);\n        }\n        if (data.error.code === 'gate_blocked') {\n            throw new GateBlockedError(data.payload.walletPublicKey);\n        }\n        if (data.error.code === 'missing_from_list') {\n            throw new NoAccessError({\n                walletPublicKey: data.payload.walletPublicKey,\n            });\n        }\n        if (data.code === 'email_associated_with_different_provider') {\n            throw new AccountExistsError(data.error, data.payload);\n        }\n        if (data.error.code === 'sandbox_maximum_threshold_reached') {\n            throw new SandboxMaximumThresholdReachedError(data.error.message);\n        }\n        return undefined;\n    }\n});\n\nexport { linkWallet, storeSelectedWallet, transferWallet, unlinkWallet, verifyWallet };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/embeddedWallets/embeddedWallets.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { EmbeddedWalletProviderEnum, EmbeddedWalletChainEnum } from '@dynamic-labs/sdk-api-core';\nimport { DynamicError } from '@dynamic-labs/utils';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport { storeAuthTokenAndUser } from '../../../store/state/user/storeAuthTokenAndUser/storeAuthTokenAndUser.js';\nimport '../../../store/state/user/user.js';\nimport { sdkApi } from '../api.js';\n\nconst createTurnkeyEmbeddedWallet = (_a) => __awaiter(void 0, [_a], void 0, function* ({ attestation, challenge, environmentId, chains = [EmbeddedWalletChainEnum.Evm], passkeyAlias, }) {\n    const embeddedWallets = [\n        {\n            chains,\n            embeddedWalletProvider: EmbeddedWalletProviderEnum.Turnkeyhd,\n            isAuthenticatorAttached: false,\n            passkeyAlias,\n        },\n    ];\n    if (attestation && challenge) {\n        embeddedWallets[0] = Object.assign(Object.assign({}, embeddedWallets[0]), { embeddedWalletSpecificOpts: {\n                attestation,\n                challenge,\n            }, isAuthenticatorAttached: true });\n    }\n    try {\n        const response = yield sdkApi().createEmbeddedWallets({\n            createEmbeddedWalletsRequest: {\n                embeddedWallets,\n            },\n            environmentId,\n        });\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        logger.error('Error creating embedded wallet: ', e);\n        return undefined;\n    }\n});\nconst initEmbeddedWalletSession = (_b) => __awaiter(void 0, [_b], void 0, function* ({ authenticatorType, walletId, publicKey, environmentId, }) {\n    if (authenticatorType === 'passkey') {\n        return sdkApi().initPasskeyRecovery({\n            environmentId,\n            initPasskeyRecoveryRequest: {\n                turnkeyRecoveryTargetPublicKey: publicKey,\n                walletId,\n            },\n        });\n    }\n    return sdkApi().initEmailAuth({\n        environmentId,\n        initEmailAuthRequest: {\n            turnkeyEmailAuthTargetPublicKey: publicKey,\n            walletId,\n        },\n    });\n});\nconst completePasskeyRecovery = (_c) => __awaiter(void 0, [_c], void 0, function* ({ walletId, attestation, challenge, environmentId, }) {\n    try {\n        const response = yield sdkApi().completePasskeyRecovery({\n            completePasskeyRecoveryRequest: {\n                attestation,\n                challenge,\n                walletId,\n            },\n            environmentId,\n        });\n        return storeAuthTokenAndUser(response);\n    }\n    catch (e) {\n        logger.error('Error completing passkey recovery: ', e);\n        return undefined;\n    }\n});\nconst updatePasskeyRecoveryEmail = (_d) => __awaiter(void 0, [_d], void 0, function* ({ environmentId, updateRecoveryEmailRequest, }) {\n    try {\n        yield sdkApi().updateEmbeddedWalletRecoveryEmail({\n            environmentId,\n            updateRecoveryEmailRequest,\n        });\n    }\n    catch (e) {\n        logger.error('Error while trying to update recovery email: ', e);\n        throw new DynamicError('Error updating recovery email');\n    }\n});\nconst getUserPasskeys = (_e) => __awaiter(void 0, [_e], void 0, function* ({ environmentId, }) {\n    try {\n        const data = yield sdkApi().getUserPasskeys({\n            environmentId,\n        });\n        return data;\n    }\n    catch (e) {\n        logger.error(e);\n        return {\n            count: 0,\n            passkeys: [],\n        };\n    }\n});\nconst updateUserPasskey = (_f) => __awaiter(void 0, [_f], void 0, function* ({ environmentId, id, alias, }) {\n    try {\n        const data = yield sdkApi().updatePasskey({\n            environmentId,\n            updateUserPasskeyRequest: { alias, id },\n        });\n        return data;\n    }\n    catch (e) {\n        logger.error(e);\n        return undefined;\n    }\n});\nconst exportEmbeddedWallet = (_g) => __awaiter(void 0, [_g], void 0, function* ({ environmentId, walletId, activityId, }) {\n    try {\n        const data = yield sdkApi().embeddedWalletExport({\n            activityId,\n            environmentId,\n            walletId,\n        });\n        return data;\n    }\n    catch (e) {\n        logger.error(e);\n        return { exportBundle: '' };\n    }\n});\nconst getWalletAuthToken = (_h) => __awaiter(void 0, [_h], void 0, function* ({ environmentId, type, }) {\n    try {\n        const authToken = yield sdkApi().getAuthToken({\n            environmentId,\n            type,\n        });\n        return authToken.token;\n    }\n    catch (e) {\n        return undefined;\n    }\n});\nconst getEmbeddedWalletBackup = (_j) => __awaiter(void 0, [_j], void 0, function* ({ environmentId, }) {\n    try {\n        const response = yield sdkApi().getEmbeddedWalletBackups({\n            environmentId,\n        });\n        return response.secret;\n    }\n    catch (e) {\n        return undefined;\n    }\n});\nconst getEmbeddedWalletPasscode = (_k) => __awaiter(void 0, [_k], void 0, function* ({ environmentId, }) {\n    try {\n        const response = yield sdkApi().getEmbeddedWalletPasscode({\n            environmentId,\n        });\n        return response.secret;\n    }\n    catch (e) {\n        return undefined;\n    }\n});\nconst claimEmbeddedWallet = (_l) => __awaiter(void 0, [_l], void 0, function* ({ environmentId, walletId, }) {\n    var _m, _o;\n    try {\n        const response = yield sdkApi().claimEmbeddedWallet({\n            embeddedWalletPasscodeClaimRequest: {\n                walletId,\n            },\n            environmentId,\n        });\n        storeAuthTokenAndUser(response);\n        return response;\n    }\n    catch (e) {\n        logger.error(e);\n        // request failed, return unknown error\n        const data = yield ((_m = e === null || e === void 0 ? void 0 : e.json) === null || _m === void 0 ? void 0 : _m.call(e));\n        if (!((_o = data === null || data === void 0 ? void 0 : data.error) === null || _o === void 0 ? void 0 : _o.code)) {\n            return { code: 'unknown_error' };\n        }\n        throw e;\n    }\n});\nconst registerSessionKey = (_p) => __awaiter(void 0, [_p], void 0, function* ({ environmentId, publicKey, }) {\n    try {\n        yield sdkApi().registerSessionKey({\n            environmentId,\n            registerSessionKeyRequest: { publicKey },\n        });\n        return publicKey;\n    }\n    catch (e) {\n        logger.error('Error registering session key', e);\n        return undefined;\n    }\n});\nconst getCreateEmbeddedWalletAccountRequest = (_q) => __awaiter(void 0, [_q], void 0, function* ({ environmentId, chain, }) {\n    try {\n        const response = yield sdkApi().getCreateWalletAccountRequest({\n            chain,\n            environmentId,\n        });\n        return response;\n    }\n    catch (e) {\n        logger.error('Error fetching create embedded wallet account request: ', e);\n        throw new DynamicError('Error fetching create embedded wallet account request');\n    }\n});\nconst createEmbeddedWalletAccount = (_r) => __awaiter(void 0, [_r], void 0, function* ({ environmentId, createEmbeddedWalletAccountRequest, }) {\n    try {\n        const response = yield sdkApi().createWalletAccount({\n            createWalletAccountRequest: {\n                turnkeySignedRequest: createEmbeddedWalletAccountRequest,\n            },\n            environmentId,\n        });\n        return response;\n    }\n    catch (e) {\n        logger.error('Error creating embedded wallet account: ', e);\n        throw new DynamicError('Error creating embedded wallet account');\n    }\n});\n\nexport { claimEmbeddedWallet, completePasskeyRecovery, createEmbeddedWalletAccount, createTurnkeyEmbeddedWallet, exportEmbeddedWallet, getCreateEmbeddedWalletAccountRequest, getEmbeddedWalletBackup, getEmbeddedWalletPasscode, getUserPasskeys, getWalletAuthToken, initEmbeddedWalletSession, registerSessionKey, updatePasskeyRecoveryEmail, updateUserPasskey };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 694, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/user/user.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { EmailAlreadyExistsError, CustomFieldNotUniqueError, UsernameAlreadyExistsError, TooManyEmailVerificationsError, InvalidPhoneNumberError, CookieInvalidError } from '@dynamic-labs/utils';\nimport '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport { sdkApi } from '../api.js';\nimport { storeAuthTokenAndUser } from '../../../store/state/user/storeAuthTokenAndUser/storeAuthTokenAndUser.js';\nimport '../../../store/state/user/user.js';\n\nconst updateUserProfileFields = (environmentId, fields) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const response = yield sdkApi().updateSelf({\n            environmentId,\n            userFields: fields,\n        });\n        const userProfile = yield storeAuthTokenAndUser(response);\n        return Object.assign(Object.assign({}, response), { userProfile });\n    }\n    catch (e) {\n        logger.error(e);\n        if (e instanceof Response) {\n            const error = yield e.json();\n            if (error.code === 'email_already_exists') {\n                throw new EmailAlreadyExistsError();\n            }\n            else if (error.code === 'custom_field_data_not_unique') {\n                throw new CustomFieldNotUniqueError();\n            }\n            else if (error.code === 'username_already_exists') {\n                throw new UsernameAlreadyExistsError();\n            }\n            else if (error.code === 'too_many_verification_attempts') {\n                throw new TooManyEmailVerificationsError();\n            }\n            else if (error.code === 'invalid_phone' ||\n                error.code === 'invalid_sms_verification') {\n                throw new InvalidPhoneNumberError(error.error);\n            }\n        }\n        throw e;\n    }\n});\nconst mergeUserAccounts = (environmentId) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const response = yield sdkApi().mergeUsers({\n            environmentId,\n        });\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        logger.error(e);\n        throw e;\n    }\n});\nconst verifyMergeUsers = (environmentId, mergeConflictResolutions) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const response = yield sdkApi().verifyMergeUsers({\n            environmentId,\n            mergeUserConflictResolutions: {\n                mergeUserResolutions: mergeConflictResolutions,\n            },\n        });\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        logger.error(e);\n        throw e;\n    }\n});\nconst refreshUserJwt = (_a) => __awaiter(void 0, [_a], void 0, function* ({ environmentId, }) {\n    try {\n        const response = yield sdkApi().refreshAuth({\n            environmentId,\n        });\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        return undefined;\n    }\n});\nconst getAuthenticatedUser = (_b) => __awaiter(void 0, [_b], void 0, function* ({ environmentId, }) {\n    try {\n        return yield sdkApi().getAuthenticatedUser({\n            environmentId,\n        });\n    }\n    catch (e) {\n        // only explicitly throw `CookieInvalidError` when we attempt to get the authenticated user\n        // and the backend returns a 401, indicating that there is no valid auth for the request\n        if (e.status === 401) {\n            logger.error('No valid auth for getAuthenticatedUser', e);\n            throw new CookieInvalidError();\n        }\n        logger.error('Other error getting authenticated user', e);\n        return undefined;\n    }\n});\n\nexport { getAuthenticatedUser, mergeUserAccounts, refreshUserJwt, updateUserProfileFields, verifyMergeUsers };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 836, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/transactions/blockaid.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { sdkApi } from '../api.js';\nimport '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '@dynamic-labs/utils';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport '@dynamic-labs/multi-wallet';\nimport { getAppOrigin } from '../../../utils/functions/getAppOrigin/getAppOrigin.js';\nimport 'react-international-phone';\nimport '../../../store/state/user/user.js';\nimport '../../../locale/locale.js';\nimport '../../../store/state/projectSettings/projectSettings.js';\n\nconst isMaliciousUrl = (_a) => __awaiter(void 0, [_a], void 0, function* ({ environmentId, url, }) {\n    try {\n        const request = {\n            environmentId,\n            scanWebsiteUrlRequest: { url },\n        };\n        const data = yield sdkApi().scanUrl(request);\n        return data.isMalicious;\n    }\n    catch (error) {\n        return undefined;\n    }\n});\nconst simulateBlockaidEVMTransaction = (_b) => __awaiter(void 0, [_b], void 0, function* ({ environmentId, chainId, from, to, value, data, }) {\n    try {\n        const request = {\n            chainId,\n            data,\n            from,\n            to,\n            value,\n        };\n        const simulationRequest = {\n            environmentId,\n            simulateEVMTransactionRequest: request,\n        };\n        const transactionData = yield sdkApi().simulateEVMTransaction(simulationRequest);\n        return transactionData;\n    }\n    catch (error) {\n        logger.warn('simulateBlockaidEVMTransaction error', error);\n        return undefined;\n    }\n});\nconst simulateBlockaidSVMTransaction = (_c) => __awaiter(void 0, [_c], void 0, function* ({ environmentId, chain, accountAddress, transactions, }) {\n    var _d;\n    try {\n        const request = {\n            environmentId,\n            simulateSVMTransactionRequest: {\n                accountAddress,\n                chain: chain,\n                domain: (_d = getAppOrigin()) !== null && _d !== void 0 ? _d : 'https://example.com',\n                // signAll works the same as sign, signAndSend, signAll\n                method: 'signAllTransactions',\n                transactions,\n            },\n        };\n        const transactionData = yield sdkApi().simulateSVMTransaction(request);\n        return transactionData;\n    }\n    catch (error) {\n        logger.warn('simulateBlockaidSVMTransaction error', error);\n        return undefined;\n    }\n});\n\nexport { isMaliciousUrl, simulateBlockaidEVMTransaction, simulateBlockaidSVMTransaction };\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAM,iBAAiB,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;QAAC;KAAG,EAAE,KAAK,GAAG,UAAW,EAAE,aAAa,EAAE,GAAG,EAAG;QAC7F,IAAI;YACA,MAAM,UAAU;gBACZ;gBACA,uBAAuB;oBAAE;gBAAI;YACjC;YACA,MAAM,OAAO,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,OAAO,CAAC;YACpC,OAAO,KAAK,WAAW;QAC3B,EACA,OAAO,OAAO;YACV,OAAO;QACX;IACJ;AACA,MAAM,iCAAiC,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;QAAC;KAAG,EAAE,KAAK,GAAG,UAAW,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAG;QACxI,IAAI;YACA,MAAM,UAAU;gBACZ;gBACA;gBACA;gBACA;gBACA;YACJ;YACA,MAAM,oBAAoB;gBACtB;gBACA,+BAA+B;YACnC;YACA,MAAM,kBAAkB,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,sBAAsB,CAAC;YAC9D,OAAO;QACX,EACA,OAAO,OAAO;YACV,8LAAA,CAAA,SAAM,CAAC,IAAI,CAAC,wCAAwC;YACpD,OAAO;QACX;IACJ;AACA,MAAM,iCAAiC,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;QAAC;KAAG,EAAE,KAAK,GAAG,UAAW,EAAE,aAAa,EAAE,KAAK,EAAE,cAAc,EAAE,YAAY,EAAG;QAC7I,IAAI;QACJ,IAAI;YACA,MAAM,UAAU;gBACZ;gBACA,+BAA+B;oBAC3B;oBACA,OAAO;oBACP,QAAQ,CAAC,KAAK,CAAA,GAAA,gOAAA,CAAA,eAAY,AAAD,GAAG,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;oBAC/D,uDAAuD;oBACvD,QAAQ;oBACR;gBACJ;YACJ;YACA,MAAM,kBAAkB,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,sBAAsB,CAAC;YAC9D,OAAO;QACX,EACA,OAAO,OAAO;YACV,8LAAA,CAAA,SAAM,CAAC,IAAI,CAAC,wCAAwC;YACpD,OAAO;QACX;IACJ","ignoreList":[0]}},
    {"offset": {"line": 946, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 952, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/onramp/onramp.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { sdkApi } from '../api.js';\n\nconst getOnrampProviders = (_a) => __awaiter(void 0, [_a], void 0, function* ({ chain, environmentId, networkId, token, walletAddress, }) {\n    const { onramps } = yield sdkApi().getSupportedOnramps({\n        chain,\n        environmentId,\n        networkId: networkId ? String(networkId) : undefined,\n        token,\n        walletAddress,\n    });\n    if (!onramps || onramps.length === 0) {\n        throw new Error('No onramps');\n    }\n    return onramps;\n});\n\nexport { getOnrampProviders };\n"],"names":[],"mappings":";;;AACA;AACA;AAFA;;;AAIA,MAAM,qBAAqB,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;QAAC;KAAG,EAAE,KAAK,GAAG,UAAW,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAG;QACpI,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,mBAAmB,CAAC;YACnD;YACA;YACA,WAAW,YAAY,OAAO,aAAa;YAC3C;YACA;QACJ;QACA,IAAI,CAAC,WAAW,QAAQ,MAAM,KAAK,GAAG;YAClC,MAAM,IAAI,MAAM;QACpB;QACA,OAAO;IACX","ignoreList":[0]}},
    {"offset": {"line": 976, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 982, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/chains/balances.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { ChainEnum } from '@dynamic-labs/sdk-api-core';\nimport { sdkApi } from '../api.js';\n\nconst getAccountTokenBalances = (_a) => __awaiter(void 0, [_a], void 0, function* ({ environmentId, chainName = ChainEnum.Evm, networkId, accountAddress, includeNative = false, includePrices = false, forceRefresh = false, }) {\n    const customHeaders = forceRefresh\n        ? { 'Cache-Control': 'no-cache' }\n        : undefined;\n    const data = yield sdkApi({ customHeaders }).getAccountBalances({\n        accountAddress,\n        chainName: chainName,\n        environmentId,\n        includeNative,\n        includePrices,\n        networkId,\n    });\n    return data;\n});\n\nexport { getAccountTokenBalances };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AADA;AAFA;;;;AAKA,MAAM,0BAA0B,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;QAAC;KAAG,EAAE,KAAK,GAAG,UAAW,EAAE,aAAa,EAAE,YAAY,wLAAA,CAAA,YAAS,CAAC,GAAG,EAAE,SAAS,EAAE,cAAc,EAAE,gBAAgB,KAAK,EAAE,gBAAgB,KAAK,EAAE,eAAe,KAAK,EAAG;QAC3N,MAAM,gBAAgB,eAChB;YAAE,iBAAiB;QAAW,IAC9B;QACN,MAAM,OAAO,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,EAAE;YAAE;QAAc,GAAG,kBAAkB,CAAC;YAC5D;YACA,WAAW;YACX;YACA;YACA;YACA;QACJ;QACA,OAAO;IACX","ignoreList":[0]}},
    {"offset": {"line": 1012, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1018, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/oauth/oauth.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { SocialAccountAlreadyExistsError, SandboxMaximumThresholdReachedError, GateBlockedError, NoAccessError, AccountExistsError } from '@dynamic-labs/utils';\nimport '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport { sdkApi } from '../api.js';\nimport { storeAuthTokenAndUser } from '../../../store/state/user/storeAuthTokenAndUser/storeAuthTokenAndUser.js';\nimport '../../../store/state/user/user.js';\n\nconst initAuth = (environmentId, providerType, oauthInitAuthRequest) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        yield sdkApi().initAuth({\n            environmentId,\n            oauthInitAuthRequest,\n            providerType,\n        });\n    }\n    catch (e) {\n        logger.error(e);\n    }\n});\nconst verifyOAuth = (environmentId_1, providerType_1, _a) => __awaiter(void 0, [environmentId_1, providerType_1, _a], void 0, function* (environmentId, providerType, { code, codeVerifier, state }) {\n    const oauthRequest = {\n        code,\n        codeVerifier,\n        state,\n    };\n    try {\n        const response = yield sdkApi().oauthVerify({\n            environmentId,\n            oauthRequest,\n            providerType,\n        });\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        return handleVerifyError(e);\n    }\n});\nconst unlinkOAuth = (_b) => __awaiter(void 0, [_b], void 0, function* ({ environmentId, primaryWalletId, verifiedCrentialId, }) {\n    try {\n        const response = yield sdkApi().verifyUnlink({\n            environmentId,\n            verifyUnlinkRequest: {\n                primaryWalletId,\n                verifiedCrentialId,\n            },\n        });\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        return undefined;\n    }\n});\nconst signInOAuth = (environmentId_2, providerType_2, _c) => __awaiter(void 0, [environmentId_2, providerType_2, _c], void 0, function* (environmentId, providerType, { code, codeVerifier, state, captchaToken, sessionPublicKey }) {\n    const oauthRequest = {\n        captchaToken,\n        code,\n        codeVerifier,\n        sessionPublicKey,\n        state,\n    };\n    try {\n        const response = yield sdkApi().oauthSignIn({\n            environmentId,\n            oauthRequest,\n            providerType,\n        });\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        return handleSignInError(e);\n    }\n});\nconst getOAuthResult = (environmentId_3, providerType_3, _d) => __awaiter(void 0, [environmentId_3, providerType_3, _d], void 0, function* (environmentId, providerType, { state }) {\n    const oauthResultRequest = {\n        state,\n    };\n    try {\n        const result = yield sdkApi().oauthResult({\n            environmentId,\n            oauthResultRequest,\n            providerType,\n        });\n        return result;\n    }\n    catch (e) {\n        logger.error(e);\n        return undefined;\n    }\n});\nconst farcasterSignIn = (environmentId, farcasterSignInRequest) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const response = yield sdkApi().farcasterSignIn({\n            environmentId,\n            farcasterSignInRequest,\n        });\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        return handleSignInError(e);\n    }\n});\nconst farcasterVerify = (farcasterVerifyRequest) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const response = yield sdkApi().farcasterVerify(farcasterVerifyRequest);\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        return handleVerifyError(e);\n    }\n});\nconst telegramSignIn = (environmentId, oauthResultRequest) => __awaiter(void 0, void 0, void 0, function* () {\n    const telegramSignInRequest = {\n        environmentId,\n        oauthResultRequest,\n    };\n    try {\n        const response = yield sdkApi().telegramSignIn(telegramSignInRequest);\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        return handleSignInError(e);\n    }\n});\nconst isUserLinkedWithTelegram = (environmentId, oauthResultRequest) => __awaiter(void 0, void 0, void 0, function* () {\n    const telegramCheckAuthRequest = {\n        environmentId,\n        oauthResultRequest,\n    };\n    try {\n        yield sdkApi().telegramCheckAuth(telegramCheckAuthRequest);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n});\nconst telegramVerify = (environmentId, oauthResultRequest) => __awaiter(void 0, void 0, void 0, function* () {\n    const telegramVerifyRequest = {\n        environmentId,\n        oauthResultRequest,\n    };\n    try {\n        const response = yield sdkApi().telegramVerify(telegramVerifyRequest);\n        const user = storeAuthTokenAndUser(response);\n        return user;\n    }\n    catch (e) {\n        return handleVerifyError(e);\n    }\n});\nconst handleVerifyError = (e) => __awaiter(void 0, void 0, void 0, function* () {\n    logger.error(e);\n    const data = yield e.json();\n    if (data.code === 'social_account_already_exists') {\n        throw new SocialAccountAlreadyExistsError();\n    }\n    if (data.error.code === 'sandbox_maximum_threshold_reached') {\n        throw new SandboxMaximumThresholdReachedError(data.error.message);\n    }\n    return undefined;\n});\nconst handleSignInError = (e) => __awaiter(void 0, void 0, void 0, function* () {\n    var _e, _f, _g;\n    logger.error(e);\n    const data = yield e.json();\n    if (data.error.code === 'gate_blocked') {\n        throw new GateBlockedError(data.payload.walletPublicKey);\n    }\n    if (data.error.code === 'missing_from_list') {\n        throw new NoAccessError({\n            socialProvider: (_e = data === null || data === void 0 ? void 0 : data.payload) === null || _e === void 0 ? void 0 : _e.socialProvider,\n            socialUsername: (_f = data === null || data === void 0 ? void 0 : data.payload) === null || _f === void 0 ? void 0 : _f.socialUsername,\n            walletPublicKey: (_g = data === null || data === void 0 ? void 0 : data.payload) === null || _g === void 0 ? void 0 : _g.walletPublicKey,\n        });\n    }\n    if (data.code === 'email_associated_with_different_provider') {\n        throw new AccountExistsError(data.error, data.payload);\n    }\n    if (data.error.code === 'sandbox_maximum_threshold_reached') {\n        throw new SandboxMaximumThresholdReachedError(data.error.message);\n    }\n    return undefined;\n});\n\nexport { farcasterSignIn, farcasterVerify, getOAuthResult, initAuth, isUserLinkedWithTelegram, signInOAuth, telegramSignIn, telegramVerify, unlinkOAuth, verifyOAuth };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1263, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/email/email.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { NoAccessError, AccountExistsError, SandboxMaximumThresholdReachedError, EmailVerificationError, UserHasAccountWithEmailError, EmailProviderError } from '@dynamic-labs/utils';\nimport { UnprocessableEntityErrorCode } from '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport { sdkApi } from '../api.js';\n\nconst getEmailProvider = (_a) => __awaiter(void 0, [_a], void 0, function* ({ email, environmentId, }) {\n    try {\n        const res = yield sdkApi().getEmailProvider({\n            email,\n            environmentId,\n        });\n        return res;\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        throw new EmailProviderError(data.code);\n    }\n});\nconst createEmailVerification = (_b) => __awaiter(void 0, [_b], void 0, function* ({ email, environmentId, captchaToken, }) {\n    try {\n        const res = yield sdkApi().createEmailVerification({\n            emailVerificationCreateRequest: {\n                captchaToken,\n                email,\n            },\n            environmentId,\n        });\n        return res;\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        throw new EmailVerificationError(data.code);\n    }\n});\nconst signInWithEmailVerification = (_c) => __awaiter(void 0, [_c], void 0, function* ({ verificationToken, verificationUUID, environmentId, captchaToken, sessionPublicKey, }) {\n    try {\n        const res = yield sdkApi().signInWithEmailVerification({\n            emailVerificationVerifyRequest: {\n                captchaToken,\n                sessionPublicKey,\n                verificationToken,\n                verificationUUID,\n            },\n            environmentId,\n        });\n        return res;\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        if (data.error.code === 'missing_from_list') {\n            throw new NoAccessError({ email: data.payload.email });\n        }\n        if (data.code === 'email_associated_with_different_provider') {\n            throw new AccountExistsError(data.error, data.payload);\n        }\n        if (data.error.code === 'sandbox_maximum_threshold_reached') {\n            throw new SandboxMaximumThresholdReachedError(data.error.message);\n        }\n        throw new EmailVerificationError(data.code);\n    }\n});\nconst retryEmailVerification = (_d) => __awaiter(void 0, [_d], void 0, function* ({ email, environmentId, verificationUUID, }) {\n    try {\n        const res = yield sdkApi().retryEmailVerification({\n            emailVerificationRetryRequest: {\n                email,\n                verificationUUID,\n            },\n            environmentId,\n        });\n        return res;\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        throw new EmailVerificationError(data.code);\n    }\n});\nconst verifyEmail = (_e) => __awaiter(void 0, [_e], void 0, function* ({ verificationToken, verificationUUID, environmentId, }) {\n    try {\n        const res = yield sdkApi().verifyEmailVerification({\n            emailVerificationVerifyRequest: {\n                verificationToken,\n                verificationUUID,\n            },\n            environmentId,\n        });\n        return res;\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        if (data.code === UnprocessableEntityErrorCode.UserHasAlreadyAccountWithEmail) {\n            throw new UserHasAccountWithEmailError(data.error);\n        }\n        if (data.error.code === 'sandbox_maximum_threshold_reached') {\n            throw new SandboxMaximumThresholdReachedError(data.error.message);\n        }\n        throw new EmailVerificationError(data.code);\n    }\n});\n\nexport { createEmailVerification, getEmailProvider, retryEmailVerification, signInWithEmailVerification, verifyEmail };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1415, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1421, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/sms/sms.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { NoAccessError, SmsVerificationError, SandboxMaximumThresholdReachedError } from '@dynamic-labs/utils';\nimport { Locale } from '../../../locale/locale.js';\nimport '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport { sdkApi } from '../api.js';\n\nconst createSmsVerification = (_a) => __awaiter(void 0, [_a], void 0, function* ({ isoCountryCode, phoneNumber, phoneCountryCode, environmentId, captchaToken, }) {\n    try {\n        return yield sdkApi().createSmsVerification({\n            environmentId,\n            smsVerificationCreateRequest: {\n                captchaToken,\n                isoCountryCode,\n                phoneCountryCode,\n                phoneNumber,\n            },\n        });\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        throw new SmsVerificationError(data.error, data.code);\n    }\n});\nconst signInWithSmsVerification = (_b) => __awaiter(void 0, [_b], void 0, function* ({ verificationToken, verificationUUID, environmentId, captchaToken, sessionPublicKey, }) {\n    var _c;\n    try {\n        return yield sdkApi().signInWithSmsVerification({\n            environmentId,\n            smsVerificationVerifyRequest: {\n                captchaToken,\n                sessionPublicKey,\n                verificationToken,\n                verificationUUID,\n            },\n        });\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        if (((_c = data.error) === null || _c === void 0 ? void 0 : _c.code) === 'missing_from_list') {\n            throw new NoAccessError({ phoneNumber: data.payload.phoneNumber });\n        }\n        if (data.code === 'wrong_sms_verification_token') {\n            throw new SmsVerificationError(Locale.getInstance().t('dyn_login.helper.phone_number_form.invalid_sms_verification'), data.code);\n        }\n        if (data.error.code === 'sandbox_maximum_threshold_reached') {\n            throw new SandboxMaximumThresholdReachedError(data.error.message);\n        }\n        throw new SmsVerificationError(data.error, data.code);\n    }\n});\nconst retrySmsVerification = (_d) => __awaiter(void 0, [_d], void 0, function* ({ isoCountryCode, phoneCountryCode, phoneNumber, environmentId, verificationUUID, }) {\n    try {\n        return yield sdkApi().retrySmsVerification({\n            environmentId,\n            smsVerificationRetryRequest: {\n                isoCountryCode,\n                phoneCountryCode,\n                phoneNumber,\n                verificationUUID,\n            },\n        });\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        throw new SmsVerificationError(data.error, data.code);\n    }\n});\nconst verifySms = (_e) => __awaiter(void 0, [_e], void 0, function* ({ verificationToken, verificationUUID, environmentId, }) {\n    try {\n        return yield sdkApi().verifySmsVerification({\n            environmentId,\n            smsVerificationVerifyRequest: {\n                verificationToken,\n                verificationUUID,\n            },\n        });\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        if (data.error.code === 'sandbox_maximum_threshold_reached') {\n            throw new SandboxMaximumThresholdReachedError(data.error.message);\n        }\n        throw new SmsVerificationError(data.error, data.code);\n    }\n});\n\nexport { createSmsVerification, retrySmsVerification, signInWithSmsVerification, verifySms };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1559, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/mfa/mfa.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { MFADeviceType } from '@dynamic-labs/sdk-api-core';\nimport { MfaInvalidOtpError, MfaRateLimitedError } from '@dynamic-labs/utils';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport { sdkApi } from '../api.js';\n\nconst getUserMfaDevices = (_a) => __awaiter(void 0, [_a], void 0, function* ({ environmentId, }) {\n    try {\n        const { devices } = yield sdkApi().getUserMfaDevices({\n            environmentId,\n        });\n        return devices;\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        return [];\n    }\n});\nconst addMfaDevice = (_b) => __awaiter(void 0, [_b], void 0, function* ({ environmentId, type, }) {\n    try {\n        if (type === MFADeviceType.Totp) {\n            const response = yield sdkApi().registerTotpMfaDevice({\n                environmentId,\n            });\n            return response;\n        }\n        throw new Error('Unsupported MFA device type');\n    }\n    catch (e) {\n        const message = e instanceof Error ? e.message : (yield e.json()).error;\n        logger.error(message);\n        throw new Error(message);\n    }\n});\nconst updateUserMfaDevice = (_c) => __awaiter(void 0, [_c], void 0, function* ({ environmentId, mfaDeviceId, }) {\n    try {\n        yield sdkApi().updateUserMfaDevice({\n            environmentId,\n            mfaDeviceId,\n        });\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n    }\n});\nconst deleteMfaDevice = (_d) => __awaiter(void 0, [_d], void 0, function* ({ environmentId, mfaDeviceId, mfaAuthToken, }) {\n    try {\n        yield sdkApi().deleteMfaDevice({\n            environmentId,\n            mfaDeviceId,\n            xMfaAuthToken: mfaAuthToken,\n        });\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n    }\n});\n// used when verifying a device added after the user is already logged in\n// no jwt update needed\nconst verifyMfaDevice = (_e) => __awaiter(void 0, [_e], void 0, function* ({ environmentId, type, code, }) {\n    try {\n        if (type === MFADeviceType.Totp) {\n            const request = {\n                code,\n                type,\n            };\n            const device = yield sdkApi().registerTotpMfaDeviceVerify({\n                environmentId,\n                mFARegisterTotpDevicePostRequest: request,\n            });\n            return device;\n        }\n        throw new Error('Unsupported MFA device type');\n    }\n    catch (e) {\n        const message = e instanceof Error ? e.message : (yield e.json()).error;\n        logger.error(message);\n        return undefined;\n    }\n});\n// used when verifying a device when user is logging in\n// jwt update needed\nconst authMfaDevice = (_f) => __awaiter(void 0, [_f], void 0, function* ({ deviceId, environmentId, type, code, createMfaToken, }) {\n    try {\n        if (type === MFADeviceType.Totp) {\n            const request = {\n                code,\n                createMfaToken,\n                id: deviceId || undefined,\n            };\n            const response = yield sdkApi().authMfaTotpDevice({\n                environmentId,\n                mFAAuthTotpDevicePostRequest: request,\n            });\n            return response;\n        }\n        throw new Error('Unsupported MFA device type');\n    }\n    catch (error) {\n        logger.error(error);\n        if (error instanceof Response) {\n            const responseError = yield error.json();\n            if (responseError.code === 'mfa_invalid_code') {\n                throw new MfaInvalidOtpError();\n            }\n            if (responseError.code === 'mfa_rate_limited') {\n                throw new MfaRateLimitedError();\n            }\n        }\n        throw error;\n    }\n});\nconst getRecoveryCodes = (_g) => __awaiter(void 0, [_g], void 0, function* ({ environmentId, }) {\n    try {\n        const { recoveryCodes } = yield sdkApi().getRecoveryCodes({\n            environmentId,\n        });\n        return recoveryCodes;\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        return [];\n    }\n});\nconst createNewRecoveryCodes = (_h) => __awaiter(void 0, [_h], void 0, function* ({ environmentId, }) {\n    try {\n        const { recoveryCodes } = yield sdkApi().createNewRecoveryCodes({\n            environmentId,\n        });\n        return recoveryCodes;\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error(data.error);\n        return [];\n    }\n});\n// used when verifying a device when user is logging in with recovery code\n// jwt update needed\nconst authMfaRecovery = (_j) => __awaiter(void 0, [_j], void 0, function* ({ environmentId, code, }) {\n    try {\n        const request = {\n            code,\n        };\n        const response = yield sdkApi().authMfaRecovery({\n            environmentId,\n            mFAAuthRecoveryDevicePostRequest: request,\n        });\n        return response;\n    }\n    catch (error) {\n        logger.error(error);\n        if (error instanceof Response) {\n            const responseError = yield error.json();\n            if (responseError.code === 'mfa_invalid_code') {\n                throw new MfaInvalidOtpError();\n            }\n        }\n        throw error;\n    }\n});\n\nexport { addMfaDevice, authMfaDevice, authMfaRecovery, createNewRecoveryCodes, deleteMfaDevice, getRecoveryCodes, getUserMfaDevices, updateUserMfaDevice, verifyMfaDevice };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1773, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1779, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/utils.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../_virtual/_tslib.js';\nimport { sdkApi } from './api.js';\n\nconst fetchNonce = (environmentId) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const res = yield sdkApi().getNonce({\n            environmentId,\n        });\n        return res.nonce;\n    }\n    catch (e) {\n        return undefined;\n    }\n});\n\nexport { fetchNonce };\n"],"names":[],"mappings":";;;AACA;AACA;AAFA;;;AAIA,MAAM,aAAa,CAAC,gBAAkB,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;QACpE,IAAI;YACA,MAAM,MAAM,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,QAAQ,CAAC;gBAChC;YACJ;YACA,OAAO,IAAI,KAAK;QACpB,EACA,OAAO,GAAG;YACN,OAAO;QACX;IACJ","ignoreList":[0]}},
    {"offset": {"line": 1798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1804, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/session/session.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { DynamicError } from '@dynamic-labs/utils';\nimport { ChainEnum, WalletProviderEnum, AuthModeEnum } from '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport { sdkApi } from '../api.js';\n\nconst revokeSession = (_a) => __awaiter(void 0, [_a], void 0, function* ({ environmentId, sessionId, }) {\n    try {\n        yield sdkApi().revokeSession({\n            environmentId,\n        });\n    }\n    catch (error) {\n        const body = yield error.json();\n        logger.error(Error(body.error.message));\n    }\n});\nconst mapChainToChainEnum = (chain) => {\n    const foundChain = Object.values(ChainEnum).find((value) => value === chain);\n    if (!foundChain) {\n        throw new DynamicError(`Invalid chain ${chain}`);\n    }\n    return foundChain;\n};\nconst mapProviderToProviderEnum = (provider) => {\n    const foundProvider = Object.values(WalletProviderEnum).find((value) => value === provider);\n    if (!foundProvider) {\n        throw new DynamicError(`Invalid provider ${provider}`);\n    }\n    return foundProvider;\n};\nconst mapAuthModeTypeToEnum = (authMode) => {\n    const found = Object.values(AuthModeEnum).find((value) => value === authMode);\n    if (!found) {\n        throw new DynamicError(`Invalid authMode ${authMode}`);\n    }\n    return found;\n};\nconst createVisit = (_b) => __awaiter(void 0, [_b], void 0, function* ({ authMode, chain, environmentId, walletProvider, publicWalletAddress, walletName, }) {\n    try {\n        const connectRequest = {\n            address: publicWalletAddress,\n            authMode: mapAuthModeTypeToEnum(authMode),\n            chain: mapChainToChainEnum(chain),\n            provider: mapProviderToProviderEnum(walletProvider),\n            walletName,\n        };\n        yield sdkApi().createVisit({\n            connectRequest,\n            environmentId,\n        });\n    }\n    catch (error) {\n        // log error to console, don't do anything else\n        logger.error(error);\n    }\n});\n\nexport { createVisit, mapAuthModeTypeToEnum, mapChainToChainEnum, mapProviderToProviderEnum, revokeSession };\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AADA;AACA;AAAA;AAHA;;;;;;;;;;;;;;;;AAiBA,MAAM,gBAAgB,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;QAAC;KAAG,EAAE,KAAK,GAAG,UAAW,EAAE,aAAa,EAAE,SAAS,EAAG;QAClG,IAAI;YACA,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,aAAa,CAAC;gBACzB;YACJ;QACJ,EACA,OAAO,OAAO;YACV,MAAM,OAAO,MAAM,MAAM,IAAI;YAC7B,8LAAA,CAAA,SAAM,CAAC,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,OAAO;QACzC;IACJ;AACA,MAAM,sBAAsB,CAAC;IACzB,MAAM,aAAa,OAAO,MAAM,CAAC,wLAAA,CAAA,YAAS,EAAE,IAAI,CAAC,CAAC,QAAU,UAAU;IACtE,IAAI,CAAC,YAAY;QACb,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,CAAC,cAAc,EAAE,OAAO;IACnD;IACA,OAAO;AACX;AACA,MAAM,4BAA4B,CAAC;IAC/B,MAAM,gBAAgB,OAAO,MAAM,CAAC,iMAAA,CAAA,qBAAkB,EAAE,IAAI,CAAC,CAAC,QAAU,UAAU;IAClF,IAAI,CAAC,eAAe;QAChB,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,CAAC,iBAAiB,EAAE,UAAU;IACzD;IACA,OAAO;AACX;AACA,MAAM,wBAAwB,CAAC;IAC3B,MAAM,QAAQ,OAAO,MAAM,CAAC,2LAAA,CAAA,eAAY,EAAE,IAAI,CAAC,CAAC,QAAU,UAAU;IACpE,IAAI,CAAC,OAAO;QACR,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,CAAC,iBAAiB,EAAE,UAAU;IACzD;IACA,OAAO;AACX;AACA,MAAM,cAAc,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;QAAC;KAAG,EAAE,KAAK,GAAG,UAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,aAAa,EAAE,cAAc,EAAE,mBAAmB,EAAE,UAAU,EAAG;QACvJ,IAAI;YACA,MAAM,iBAAiB;gBACnB,SAAS;gBACT,UAAU,sBAAsB;gBAChC,OAAO,oBAAoB;gBAC3B,UAAU,0BAA0B;gBACpC;YACJ;YACA,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,WAAW,CAAC;gBACvB;gBACA;YACJ;QACJ,EACA,OAAO,OAAO;YACV,+CAA+C;YAC/C,8LAAA,CAAA,SAAM,CAAC,KAAK,CAAC;QACjB;IACJ","ignoreList":[0]}},
    {"offset": {"line": 1900, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1906, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/data/api/externalAuth/externalAuth.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { ExternalAuthError, SandboxMaximumThresholdReachedError, DynamicError } from '@dynamic-labs/utils';\nimport '@dynamic-labs/sdk-api-core';\nimport { logger } from '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport 'react';\nimport '@dynamic-labs/wallet-book';\nimport '../../../utils/constants/colors.js';\nimport '../../../utils/constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport { storeAuthTokenAndUser } from '../../../store/state/user/storeAuthTokenAndUser/storeAuthTokenAndUser.js';\nimport '../../../store/state/user/user.js';\nimport { sdkApi } from '../api.js';\n\nconst externalAuthSignin = (_a) => __awaiter(void 0, [_a], void 0, function* ({ environmentId, externalJwt, sessionPublicKey, }) {\n    try {\n        const response = yield sdkApi().externalAuthSignin({\n            environmentId,\n            externalAuthSigninRequest: {\n                jwt: externalJwt,\n                sessionPublicKey,\n            },\n        });\n        return storeAuthTokenAndUser(response);\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error('Error signing in with external JWT', data);\n        if (data.code === 'invalid_external_auth') {\n            throw new ExternalAuthError(data.code);\n        }\n        if (data.error.code === 'sandbox_maximum_threshold_reached') {\n            throw new SandboxMaximumThresholdReachedError(data.error.message);\n        }\n        throw new DynamicError(data.error);\n    }\n});\nconst externalAuthVerify = (_b) => __awaiter(void 0, [_b], void 0, function* ({ environmentId, externalJwt, }) {\n    try {\n        const response = yield sdkApi().externalAuthVerify({\n            environmentId,\n            externalAuthSigninRequest: {\n                jwt: externalJwt,\n            },\n        });\n        return storeAuthTokenAndUser(response);\n    }\n    catch (e) {\n        const data = yield e.json();\n        logger.error('Error verifying external JWT', data);\n        if (data.code === 'invalid_external_auth') {\n            throw new ExternalAuthError(data.code);\n        }\n        if (data.error.code === 'sandbox_maximum_threshold_reached') {\n            throw new SandboxMaximumThresholdReachedError(data.error.message);\n        }\n        throw new DynamicError(data.error);\n    }\n});\n\nexport { externalAuthSignin, externalAuthVerify };\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAFA;;;;;;;;;;;;;;;;;;AAmBA,MAAM,qBAAqB,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;QAAC;KAAG,EAAE,KAAK,GAAG,UAAW,EAAE,aAAa,EAAE,WAAW,EAAE,gBAAgB,EAAG;QAC3H,IAAI;YACA,MAAM,WAAW,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,kBAAkB,CAAC;gBAC/C;gBACA,2BAA2B;oBACvB,KAAK;oBACL;gBACJ;YACJ;YACA,OAAO,CAAA,GAAA,sPAAA,CAAA,wBAAqB,AAAD,EAAE;QACjC,EACA,OAAO,GAAG;YACN,MAAM,OAAO,MAAM,EAAE,IAAI;YACzB,8LAAA,CAAA,SAAM,CAAC,KAAK,CAAC,sCAAsC;YACnD,IAAI,KAAK,IAAI,KAAK,yBAAyB;gBACvC,MAAM,IAAI,mLAAA,CAAA,oBAAiB,CAAC,KAAK,IAAI;YACzC;YACA,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,qCAAqC;gBACzD,MAAM,IAAI,qMAAA,CAAA,sCAAmC,CAAC,KAAK,KAAK,CAAC,OAAO;YACpE;YACA,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,KAAK,KAAK;QACrC;IACJ;AACA,MAAM,qBAAqB,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;QAAC;KAAG,EAAE,KAAK,GAAG,UAAW,EAAE,aAAa,EAAE,WAAW,EAAG;QACzG,IAAI;YACA,MAAM,WAAW,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAM,AAAD,IAAI,kBAAkB,CAAC;gBAC/C;gBACA,2BAA2B;oBACvB,KAAK;gBACT;YACJ;YACA,OAAO,CAAA,GAAA,sPAAA,CAAA,wBAAqB,AAAD,EAAE;QACjC,EACA,OAAO,GAAG;YACN,MAAM,OAAO,MAAM,EAAE,IAAI;YACzB,8LAAA,CAAA,SAAM,CAAC,KAAK,CAAC,gCAAgC;YAC7C,IAAI,KAAK,IAAI,KAAK,yBAAyB;gBACvC,MAAM,IAAI,mLAAA,CAAA,oBAAiB,CAAC,KAAK,IAAI;YACzC;YACA,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,qCAAqC;gBACzD,MAAM,IAAI,qMAAA,CAAA,sCAAmC,CAAC,KAAK,KAAK,CAAC,OAAO;YACpE;YACA,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,KAAK,KAAK;QACrC;IACJ","ignoreList":[0]}},
    {"offset": {"line": 1996, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}