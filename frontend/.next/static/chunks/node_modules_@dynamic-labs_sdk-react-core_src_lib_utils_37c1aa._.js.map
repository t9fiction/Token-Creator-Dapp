{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/constants/colors.js"],"sourcesContent":["'use client'\nimport { convertHexToRGBA } from '../functions/convertHexToRGBA/convertHexToRGBA.js';\n\nconst TEXT_LIGHT_PRIMARY = '#363A46';\nconvertHexToRGBA(TEXT_LIGHT_PRIMARY, 0.65);\nconvertHexToRGBA(TEXT_LIGHT_PRIMARY, 0.4);\nconst TEXT_DARK_BASE = '#F5F8FF';\nconvertHexToRGBA(TEXT_DARK_BASE, 0.95);\nconvertHexToRGBA(TEXT_DARK_BASE, 0.55);\nconvertHexToRGBA(TEXT_DARK_BASE, 0.4);\n\nexport { TEXT_LIGHT_PRIMARY };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA,MAAM,qBAAqB;AAC3B,CAAA,GAAA,wOAAA,CAAA,mBAAgB,AAAD,EAAE,oBAAoB;AACrC,CAAA,GAAA,wOAAA,CAAA,mBAAgB,AAAD,EAAE,oBAAoB;AACrC,MAAM,iBAAiB;AACvB,CAAA,GAAA,wOAAA,CAAA,mBAAgB,AAAD,EAAE,gBAAgB;AACjC,CAAA,GAAA,wOAAA,CAAA,mBAAgB,AAAD,EAAE,gBAAgB;AACjC,CAAA,GAAA,wOAAA,CAAA,mBAAgB,AAAD,EAAE,gBAAgB","ignoreList":[0]}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/constants/values.js"],"sourcesContent":["'use client'\nimport { ChainEnum } from '@dynamic-labs/sdk-api-core';\n\nconst DEFAULT_NUMBER_OF_WALLETS_TO_SHOW = 10;\n// references:\n// https://www.iana.org/assignments/jwt/jwt.xhtml#claims\n// https://github.com/jaredhanson/id-blockchain-claims-in-jwt/blob/main/draft.md\nconst ChainEnumToVerifiedCredentialName = {\n    ALGO: 'algorand',\n    BTC: 'bip122', // see: https://namespaces.chainagnostic.org/bip122/caip2\n    COSMOS: 'cosmos',\n    ETH: 'eip155',\n    EVM: 'eip155',\n    FLOW: 'flow',\n    SOL: 'solana',\n    STARK: 'starknet',\n};\nconst VerifiedCredentialNameToChainEnum = {\n    algorand: ChainEnum.Algo,\n    bip122: ChainEnum.Btc,\n    cosmos: ChainEnum.Cosmos,\n    eip155: ChainEnum.Evm,\n    flow: ChainEnum.Flow,\n    solana: ChainEnum.Sol,\n    starknet: ChainEnum.Stark,\n};\nconst DYNAMIC_AUTH_COOKIE_NAME = 'DYNAMIC_JWT_TOKEN';\n\nexport { ChainEnumToVerifiedCredentialName, DEFAULT_NUMBER_OF_WALLETS_TO_SHOW, DYNAMIC_AUTH_COOKIE_NAME, VerifiedCredentialNameToChainEnum };\n"],"names":[],"mappings":";;;;;;AACA;AAAA;AADA;;AAGA,MAAM,oCAAoC;AAC1C,cAAc;AACd,wDAAwD;AACxD,gFAAgF;AAChF,MAAM,oCAAoC;IACtC,MAAM;IACN,KAAK;IACL,QAAQ;IACR,KAAK;IACL,KAAK;IACL,MAAM;IACN,KAAK;IACL,OAAO;AACX;AACA,MAAM,oCAAoC;IACtC,UAAU,wLAAA,CAAA,YAAS,CAAC,IAAI;IACxB,QAAQ,wLAAA,CAAA,YAAS,CAAC,GAAG;IACrB,QAAQ,wLAAA,CAAA,YAAS,CAAC,MAAM;IACxB,QAAQ,wLAAA,CAAA,YAAS,CAAC,GAAG;IACrB,MAAM,wLAAA,CAAA,YAAS,CAAC,IAAI;IACpB,QAAQ,wLAAA,CAAA,YAAS,CAAC,GAAG;IACrB,UAAU,wLAAA,CAAA,YAAS,CAAC,KAAK;AAC7B;AACA,MAAM,2BAA2B","ignoreList":[0]}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/constants/localStorage.js"],"sourcesContent":["'use client'\nconst AUTH_TOKEN = 'dynamic_authentication_token';\nconst AUTH_MIN_TOKEN = 'dynamic_min_authentication_token';\nconst AUTH_EXPIRES_AT = 'dynamic_auth_expires_at';\nconst LAST_USED_WALLET = 'dynamic_last_used_wallet';\nconst NONCE_STORAGE_KEY = 'dynamic_nonce';\nconst PRIMARY_WALLET_ID = 'dynamic_primary_wallet_id';\nconst WALLET_PICKER_SEARCH_KEY = 'dynamic_wallet_picker_search';\nconst NEWTOWEB3_WALLET_EXTENSION_FLAG_KEY = 'dynamic_newtoweb3_wallet_extension_installed';\nconst CONNECTED_WALLETS_INFO = 'dynamic_connected_wallets';\nconst CONNECTED_WALLET_NAME_SERVICE = 'dynamic_connected_wallet_ns';\nconst BRIDGE_ONBOARDING_COMPLETED = 'dynamic_bridge_onboarding_completed';\nconst DYNAMIC_CONTEXT_LAST_SESSION_SETTINGS = 'dynamic_context_session_settings';\nconst WAGMI_LAST_SESSION_SETTINGS = 'dynamic_wagmi_session_settings';\nconst EMBEDDED_WALLET_SESSION_SETTINGS = 'dynamic_embedded_wallet_session_settings';\nconst EMBEDDED_WALLET_SECURE_BANNER = 'dynamic_embedded_secure_banner';\nconst PHONE_INPUT_DEFAULT_COUNTRY = 'dynamic_phone_input_default_country';\nconst CAPTCHA_TOKEN = 'dynamic_captcha_token';\n/**\n * Used to identify the purpose of a signature after phantom redirects back to the app in mobile\n */\nconst PHANTOM_SIGNATURE_STATE = 'phantom_verification_type';\nconst STORE_STORAGE_KEY = 'dynamic_store';\n\nexport { AUTH_EXPIRES_AT, AUTH_MIN_TOKEN, AUTH_TOKEN, BRIDGE_ONBOARDING_COMPLETED, CAPTCHA_TOKEN, CONNECTED_WALLETS_INFO, CONNECTED_WALLET_NAME_SERVICE, DYNAMIC_CONTEXT_LAST_SESSION_SETTINGS, EMBEDDED_WALLET_SECURE_BANNER, EMBEDDED_WALLET_SESSION_SETTINGS, LAST_USED_WALLET, NEWTOWEB3_WALLET_EXTENSION_FLAG_KEY, NONCE_STORAGE_KEY, PHANTOM_SIGNATURE_STATE, PHONE_INPUT_DEFAULT_COUNTRY, PRIMARY_WALLET_ID, STORE_STORAGE_KEY, WAGMI_LAST_SESSION_SETTINGS, WALLET_PICKER_SEARCH_KEY };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA,MAAM,aAAa;AACnB,MAAM,iBAAiB;AACvB,MAAM,kBAAkB;AACxB,MAAM,mBAAmB;AACzB,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB;AAC1B,MAAM,2BAA2B;AACjC,MAAM,sCAAsC;AAC5C,MAAM,yBAAyB;AAC/B,MAAM,gCAAgC;AACtC,MAAM,8BAA8B;AACpC,MAAM,wCAAwC;AAC9C,MAAM,8BAA8B;AACpC,MAAM,mCAAmC;AACzC,MAAM,gCAAgC;AACtC,MAAM,8BAA8B;AACpC,MAAM,gBAAgB;AACtB;;CAEC,GACD,MAAM,0BAA0B;AAChC,MAAM,oBAAoB","ignoreList":[0]}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/constants/fields.js"],"sourcesContent":["'use client'\nconst PHONE_NUMBER_REGEX = /^(\\+[1-9]\\d{1,14})?$/;\n\nexport { PHONE_NUMBER_REGEX };\n"],"names":[],"mappings":";;;AAAA;AACA,MAAM,qBAAqB","ignoreList":[0]}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/constants/errors.js"],"sourcesContent":["'use client'\n// HEADLESS ERRORS\nconst ACTIVE_SESSION = 'session_active';\nconst ERROR_SENDING_CODE = 'error_sending_code';\nconst ERROR_PROCESSING_REVEAL_REQUEST = 'error_processing_reveal_request';\nconst INVALID_REQUEST = 'invalid_request';\nconst INVALID_WALLET_DATA = 'invalid_wallet';\nconst SECURE_ENCLAVE_PROVIDER_NOT_ENABLED = 'secure_enclave_provider_not_enabled';\nconst USER_NOT_LOGGED_IN = 'user_not_logged_in';\nconst CODE_SENT = 'code_sent';\nconst SESSION_CREATED = 'session_created';\nconst SESSION_RESTORED = 'session_restored';\nconst ACCESS_BLOCKED_ERROR_CODE = 451;\n\nexport { ACCESS_BLOCKED_ERROR_CODE, ACTIVE_SESSION, CODE_SENT, ERROR_PROCESSING_REVEAL_REQUEST, ERROR_SENDING_CODE, INVALID_REQUEST, INVALID_WALLET_DATA, SECURE_ENCLAVE_PROVIDER_NOT_ENABLED, SESSION_CREATED, SESSION_RESTORED, USER_NOT_LOGGED_IN };\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AACA,kBAAkB;AAClB,MAAM,iBAAiB;AACvB,MAAM,qBAAqB;AAC3B,MAAM,kCAAkC;AACxC,MAAM,kBAAkB;AACxB,MAAM,sBAAsB;AAC5B,MAAM,sCAAsC;AAC5C,MAAM,qBAAqB;AAC3B,MAAM,YAAY;AAClB,MAAM,kBAAkB;AACxB,MAAM,mBAAmB;AACzB,MAAM,4BAA4B","ignoreList":[0]}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/constants/onrampProviders.js"],"sourcesContent":["'use client'\nconst ONRAMP_PROVIDERS = ['banxa'];\n\nexport { ONRAMP_PROVIDERS };\n"],"names":[],"mappings":";;;AAAA;AACA,MAAM,mBAAmB;IAAC;CAAQ","ignoreList":[0]}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/constants/erc20/abi.js"],"sourcesContent":["'use client'\n/* eslint-disable max-len */\nconst erc20Abi = [\n    {\n        constant: true,\n        inputs: [],\n        name: 'name',\n        outputs: [\n            {\n                name: '',\n                type: 'string',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_spender',\n                type: 'address',\n            },\n            {\n                name: '_value',\n                type: 'uint256',\n            },\n        ],\n        name: 'approve',\n        outputs: [\n            {\n                name: '',\n                type: 'bool',\n            },\n        ],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'totalSupply',\n        outputs: [\n            {\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_from',\n                type: 'address',\n            },\n            {\n                name: '_to',\n                type: 'address',\n            },\n            {\n                name: '_value',\n                type: 'uint256',\n            },\n        ],\n        name: 'transferFrom',\n        outputs: [\n            {\n                name: '',\n                type: 'bool',\n            },\n        ],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'decimals',\n        outputs: [\n            {\n                name: '',\n                type: 'uint8',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_owner',\n                type: 'address',\n            },\n        ],\n        name: 'balanceOf',\n        outputs: [\n            {\n                name: 'balance',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'symbol',\n        outputs: [\n            {\n                name: '',\n                type: 'string',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_to',\n                type: 'address',\n            },\n            {\n                name: '_value',\n                type: 'uint256',\n            },\n        ],\n        name: 'transfer',\n        outputs: [\n            {\n                name: '',\n                type: 'bool',\n            },\n        ],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_owner',\n                type: 'address',\n            },\n            {\n                name: '_spender',\n                type: 'address',\n            },\n        ],\n        name: 'allowance',\n        outputs: [\n            {\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        payable: true,\n        stateMutability: 'payable',\n        type: 'fallback',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'Approval',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'Transfer',\n        type: 'event',\n    },\n];\n\nexport { erc20Abi };\n"],"names":[],"mappings":";;;AAAA;AACA,0BAA0B,GAC1B,MAAM,WAAW;IACb;QACI,UAAU;QACV,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YACL;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,SAAS;QACT,iBAAiB;QACjB,MAAM;IACV;IACA;QACI,UAAU;QACV,QAAQ;YACJ;gBACI,MAAM;gBACN,MAAM;YACV;YACA;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,MAAM;QACN,SAAS;YACL;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,SAAS;QACT,iBAAiB;QACjB,MAAM;IACV;IACA;QACI,UAAU;QACV,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YACL;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,SAAS;QACT,iBAAiB;QACjB,MAAM;IACV;IACA;QACI,UAAU;QACV,QAAQ;YACJ;gBACI,MAAM;gBACN,MAAM;YACV;YACA;gBACI,MAAM;gBACN,MAAM;YACV;YACA;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,MAAM;QACN,SAAS;YACL;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,SAAS;QACT,iBAAiB;QACjB,MAAM;IACV;IACA;QACI,UAAU;QACV,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YACL;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,SAAS;QACT,iBAAiB;QACjB,MAAM;IACV;IACA;QACI,UAAU;QACV,QAAQ;YACJ;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,MAAM;QACN,SAAS;YACL;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,SAAS;QACT,iBAAiB;QACjB,MAAM;IACV;IACA;QACI,UAAU;QACV,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YACL;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,SAAS;QACT,iBAAiB;QACjB,MAAM;IACV;IACA;QACI,UAAU;QACV,QAAQ;YACJ;gBACI,MAAM;gBACN,MAAM;YACV;YACA;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,MAAM;QACN,SAAS;YACL;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,SAAS;QACT,iBAAiB;QACjB,MAAM;IACV;IACA;QACI,UAAU;QACV,QAAQ;YACJ;gBACI,MAAM;gBACN,MAAM;YACV;YACA;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,MAAM;QACN,SAAS;YACL;gBACI,MAAM;gBACN,MAAM;YACV;SACH;QACD,SAAS;QACT,iBAAiB;QACjB,MAAM;IACV;IACA;QACI,SAAS;QACT,iBAAiB;QACjB,MAAM;IACV;IACA;QACI,WAAW;QACX,QAAQ;YACJ;gBACI,SAAS;gBACT,MAAM;gBACN,MAAM;YACV;YACA;gBACI,SAAS;gBACT,MAAM;gBACN,MAAM;YACV;YACA;gBACI,SAAS;gBACT,MAAM;gBACN,MAAM;YACV;SACH;QACD,MAAM;QACN,MAAM;IACV;IACA;QACI,WAAW;QACX,QAAQ;YACJ;gBACI,SAAS;gBACT,MAAM;gBACN,MAAM;YACV;YACA;gBACI,SAAS;gBACT,MAAM;gBACN,MAAM;YACV;YACA;gBACI,SAAS;gBACT,MAAM;gBACN,MAAM;YACV;SACH;QACD,MAAM;QACN,MAAM;IACV;CACH","ignoreList":[0]}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/constants/sessionStorage.js"],"sourcesContent":["'use client'\nconst SECURE_ENCLAVE_WALLET_SESSION_KEYS = 'dynamic_secure_enclave_session_keys';\nconst SECURE_ENCLAVE_WALLET_SESSION_KEYS_STORAGE_OPTIONS = {\n    priority: ['secureStorage', 'localStorage'],\n};\n\nexport { SECURE_ENCLAVE_WALLET_SESSION_KEYS, SECURE_ENCLAVE_WALLET_SESSION_KEYS_STORAGE_OPTIONS };\n"],"names":[],"mappings":";;;;AAAA;AACA,MAAM,qCAAqC;AAC3C,MAAM,qDAAqD;IACvD,UAAU;QAAC;QAAiB;KAAe;AAC/C","ignoreList":[0]}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/validations/validateTurnkeyProviderEnabled/validateTurnkeyProviderEnabled.js"],"sourcesContent":["'use client'\nimport { DynamicError } from '@dynamic-labs/utils';\nimport { isTurnkeyEnabled } from '../../functions/isTurnkeyEnabled/isTurnkeyEnabled.js';\nimport { SECURE_ENCLAVE_PROVIDER_NOT_ENABLED } from '../../constants/errors.js';\n\nconst validateTurnkeyProviderEnabled = (projectSettings) => {\n    const isTurnkeyProviderEnabled = isTurnkeyEnabled(projectSettings);\n    if (!isTurnkeyProviderEnabled) {\n        throw new DynamicError('No embedded wallet is enabled. Go to the dashboard and make sure to have both Embedded wallets and at least one EVM network enabled. Also, check if EthereumWalletConnectors is in the DynamicContextProvider > settings > walletConnectors.', SECURE_ENCLAVE_PROVIDER_NOT_ENABLED);\n    }\n    return isTurnkeyProviderEnabled;\n};\n\nexport { validateTurnkeyProviderEnabled };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AAFA;AADA;;;;AAKA,MAAM,iCAAiC,CAAC;IACpC,MAAM,2BAA2B,CAAA,GAAA,wOAAA,CAAA,mBAAgB,AAAD,EAAE;IAClD,IAAI,CAAC,0BAA0B;QAC3B,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,gPAAgP,0MAAA,CAAA,sCAAmC;IAC9S;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/validations/validateMPCProviderEnabled/validateMPCProviderEnabled.js"],"sourcesContent":["'use client'\nimport { isCoinbaseWaasEnabled } from '../../functions/isCoinbaseWaasEnabled/isCoinbaseWaasEnabled.js';\n\nconst validateMPCProviderEnabled = (projectSettings) => {\n    if (!projectSettings) {\n        throw new Error('Project settings are missing');\n    }\n    const isCoinbaseWaaSProviderEnabled = isCoinbaseWaasEnabled(projectSettings);\n    if (!isCoinbaseWaaSProviderEnabled) {\n        throw new Error('No embedded wallet is enabled. Go to the dashboard and make sure to have both Embedded wallets and at least one EVM network enabled. Also, check if EthereumWalletConnectors is in the DynamicContextProvider > settings > walletConnectors.');\n    }\n};\n\nexport { validateMPCProviderEnabled };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA,MAAM,6BAA6B,CAAC;IAChC,IAAI,CAAC,iBAAiB;QAClB,MAAM,IAAI,MAAM;IACpB;IACA,MAAM,gCAAgC,CAAA,GAAA,kPAAA,CAAA,wBAAqB,AAAD,EAAE;IAC5D,IAAI,CAAC,+BAA+B;QAChC,MAAM,IAAI,MAAM;IACpB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}