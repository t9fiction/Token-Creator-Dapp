{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js"],"sourcesContent":["'use client'\nconst iframeContainerId = 'dyn-secure-enclave-container-id';\nconst iframeElementId = 'dyn-secure-enclave-element-id';\nconst revealIframeContainerId = 'dyn-secure-enclave-export-container-id';\nconst revealIframeElementId = 'dyn-secure-enclave-export-element-id';\nvar EmbeddedWalletVersion;\n(function (EmbeddedWalletVersion) {\n    EmbeddedWalletVersion[\"V1\"] = \"V1\";\n    EmbeddedWalletVersion[\"V2\"] = \"V2\";\n})(EmbeddedWalletVersion || (EmbeddedWalletVersion = {}));\n\nexport { EmbeddedWalletVersion, iframeContainerId, iframeElementId, revealIframeContainerId, revealIframeElementId };\n"],"names":[],"mappings":";;;;;;;AAAA;AACA,MAAM,oBAAoB;AAC1B,MAAM,kBAAkB;AACxB,MAAM,0BAA0B;AAChC,MAAM,wBAAwB;AAC9B,IAAI;AACJ,CAAC,SAAU,qBAAqB;IAC5B,qBAAqB,CAAC,KAAK,GAAG;IAC9B,qBAAqB,CAAC,KAAK,GAAG;AAClC,CAAC,EAAE,yBAAyB,CAAC,wBAAwB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/useTurnkey/useTurnkey.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../../../_virtual/_tslib.js';\nimport { useCallback } from 'react';\nimport { EmbeddedWalletVersionEnum, JwtVerifiedCredentialFormatEnum } from '@dynamic-labs/sdk-api-core';\nimport '../../../../../context/DynamicContext/DynamicContext.js';\nimport { logger } from '../../../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport { useViewContext } from '../../../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport '@dynamic-labs/utils';\nimport '../../../../constants/colors.js';\nimport '../../../../constants/values.js';\nimport '../../../../../store/state/loadingAndLifecycle.js';\nimport '../../../../../shared/consts/index.js';\nimport { dynamicEvents } from '../../../../../events/dynamicEvents.js';\nimport '../../../../../context/CaptchaContext/CaptchaContext.js';\nimport '../../../../../context/ErrorContext/ErrorContext.js';\nimport { findEmbeddedWalletFromVerifiedCredentials } from '../../../../functions/findEmbeddedWalletFromVerifiedCredentials/findEmbeddedWalletFromVerifiedCredentials.js';\nimport { findTurnkeyWalletByChain } from '../../../../functions/findTurnkeyWallet/findTurnkeyWallet.js';\nimport '@dynamic-labs/multi-wallet';\nimport 'react-international-phone';\nimport { getUserWalletsFromVerifiedCredentials } from '../../../../functions/getUserWalletsFromVerifiedCredentials/getUserWalletsFromVerifiedCredentials.js';\nimport '../../../../../config/ApiEndpoint.js';\nimport '../../../../../store/state/user/user.js';\nimport '../../../../../locale/locale.js';\nimport { getUserVerifiedCredentialType } from '../../../../functions/getUserVerifiedCredentialType/getUserVerifiedCredentialType.js';\nimport '../../../../../store/state/projectSettings/projectSettings.js';\nimport '../../../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport '../../../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../../../context/UserWalletsContext/UserWalletsContext.js';\nimport { USER_NOT_LOGGED_IN } from '../../../../constants/errors.js';\nimport '../../../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport { useCreateDynamicEmbeddedWalletMutation } from '../../../useCreateDynamicEmbeddedWalletMutation/useCreateDynamicEmbeddedWalletMutation.js';\nimport '../../../../../context/WalletContext/WalletContext.js';\nimport { useSmartWallets } from '../../../useSmartWallets/useSmartWallets.js';\nimport { findPrimaryEmbeddedChain } from '../../../../../views/Passkey/utils/findPrimaryEmbeddedChain/findPrimaryEmbeddedChain.js';\nimport '../constants.js';\nimport { findPasskeyEmailWalletConnector } from '../../../../../views/Passkey/utils/findPasskeyEmailWalletConnector/findPasskeyEmailWalletConnector.js';\nimport { findSmartWallet, initializeSmartWallet } from '../../../useWalletConnectors/utils/smartWallet/smartWallet.js';\nimport '../../../../../context/ThemeContext/ThemeContext.js';\nimport '../../../useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport '@dynamic-labs/types';\nimport '../../../../../context/LoadingContext/LoadingContext.js';\nimport 'yup';\nimport '../../../../../context/MockContext/MockContext.js';\nimport '../../../../../views/CollectUserDataView/useFields.js';\nimport '../../../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../../../../../store/state/environmentId.js';\nimport '../../../../../store/state/walletConnectorOptions.js';\nimport 'react-i18next';\nimport '../../../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../../../components/Alert/Alert.js';\nimport '../../../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../../../components/IconButton/IconButton.js';\nimport '../../../../../components/InlineWidget/InlineWidget.js';\nimport '../../../../../components/Input/Input.js';\nimport '../../../../../components/IsBrowser/IsBrowser.js';\nimport '../../../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../../../components/Popper/Popper/Popper.js';\nimport '../../../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../../../context/FooterAnimationContext/index.js';\nimport '../../../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../../../context/PasskeyContext/PasskeyContext.js';\nimport '../../../../../store/state/sendBalances.js';\nimport '../../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../../../../index.js';\nimport '../../../../../store/state/tokenBalances.js';\nimport '../../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\nimport { useInternalDynamicContext } from '../../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';\n\n// Hook exposed to customers and used internally to trigger embedded wallet creation\nconst useTurnkey = () => {\n    const { projectSettings, setPrimaryWalletId, walletConnectorOptions, setShowAuthFlow, environmentId, user, primaryWallet, } = useInternalDynamicContext();\n    const { setView } = useViewContext();\n    const { createDynamicEmbeddedWalletMutation } = useCreateDynamicEmbeddedWalletMutation();\n    const { getEOAWallet } = useSmartWallets();\n    const startHeadlessEmbeddedWalletCreationFlow = useCallback((chains, options) => __awaiter(void 0, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            // register the event listeners before calling create embedded wallet\n            // as the event might fire before the listeners are registered.\n            dynamicEvents.once('embeddedWalletCreated', (wallet) => {\n                resolve(wallet);\n            });\n            dynamicEvents.once('embeddedWalletFailed', (error) => reject(error));\n            createDynamicEmbeddedWalletMutation({\n                chains,\n                environmentId,\n                options,\n                walletConnectorOptions,\n                withAuthenticator: false,\n            })\n                .then(() => {\n                setShowAuthFlow(false, { performMultiWalletChecks: false }); // close email otp pin modal\n            })\n                .catch((error) => {\n                reject(error);\n            });\n        });\n    }), [\n        createDynamicEmbeddedWalletMutation,\n        environmentId,\n        walletConnectorOptions,\n        setShowAuthFlow,\n    ]);\n    const startPasskeyEmbeddedWalletCreationFlow = useCallback((chains) => __awaiter(void 0, void 0, void 0, function* () {\n        setShowAuthFlow(true, {\n            ignoreIfIsEmbeddedWidget: false,\n            performMultiWalletChecks: false,\n        });\n        setView('passkey-intro', { chains });\n        return new Promise((resolve, reject) => {\n            dynamicEvents.once('embeddedWalletCreated', (wallet) => resolve(wallet));\n            dynamicEvents.once('embeddedWalletFailed', (error) => {\n                // when creating a passkey, if user cancels the passkey modal more than once\n                // it will throw this DOMException, but we don't want to let user to have access\n                // to the app before they've a passkey correctly setup\n                if (error instanceof DOMException &&\n                    error.name === 'NotAllowedError') {\n                    logger.error('User cancelled the passkey creation.', error);\n                    return;\n                }\n                reject(error);\n            });\n        });\n    }), [setShowAuthFlow, setView]);\n    const returnEmbeddedWallet = useCallback((embeddedWalletVerifiedCredential) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a, _b;\n        const { chain } = embeddedWalletVerifiedCredential;\n        const turnkeyWallet = findTurnkeyWalletByChain(walletConnectorOptions, chain);\n        let newPrimaryWalletId = null;\n        // if user already has embedded wallet, set it as primary wallet\n        if (user) {\n            (_a = turnkeyWallet === null || turnkeyWallet === void 0 ? void 0 : turnkeyWallet.walletConnector) === null || _a === void 0 ? void 0 : _a.setVerifiedCredentials(user.verifiedCredentials);\n            const smartWallet = findSmartWallet(embeddedWalletVerifiedCredential, user.verifiedCredentials);\n            if (smartWallet) {\n                yield initializeSmartWallet({\n                    account: smartWallet,\n                    primaryWalletId: smartWallet.id,\n                    verifiedCredentials: user.verifiedCredentials,\n                    walletConnectorOptions,\n                });\n                newPrimaryWalletId = smartWallet.id;\n            }\n            else {\n                newPrimaryWalletId = embeddedWalletVerifiedCredential.id;\n            }\n        }\n        if (newPrimaryWalletId)\n            setPrimaryWalletId(newPrimaryWalletId);\n        /** It's not authenticated if it still hasn't created a passkey */\n        const isAuthenticated = Boolean((_b = embeddedWalletVerifiedCredential.walletProperties) === null || _b === void 0 ? void 0 : _b.isAuthenticatorAttached);\n        if (!(turnkeyWallet === null || turnkeyWallet === void 0 ? void 0 : turnkeyWallet.walletConnector)) {\n            throw new Error('Could not find the embedded wallet connector');\n        }\n        const connector = turnkeyWallet.walletConnector;\n        const passkeyWallet = connector.createWallet({\n            address: (yield connector.getAddress()) || '',\n            chain: connector.connectedChain,\n            connector,\n            id: embeddedWalletVerifiedCredential.id,\n            isAuthenticated,\n            key: embeddedWalletVerifiedCredential.walletName || connector.key || '',\n        });\n        return Promise.resolve(passkeyWallet);\n    }), [setPrimaryWalletId, walletConnectorOptions, user]);\n    const createTurnkeyWallet = useCallback((chains, options) => __awaiter(void 0, void 0, void 0, function* () {\n        var _c, _d, _e, _f, _g, _h;\n        if (!user) {\n            throw new Error(USER_NOT_LOGGED_IN);\n        }\n        const isManualMode = ((_c = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _c === void 0 ? void 0 : _c.automaticEmbeddedWalletCreation) === false;\n        const shouldCreateV2WalletsByDefault = ((_d = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _d === void 0 ? void 0 : _d.defaultWalletVersion) ===\n            EmbeddedWalletVersionEnum.V2;\n        const primaryChain = findPrimaryEmbeddedChain(projectSettings);\n        // if embedded wallet already exists\n        // get the one with the primary chain if `chains` is undefined\n        const embeddedWalletVerifiedCredential = findEmbeddedWalletFromVerifiedCredentials(user, chains !== null && chains !== void 0 ? chains : [primaryChain]);\n        const userWalletsCredentials = getUserWalletsFromVerifiedCredentials(user);\n        // If the user doesn't have a wallet, or if the customer is in Manual\n        // Mode, we should attempt to create a new wallet. Note that if in manual\n        // mode, the check for the existance of an embedded wallet was arbitrarily\n        // added as a safeguard given the pre-existing condition we're overriding.\n        if (!(userWalletsCredentials === null || userWalletsCredentials === void 0 ? void 0 : userWalletsCredentials.length) ||\n            (!embeddedWalletVerifiedCredential && isManualMode)) {\n            const hasEmailVC = getUserVerifiedCredentialType(user, JwtVerifiedCredentialFormatEnum.Email);\n            if ((!((_e = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _e === void 0 ? void 0 : _e.forceAuthenticatorAtSignup) &&\n                hasEmailVC) ||\n                (options === null || options === void 0 ? void 0 : options.webAuthnAttestation) ||\n                shouldCreateV2WalletsByDefault) {\n                // create embedded wallet fully headless\n                return startHeadlessEmbeddedWalletCreationFlow(chains, options);\n            }\n            else {\n                // show the passkey view to create an embedded wallet\n                return startPasskeyEmbeddedWalletCreationFlow(chains);\n            }\n        }\n        else {\n            // the pregenerated wallet must have been created at this point in the\n            // backend if this called as part of a new user sign up.\n            if (embeddedWalletVerifiedCredential &&\n                user.newUser &&\n                ((_f = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _f === void 0 ? void 0 : _f.automaticEmbeddedWalletCreation)) {\n                const walletConnector = findPasskeyEmailWalletConnector(walletConnectorOptions, primaryChain);\n                if (!walletConnector) {\n                    throw new Error('Could not find the embedded wallet connector');\n                }\n                const wallet = walletConnector.createWallet({\n                    address: (yield walletConnector.getAddress()) || '',\n                    chain: walletConnector.connectedChain,\n                    connector: walletConnector,\n                    id: embeddedWalletVerifiedCredential.id,\n                    isAuthenticated: Boolean((_g = embeddedWalletVerifiedCredential === null || embeddedWalletVerifiedCredential === void 0 ? void 0 : embeddedWalletVerifiedCredential.walletProperties) === null || _g === void 0 ? void 0 : _g.isAuthenticatorAttached),\n                    key: (_h = embeddedWalletVerifiedCredential.walletName) !== null && _h !== void 0 ? _h : walletConnector.key,\n                });\n                setPrimaryWalletId(embeddedWalletVerifiedCredential.id);\n                dynamicEvents.emit('embeddedWalletCreated', wallet, embeddedWalletVerifiedCredential, user);\n            }\n        }\n        setShowAuthFlow(false, { performMultiWalletChecks: false });\n        // if user logged in with MM for example, just continue the flow\n        if (!embeddedWalletVerifiedCredential) {\n            throw new Error('Primary wallet is not an embedded wallet');\n        }\n        // if user already has embedded wallet, returns it\n        return returnEmbeddedWallet(embeddedWalletVerifiedCredential);\n    }), [\n        user,\n        projectSettings,\n        primaryWallet,\n        getEOAWallet,\n        setShowAuthFlow,\n        returnEmbeddedWallet,\n        startHeadlessEmbeddedWalletCreationFlow,\n        startPasskeyEmbeddedWalletCreationFlow,\n        walletConnectorOptions,\n        setPrimaryWalletId,\n    ]);\n    return {\n        createTurnkeyWallet,\n    };\n};\n\nexport { useTurnkey };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/useSecureEnclaveEmbeddedWallet.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../../_virtual/_tslib.js';\nimport { useCallback, useMemo } from 'react';\nimport { JwtVerifiedCredentialFormatEnum } from '@dynamic-labs/sdk-api-core';\nimport { DynamicError, EmbeddedWalletException, StorageService } from '@dynamic-labs/utils';\nimport { isSessionKeyCompatibleWalletConnector } from '@dynamic-labs/wallet-connector-core';\nimport '../../../../context/DynamicContext/DynamicContext.js';\nimport { logger } from '../../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport 'react/jsx-runtime';\nimport '../../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport { EMBEDDED_WALLET_SESSION_SETTINGS } from '../../../constants/localStorage.js';\nimport '../../../constants/colors.js';\nimport '../../../constants/values.js';\nimport '../../../../store/state/loadingAndLifecycle.js';\nimport '../../../../shared/consts/index.js';\nimport '../../../../events/dynamicEvents.js';\nimport '../../../../context/CaptchaContext/CaptchaContext.js';\nimport '../../../../context/ErrorContext/ErrorContext.js';\nimport { findEmbeddedWalletFromVerifiedCredentials } from '../../../functions/findEmbeddedWalletFromVerifiedCredentials/findEmbeddedWalletFromVerifiedCredentials.js';\nimport { findTurnkeyWalletByPrimaryChain } from '../../../functions/findTurnkeyWallet/findTurnkeyWallet.js';\nimport '@dynamic-labs/multi-wallet';\nimport 'react-international-phone';\nimport { getUserWalletsFromVerifiedCredentials } from '../../../functions/getUserWalletsFromVerifiedCredentials/getUserWalletsFromVerifiedCredentials.js';\nimport { addPasskeyIdentifierToWalletConnector } from '../../../functions/addPasskeyIdentifierToWalletConnector/addPasskeyIdentifierToWalletConnector.js';\nimport '../../../../config/ApiEndpoint.js';\nimport { getCreateEmbeddedWalletAccountRequest, createEmbeddedWalletAccount, completePasskeyRecovery, getUserPasskeys, initEmbeddedWalletSession } from '../../../../data/api/embeddedWallets/embeddedWallets.js';\nimport '../../../../store/state/user/user.js';\nimport '../../../../locale/locale.js';\nimport { refreshUserJwt } from '../../../../data/api/user/user.js';\nimport { getUserVerifiedCredentialType } from '../../../functions/getUserVerifiedCredentialType/getUserVerifiedCredentialType.js';\nimport { hasEmbeddedWallet } from '../../../functions/hasEmbeddedWallet/hasEmbeddedWallet.js';\nimport { getEmbeddedWalletAuthHandler } from '../../../functions/getEmbeddedWalletAuthHandler/getEmbeddedWalletAuthHandler.js';\nimport { getEmbeddedWalletSessionExpiration } from '../../../functions/getEmbeddedWalletSessionExpiration/getEmbeddedWalletSessionExpiration.js';\nimport '../../../../store/state/projectSettings/projectSettings.js';\nimport '../../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport '../../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../../context/UserWalletsContext/UserWalletsContext.js';\nimport { USER_NOT_LOGGED_IN, ACTIVE_SESSION, SESSION_RESTORED, INVALID_REQUEST, INVALID_WALLET_DATA, SESSION_CREATED, ERROR_SENDING_CODE, CODE_SENT } from '../../../constants/errors.js';\nimport '../../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport { useElementById } from '../../useElementById/useElementById.js';\nimport { findPrimaryEmbeddedChain } from '../../../../views/Passkey/utils/findPrimaryEmbeddedChain/findPrimaryEmbeddedChain.js';\nimport { useWalletContext } from '../../../../context/WalletContext/WalletContext.js';\nimport { useIsTurnkeyWallet } from '../../useIsTurnkeyWallet/useIsTurnkeyWallet.js';\nimport { cleanupExport, initExport, exportCredential } from '../../../../views/EmbeddedReveal/utils/turnkeyExport/turnkeyExport.js';\nimport { canRestoreEmbeddedWalletSession, restoreEmbeddedWalletSession } from '../../../../views/Passkey/utils/passkeyRecovery/passkeyRecovery.js';\nimport { validateTurnkeyProviderEnabled } from '../../../validations/validateTurnkeyProviderEnabled/validateTurnkeyProviderEnabled.js';\nimport { usePasskeyRecovery } from '../../usePasskeyRecovery/usePasskeyRecovery.js';\nimport { useSmartWallets } from '../../useSmartWallets/useSmartWallets.js';\nimport { EmbeddedWalletVersion, iframeContainerId, iframeElementId, revealIframeElementId, revealIframeContainerId } from './constants.js';\nimport { useTurnkey } from './useTurnkey/useTurnkey.js';\nimport '../../../../context/ThemeContext/ThemeContext.js';\nimport '../../useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport '@dynamic-labs/types';\nimport '../../../../context/LoadingContext/LoadingContext.js';\nimport 'yup';\nimport '../../../../context/MockContext/MockContext.js';\nimport '../../../../views/CollectUserDataView/useFields.js';\nimport '../../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../../../../store/state/environmentId.js';\nimport '../../../../store/state/walletConnectorOptions.js';\nimport 'react-i18next';\nimport '../../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../../components/Alert/Alert.js';\nimport '../../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../../components/IconButton/IconButton.js';\nimport '../../../../components/InlineWidget/InlineWidget.js';\nimport '../../../../components/Input/Input.js';\nimport '../../../../components/IsBrowser/IsBrowser.js';\nimport '../../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../../components/Popper/Popper/Popper.js';\nimport '../../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../../context/FooterAnimationContext/index.js';\nimport '../../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../../context/PasskeyContext/PasskeyContext.js';\nimport '../../../../store/state/sendBalances.js';\nimport '../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../../../index.js';\nimport '../../../../store/state/tokenBalances.js';\nimport '../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\nimport { useInternalDynamicContext } from '../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';\n\nconst isConnectorSessionKeyActive = (connector) => {\n    var _a;\n    if (!connector || !isSessionKeyCompatibleWalletConnector(connector))\n        return false;\n    return Boolean((_a = connector.sessionKeys) === null || _a === void 0 ? void 0 : _a.publicKey);\n};\n// Hook exposed to customers\n/**\n *\n * @returns {\n * createEmbeddedWallet, - creates Secure enclave embedded wallet according to the settings\n * createOrRestoreSession, - creates or restores a embedded wallet session\n * createPasskey, - creates a new passkey both for an existing wallet or a wallet to be created\n * getPasskeys, - gets all passkeys for the user\n * isLoadingEmbeddedWallet, - loading state of the embedded wallet\n * isSessionActive, - checks if the embedded wallet session is active\n * revealEmbeddedWalletKey - export the recovery phrase or private key of the embedded wallet\n * sendOneTimeCode, - sends a one-time code to the user so they can create a session or add a new passkey\n * userHasEmbeddedWallet, - checks if the user has an embedded wallet\n * }\n */\nconst useSecureEnclaveEmbeddedWallet = () => {\n    var _a, _b, _c, _d;\n    const { projectSettings, primaryWallet, user, environmentId, walletConnectorOptions, } = useInternalDynamicContext();\n    const { createTurnkeyWallet } = useTurnkey();\n    const { hasRecoveryEmail } = useIsTurnkeyWallet();\n    const { createRootElement } = useElementById();\n    const { isLoadingEmbeddedWallet, setIsLoadingEmbeddedWallet } = useWalletContext();\n    const { getEOAWallet } = useSmartWallets();\n    const wallet = (_a = (primaryWallet && getEOAWallet(primaryWallet))) !== null && _a !== void 0 ? _a : primaryWallet;\n    const userHasEmbeddedWallet = useCallback(() => hasEmbeddedWallet(user, 'turnkey'), [user]);\n    const getWalletVersion = useCallback(() => {\n        if (isSessionKeyCompatibleWalletConnector(wallet === null || wallet === void 0 ? void 0 : wallet.connector)) {\n            return EmbeddedWalletVersion.V2;\n        }\n        return EmbeddedWalletVersion.V1;\n    }, [wallet === null || wallet === void 0 ? void 0 : wallet.connector]);\n    const { shouldInitRecovery, initPasskeyRecoveryProcess } = usePasskeyRecovery();\n    /**\n     * Creates a new secure enclave embedded wallet according to the settings from the dashboard\n     * @param chain - optional chain parameter to create the wallet for\n     * @param options - optional parameter contained more settings for the wallet creation\n     * @returns Promise<Wallet | undefined>\n     */\n    const createEmbeddedWallet = useCallback((chains, options) => __awaiter(void 0, void 0, void 0, function* () {\n        var _e;\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        const userWalletsCredentials = getUserWalletsFromVerifiedCredentials(user);\n        const primaryChain = findPrimaryEmbeddedChain(projectSettings);\n        const embeddedWalletVerifiedCredential = findEmbeddedWalletFromVerifiedCredentials(user, chains !== null && chains !== void 0 ? chains : [primaryChain]);\n        const isManualMode = ((_e = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _e === void 0 ? void 0 : _e.automaticEmbeddedWalletCreation) === false;\n        // if user has a wallet and it's not embedded,\n        // throw error to follow another flow and set up the right wallet\n        // However, if the user is in manual mode continue.\n        if ((userWalletsCredentials === null || userWalletsCredentials === void 0 ? void 0 : userWalletsCredentials.length) &&\n            !embeddedWalletVerifiedCredential &&\n            !isManualMode) {\n            throw new EmbeddedWalletException('User already has a linked branded wallet, and manual mode creation is not enabled.');\n        }\n        validateTurnkeyProviderEnabled(projectSettings);\n        // TEMP: immediately disable loading state\n        setIsLoadingEmbeddedWallet(false);\n        return createTurnkeyWallet(chains, options);\n    }), [createTurnkeyWallet, projectSettings, setIsLoadingEmbeddedWallet, user]);\n    /**\n     * Creates a new secure enclave embedded wallet account\n     * @param chain - chain parameter to create the wallet for\n     * @returns Promise<UserProfile | undefined>\n     */\n    const createEmbeddedWalletAccount$1 = useCallback((_f) => __awaiter(void 0, [_f], void 0, function* ({ chain }) {\n        var _g, _h, _j;\n        if (!user) {\n            throw new Error(USER_NOT_LOGGED_IN);\n        }\n        validateTurnkeyProviderEnabled(projectSettings);\n        const primaryChain = findPrimaryEmbeddedChain(projectSettings);\n        const embeddedWalletVerifiedCredential = findEmbeddedWalletFromVerifiedCredentials(user, [primaryChain]);\n        const turnkeyWalletId = (_g = embeddedWalletVerifiedCredential === null || embeddedWalletVerifiedCredential === void 0 ? void 0 : embeddedWalletVerifiedCredential.walletProperties) === null || _g === void 0 ? void 0 : _g.turnkeyHDWalletId;\n        if (!turnkeyWalletId) {\n            throw new DynamicError('No HD wallet was found for this user to derive a wallet account. Use createEmbeddedWallet first', 'NoHdWalletFound');\n        }\n        const requestToStamp = yield getCreateEmbeddedWalletAccountRequest({\n            chain,\n            environmentId,\n        });\n        if (isSessionKeyCompatibleWalletConnector(wallet === null || wallet === void 0 ? void 0 : wallet.connector)) {\n            yield ((_h = wallet === null || wallet === void 0 ? void 0 : wallet.connector) === null || _h === void 0 ? void 0 : _h.createOrRestoreSession({\n                ignoreRestore: true,\n            }));\n        }\n        else if (yield shouldInitRecovery()) {\n            yield initPasskeyRecoveryProcess('email');\n        }\n        const signedRequest = yield ((_j = wallet === null || wallet === void 0 ? void 0 : wallet.connector) === null || _j === void 0 ? void 0 : _j.stampCreateWalletAccountRequest({\n            request: requestToStamp,\n        }));\n        yield createEmbeddedWalletAccount({\n            createEmbeddedWalletAccountRequest: signedRequest,\n            environmentId,\n        });\n        return refreshUserJwt({ environmentId });\n    }), [\n        environmentId,\n        wallet === null || wallet === void 0 ? void 0 : wallet.connector,\n        initPasskeyRecoveryProcess,\n        projectSettings,\n        shouldInitRecovery,\n        user,\n    ]);\n    /**\n     * Creates or restores a secure enclave embedded wallet session\n     * If it detects that the session is possible to be restored, it will restore it\n     * @param oneTimeCode - optional one-time code parameter. If not informed it tries to restore a session\n     * @returns Promise<'session_created' | 'session_restored'> - returns a string indicating the status of the session\n     */\n    const createOrRestoreSession = useCallback((options) => __awaiter(void 0, void 0, void 0, function* () {\n        var _k, _l, _m, _o, _p, _q;\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        const primaryConnector = primaryWallet === null || primaryWallet === void 0 ? void 0 : primaryWallet.connector;\n        if (primaryConnector &&\n            isSessionKeyCompatibleWalletConnector(primaryConnector)) {\n            return primaryConnector.createOrRestoreSession();\n        }\n        const eoaConnector = wallet === null || wallet === void 0 ? void 0 : wallet.connector;\n        if (eoaConnector && isSessionKeyCompatibleWalletConnector(eoaConnector)) {\n            return eoaConnector.createOrRestoreSession();\n        }\n        const turnkeyRecoveryHandler = getEmbeddedWalletAuthHandler(wallet === null || wallet === void 0 ? void 0 : wallet.connector);\n        if (turnkeyRecoveryHandler.isSessionActive()) {\n            return ACTIVE_SESSION;\n        }\n        const turnkeyAuthIframeContainerRef = createRootElement(iframeContainerId);\n        // try to restore session if possible\n        if (canRestoreEmbeddedWalletSession((_k = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _k === void 0 ? void 0 : _k.sessionKeyDuration)) {\n            try {\n                const sessionRestored = yield restoreEmbeddedWalletSession({\n                    iframeContainer: turnkeyAuthIframeContainerRef.current,\n                    iframeElementId,\n                    sessionExpiration: getEmbeddedWalletSessionExpiration((_m = (_l = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk) === null || _l === void 0 ? void 0 : _l.embeddedWallets) === null || _m === void 0 ? void 0 : _m.sessionKeyDuration),\n                    user,\n                    wallet: primaryWallet,\n                });\n                if (sessionRestored)\n                    return SESSION_RESTORED;\n            }\n            catch (err) {\n                logger.error('Failed to restore embedded wallet', err);\n            }\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.oneTimeCode)) {\n            throw new DynamicError('One-time code is required to create a session.', INVALID_REQUEST);\n        }\n        // tries to create a new session with the informed one-time code\n        // verify user has a turnkey wallet and email VC\n        if (!userHasEmbeddedWallet() || !hasRecoveryEmail) {\n            throw new DynamicError('User does not have a secure enclave wallet or a verified email', INVALID_WALLET_DATA);\n        }\n        const organizationId = (_q = (_p = (_o = user === null || user === void 0 ? void 0 : user.verifiedCredentials) === null || _o === void 0 ? void 0 : _o.find(({ walletName }) => walletName === null || walletName === void 0 ? void 0 : walletName.startsWith('turnkey'))) === null || _p === void 0 ? void 0 : _p.walletProperties) === null || _q === void 0 ? void 0 : _q.turnkeySubOrganizationId;\n        yield turnkeyRecoveryHandler.verifyRecoveryCode(options.oneTimeCode, organizationId);\n        const sessionSettings = {\n            createdAt: new Date().getTime(),\n            emailCode: options.oneTimeCode,\n            userId: turnkeyRecoveryHandler.recoveryUserId,\n        };\n        StorageService.setItem(EMBEDDED_WALLET_SESSION_SETTINGS, sessionSettings);\n        return SESSION_CREATED;\n    }), [\n        createRootElement,\n        user,\n        hasRecoveryEmail,\n        primaryWallet,\n        (_c = (_b = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk) === null || _b === void 0 ? void 0 : _b.embeddedWallets) === null || _c === void 0 ? void 0 : _c.sessionKeyDuration,\n        userHasEmbeddedWallet,\n        wallet === null || wallet === void 0 ? void 0 : wallet.connector,\n    ]);\n    /**\n     * Creates a new passkey both for an existing wallet or a wallet to be created\n     * @param options - optional parameter to inform a one-time code to create a session,\n     * @returns Promise<WebAuthnAttestation>\n     */\n    const createPasskey = useCallback((options) => __awaiter(void 0, void 0, void 0, function* () {\n        var _r, _s;\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        validateTurnkeyProviderEnabled(projectSettings);\n        const turnkeyWallet = findTurnkeyWalletByPrimaryChain(walletConnectorOptions, (_r = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _r === void 0 ? void 0 : _r.chainConfigurations, user.verifiedCredentials);\n        if (!(turnkeyWallet === null || turnkeyWallet === void 0 ? void 0 : turnkeyWallet.walletConnector)) {\n            throw new DynamicError('Wallet connector not found', INVALID_WALLET_DATA);\n        }\n        const walletConnector = turnkeyWallet.walletConnector;\n        walletConnector.setEmail(user === null || user === void 0 ? void 0 : user.email);\n        if (user && !(user === null || user === void 0 ? void 0 : user.email)) {\n            addPasskeyIdentifierToWalletConnector(walletConnector, user);\n        }\n        const hasEmailVC = getUserVerifiedCredentialType(user, JwtVerifiedCredentialFormatEnum.Email);\n        // return a new passkey if the user doesn't have a wallet yet or\n        // none of the requirements to add a passkey to an existing wallet are met\n        if (!('id' in turnkeyWallet) || !hasEmailVC) {\n            return walletConnector.getWebAuthnAttestation();\n        }\n        const turnkeySubOrganizationId = (_s = turnkeyWallet === null || turnkeyWallet === void 0 ? void 0 : turnkeyWallet.walletProperties) === null || _s === void 0 ? void 0 : _s.turnkeySubOrganizationId;\n        if (!turnkeySubOrganizationId) {\n            throw new DynamicError('No sub organization id found for the wallet', INVALID_WALLET_DATA);\n        }\n        const turnkAuthenticatorHandler = getEmbeddedWalletAuthHandler(walletConnector);\n        // add new passkey to the wallet through an active session\n        yield createOrRestoreSession(options);\n        const { attestation, challenge, displayName } = yield walletConnector.getWebAuthnAttestation();\n        yield turnkAuthenticatorHandler.addPasskeyAuthenticator({\n            attestation,\n            challenge,\n            turnkeySubOrganizationId,\n        });\n        const updatedUser = yield completePasskeyRecovery({\n            attestation: attestation,\n            challenge,\n            environmentId,\n            walletId: turnkeyWallet === null || turnkeyWallet === void 0 ? void 0 : turnkeyWallet.id,\n        });\n        if (!updatedUser) {\n            throw new DynamicError('Error completing passkey recovery');\n        }\n        return { attestation, challenge, displayName };\n    }), [\n        createOrRestoreSession,\n        environmentId,\n        projectSettings,\n        user,\n        walletConnectorOptions,\n    ]);\n    /**\n     * Gets all passkeys for the user\n     * @returns Promise<Passkey[]>\n     */\n    const getPasskeys = useCallback(() => __awaiter(void 0, void 0, void 0, function* () {\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        const data = yield getUserPasskeys({\n            environmentId: environmentId,\n        });\n        return data.passkeys;\n    }), [user, environmentId]);\n    const isEmailAuthSessionActive = useMemo(() => {\n        var _a;\n        const eoaConnector = wallet === null || wallet === void 0 ? void 0 : wallet.connector;\n        if (!eoaConnector || !('getAuthenticatorHandler' in eoaConnector))\n            return false;\n        return (_a = getEmbeddedWalletAuthHandler(eoaConnector)) === null || _a === void 0 ? void 0 : _a.isSessionActive();\n    }, [wallet === null || wallet === void 0 ? void 0 : wallet.connector]);\n    const isSessionKeySessionAAActive = useMemo(() => isConnectorSessionKeyActive(wallet === null || wallet === void 0 ? void 0 : wallet.connector), [wallet === null || wallet === void 0 ? void 0 : wallet.connector]);\n    const isSessionKeySessionActive = useMemo(() => isConnectorSessionKeyActive(primaryWallet === null || primaryWallet === void 0 ? void 0 : primaryWallet.connector), [primaryWallet === null || primaryWallet === void 0 ? void 0 : primaryWallet.connector]);\n    /**\n     * Checks if the embedded wallet session is active\n     */\n    const isSessionActive = isEmailAuthSessionActive ||\n        isSessionKeySessionActive ||\n        isSessionKeySessionAAActive;\n    /**\n     * export the recovery phrase or private key of the embedded wallet\n     * @param options - optional parameter object containing the type of key to reveal 'recoveryPhrase' | 'privateKey'\n     * and the html container id to render the iframe into\n     * @returns Promise<string> - returns the embedded wallet recovery phrase or private key\n     */\n    const revealEmbeddedWalletKey = useCallback((_t) => __awaiter(void 0, [_t], void 0, function* ({ type, htmlContainerId, }) {\n        var _u, _v, _w, _x, _y, _z;\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        yield cleanupExport({\n            wallet: wallet,\n        });\n        const turnkeyWallet = findTurnkeyWalletByPrimaryChain(walletConnectorOptions, (_u = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _u === void 0 ? void 0 : _u.chainConfigurations, user === null || user === void 0 ? void 0 : user.verifiedCredentials);\n        const turnkeyHDWalletId = (_v = turnkeyWallet === null || turnkeyWallet === void 0 ? void 0 : turnkeyWallet.walletProperties) === null || _v === void 0 ? void 0 : _v.turnkeyHDWalletId;\n        if (type === 'recoveryPhrase' && !turnkeyHDWalletId) {\n            type = 'privateKey';\n        }\n        const iframeContainerElement = createRootElement(revealIframeElementId, htmlContainerId || revealIframeContainerId);\n        // hide the iframe container until the export is done\n        // since it will show unrelated turnkey content\n        iframeContainerElement.current.style.display = 'none';\n        if (isSessionKeyCompatibleWalletConnector(wallet === null || wallet === void 0 ? void 0 : wallet.connector)) {\n            yield ((_w = wallet === null || wallet === void 0 ? void 0 : wallet.connector) === null || _w === void 0 ? void 0 : _w.createOrRestoreSession());\n        }\n        yield initExport({\n            iframeContainer: iframeContainerElement.current,\n            iframeElementId: revealIframeElementId,\n            wallet: wallet,\n        });\n        try {\n            yield exportCredential({\n                address: type === 'privateKey' ? wallet === null || wallet === void 0 ? void 0 : wallet.address : undefined,\n                environmentId,\n                user,\n                wallet: wallet,\n            });\n        }\n        catch (_0) {\n            if (isSessionKeyCompatibleWalletConnector(wallet === null || wallet === void 0 ? void 0 : wallet.connector) &&\n                ((_x = wallet === null || wallet === void 0 ? void 0 : wallet.connector) === null || _x === void 0 ? void 0 : _x.removeSessionKeys)) {\n                yield ((_y = wallet === null || wallet === void 0 ? void 0 : wallet.connector) === null || _y === void 0 ? void 0 : _y.removeSessionKeys());\n                yield ((_z = wallet === null || wallet === void 0 ? void 0 : wallet.connector) === null || _z === void 0 ? void 0 : _z.createOrRestoreSession({\n                    ignoreRestore: true,\n                }));\n            }\n            yield exportCredential({\n                address: type === 'privateKey' ? wallet === null || wallet === void 0 ? void 0 : wallet.address : undefined,\n                environmentId,\n                user,\n                wallet: wallet,\n            });\n        }\n        // show the iframe container after the export is done\n        // to show the exported content only\n        iframeContainerElement.current.style.display = 'block';\n        return true;\n    }), [\n        createRootElement,\n        environmentId,\n        wallet,\n        (_d = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _d === void 0 ? void 0 : _d.chainConfigurations,\n        user,\n        walletConnectorOptions,\n    ]);\n    /**\n     * Sends a one-time code to the user so they can create a session or add a new passkey\n     * @returns Promise<'code_sent'>\n     */\n    const sendOneTimeCode = useCallback(() => __awaiter(void 0, void 0, void 0, function* () {\n        var _1, _2;\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        const targetTurnkeyWallet = findTurnkeyWalletByPrimaryChain(walletConnectorOptions, (_1 = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _1 === void 0 ? void 0 : _1.chainConfigurations, user.verifiedCredentials);\n        if (!targetTurnkeyWallet || !('id' in targetTurnkeyWallet)) {\n            throw new DynamicError('User does not have a valid secure enclave wallet', INVALID_WALLET_DATA);\n        }\n        const turnkeyAuthenticatorHandler = getEmbeddedWalletAuthHandler(targetTurnkeyWallet === null || targetTurnkeyWallet === void 0 ? void 0 : targetTurnkeyWallet.walletConnector);\n        const targetTurnkeyWalletId = targetTurnkeyWallet.id;\n        const isSessionActive = turnkeyAuthenticatorHandler.isSessionActive();\n        if (isSessionActive) {\n            throw new DynamicError('Session is active. No need to create a new one', ACTIVE_SESSION);\n        }\n        const turnkeyAuthIframeContainerRef = createRootElement(iframeContainerId);\n        const publicKey = yield turnkeyAuthenticatorHandler.initRecovery('email', turnkeyAuthIframeContainerRef.current, iframeElementId, getEmbeddedWalletSessionExpiration((_2 = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _2 === void 0 ? void 0 : _2.sessionKeyDuration));\n        if (!publicKey) {\n            throw new DynamicError(ERROR_SENDING_CODE);\n        }\n        const response = yield initEmbeddedWalletSession({\n            authenticatorType: 'email',\n            environmentId,\n            publicKey,\n            walletId: targetTurnkeyWalletId,\n        });\n        turnkeyAuthenticatorHandler.recoveryUserId = response.turnkeyUserId;\n        return CODE_SENT;\n    }), [\n        createRootElement,\n        user,\n        environmentId,\n        projectSettings,\n        walletConnectorOptions,\n    ]);\n    return useMemo(() => ({\n        createEmbeddedWallet,\n        createEmbeddedWalletAccount: createEmbeddedWalletAccount$1,\n        createOrRestoreSession,\n        createPasskey,\n        getPasskeys,\n        getWalletVersion,\n        isLoadingEmbeddedWallet,\n        isSessionActive,\n        revealEmbeddedWalletKey,\n        sendOneTimeCode,\n        userHasEmbeddedWallet,\n    }), [\n        createEmbeddedWallet,\n        createEmbeddedWalletAccount$1,\n        createOrRestoreSession,\n        createPasskey,\n        getPasskeys,\n        getWalletVersion,\n        isLoadingEmbeddedWallet,\n        isSessionActive,\n        revealEmbeddedWalletKey,\n        sendOneTimeCode,\n        userHasEmbeddedWallet,\n    ]);\n};\n\nexport { isConnectorSessionKeyActive, useSecureEnclaveEmbeddedWallet };\n"],"names":[],"mappingsqGA,MAAM,8BAA8B,CAAC;IACjC,IAAI;IACJ,IAAI,CAAC,aAAa,CAAC,CAAA,GAAA,+RAAA,CAAA,wCAAqC,AAAD,EAAE,YACrD,OAAO;IACX,OAAO,QAAQ,CAAC,KAAK,UAAU,WAAW,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,SAAS;AACjG;AACA,4BAA4B;AAC5B;;;;;;;;;;;;;CAaC,GACD,MAAM,iCAAiC;IACnC,IAAI,IAAI,IAAI,IAAI;IAChB,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,sBAAsB,EAAG,GAAG,CAAA,GAAA,yPAAA,CAAA,4BAAyB,AAAD;IACjH,MAAM,EAAE,mBAAmB,EAAE,GAAG,CAAA,GAAA,+QAAA,CAAA,aAAU,AAAD;IACzC,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,wOAAA,CAAA,qBAAkB,AAAD;IAC9C,MAAM,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,gOAAA,CAAA,iBAAc,AAAD;IAC3C,MAAM,EAAE,uBAAuB,EAAE,0BAA0B,EAAE,GAAG,CAAA,GAAA,uNAAA,CAAA,mBAAgB,AAAD;IAC/E,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,kOAAA,CAAA,kBAAe,AAAD;IACvC,MAAM,SAAS,CAAC,KAAM,iBAAiB,aAAa,cAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;IACtG,MAAM,wBAAwB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;6EAAE,IAAM,CAAA,GAAA,0OAAA,CAAA,oBAAiB,AAAD,EAAE,MAAM;4EAAY;QAAC;KAAK;IAC1F,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wEAAE;YACjC,IAAI,CAAA,GAAA,+RAAA,CAAA,wCAAqC,AAAD,EAAE,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS,GAAG;gBACzG,OAAO,gQAAA,CAAA,wBAAqB,CAAC,EAAE;YACnC;YACA,OAAO,gQAAA,CAAA,wBAAqB,CAAC,EAAE;QACnC;uEAAG;QAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS;KAAC;IACrE,MAAM,EAAE,kBAAkB,EAAE,0BAA0B,EAAE,GAAG,CAAA,GAAA,wOAAA,CAAA,qBAAkB,AAAD;IAC5E;;;;;KAKC,GACD,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4EAAE,CAAC,QAAQ,UAAY,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK;oFAAG;oBAC5F,IAAI;oBACJ,IAAI,CAAC,MAAM;wBACP,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,0MAAA,CAAA,qBAAkB;oBAC7C;oBACA,MAAM,yBAAyB,CAAA,GAAA,kRAAA,CAAA,wCAAqC,AAAD,EAAE;oBACrE,MAAM,eAAe,CAAA,GAAA,+PAAA,CAAA,2BAAwB,AAAD,EAAE;oBAC9C,MAAM,mCAAmC,CAAA,GAAA,0RAAA,CAAA,4CAAyC,AAAD,EAAE,MAAM,WAAW,QAAQ,WAAW,KAAK,IAAI,SAAS;wBAAC;qBAAa;oBACvJ,MAAM,eAAe,CAAC,CAAC,KAAK,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,gBAAgB,GAAG,CAAC,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,+BAA+B,MAAM;oBAChN,8CAA8C;oBAC9C,iEAAiE;oBACjE,mDAAmD;oBACnD,IAAI,CAAC,2BAA2B,QAAQ,2BAA2B,KAAK,IAAI,KAAK,IAAI,uBAAuB,MAAM,KAC9G,CAAC,oCACD,CAAC,cAAc;wBACf,MAAM,IAAI,yLAAA,CAAA,0BAAuB,CAAC;oBACtC;oBACA,CAAA,GAAA,sQAAA,CAAA,iCAA8B,AAAD,EAAE;oBAC/B,0CAA0C;oBAC1C,2BAA2B;oBAC3B,OAAO,oBAAoB,QAAQ;gBACvC;;2EAAI;QAAC;QAAqB;QAAiB;QAA4B;KAAK;IAC5E;;;;KAIC,GACD,MAAM,gCAAgC,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;qFAAE,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;gBAAC;aAAG,EAAE,KAAK;6FAAG,UAAW,EAAE,KAAK,EAAE;oBAC1G,IAAI,IAAI,IAAI;oBACZ,IAAI,CAAC,MAAM;wBACP,MAAM,IAAI,MAAM,0MAAA,CAAA,qBAAkB;oBACtC;oBACA,CAAA,GAAA,sQAAA,CAAA,iCAA8B,AAAD,EAAE;oBAC/B,MAAM,eAAe,CAAA,GAAA,+PAAA,CAAA,2BAAwB,AAAD,EAAE;oBAC9C,MAAM,mCAAmC,CAAA,GAAA,0RAAA,CAAA,4CAAyC,AAAD,EAAE,MAAM;wBAAC;qBAAa;oBACvG,MAAM,kBAAkB,CAAC,KAAK,qCAAqC,QAAQ,qCAAqC,KAAK,IAAI,KAAK,IAAI,iCAAiC,gBAAgB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,iBAAiB;oBAC9O,IAAI,CAAC,iBAAiB;wBAClB,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,mGAAmG;oBAC9H;oBACA,MAAM,iBAAiB,MAAM,CAAA,GAAA,+NAAA,CAAA,wCAAqC,AAAD,EAAE;wBAC/D;wBACA;oBACJ;oBACA,IAAI,CAAA,GAAA,+RAAA,CAAA,wCAAqC,AAAD,EAAE,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS,GAAG;wBACzG,MAAO,CAAC,KAAK,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,sBAAsB,CAAC;4BAC1I,eAAe;wBACnB;oBACJ,OACK,IAAI,MAAM,sBAAsB;wBACjC,MAAM,2BAA2B;oBACrC;oBACA,MAAM,gBAAgB,MAAO,CAAC,KAAK,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,+BAA+B,CAAC;wBACzK,SAAS;oBACb;oBACA,MAAM,CAAA,GAAA,+NAAA,CAAA,8BAA2B,AAAD,EAAE;wBAC9B,oCAAoC;wBACpC;oBACJ;oBACA,OAAO,CAAA,GAAA,yMAAA,CAAA,iBAAc,AAAD,EAAE;wBAAE;oBAAc;gBAC1C;;oFAAI;QACA;QACA,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS;QAChE;QACA;QACA;QACA;KACH;IACD;;;;;KAKC,GACD,MAAM,yBAAyB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;8EAAE,CAAC,UAAY,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK;sFAAG;oBACtF,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;oBACxB,IAAI,CAAC,MAAM;wBACP,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,0MAAA,CAAA,qBAAkB;oBAC7C;oBACA,MAAM,mBAAmB,kBAAkB,QAAQ,kBAAkB,KAAK,IAAI,KAAK,IAAI,cAAc,SAAS;oBAC9G,IAAI,oBACA,CAAA,GAAA,+RAAA,CAAA,wCAAqC,AAAD,EAAE,mBAAmB;wBACzD,OAAO,iBAAiB,sBAAsB;oBAClD;oBACA,MAAM,eAAe,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS;oBACrF,IAAI,gBAAgB,CAAA,GAAA,+RAAA,CAAA,wCAAqC,AAAD,EAAE,eAAe;wBACrE,OAAO,aAAa,sBAAsB;oBAC9C;oBACA,MAAM,yBAAyB,CAAA,GAAA,gQAAA,CAAA,+BAA4B,AAAD,EAAE,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS;oBAC5H,IAAI,uBAAuB,eAAe,IAAI;wBAC1C,OAAO,0MAAA,CAAA,iBAAc;oBACzB;oBACA,MAAM,gCAAgC,kBAAkB,gQAAA,CAAA,oBAAiB;oBACzE,qCAAqC;oBACrC,IAAI,CAAA,GAAA,6OAAA,CAAA,kCAA+B,AAAD,EAAE,CAAC,KAAK,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,gBAAgB,GAAG,CAAC,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,kBAAkB,GAAG;wBAC1M,IAAI;4BACA,MAAM,kBAAkB,MAAM,CAAA,GAAA,6OAAA,CAAA,+BAA4B,AAAD,EAAE;gCACvD,iBAAiB,8BAA8B,OAAO;gCACtD,iBAAA,gQAAA,CAAA,kBAAe;gCACf,mBAAmB,CAAA,GAAA,4QAAA,CAAA,qCAAkC,AAAD,EAAE,CAAC,KAAK,CAAC,KAAK,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,gBAAgB,GAAG,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,kBAAkB;gCAC5Q;gCACA,QAAQ;4BACZ;4BACA,IAAI,iBACA,OAAO,0MAAA,CAAA,mBAAgB;wBAC/B,EACA,OAAO,KAAK;4BACR,8LAAA,CAAA,SAAM,CAAC,KAAK,CAAC,qCAAqC;wBACtD;oBACJ;oBACA,IAAI,CAAC,CAAC,YAAY,QAAQ,YAAY,KAAK,IAAI,KAAK,IAAI,QAAQ,WAAW,GAAG;wBAC1E,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,kDAAkD,0MAAA,CAAA,kBAAe;oBAC5F;oBACA,gEAAgE;oBAChE,gDAAgD;oBAChD,IAAI,CAAC,2BAA2B,CAAC,kBAAkB;wBAC/C,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,kEAAkE,0MAAA,CAAA,sBAAmB;oBAChH;oBACA,MAAM,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,mBAAmB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI;8FAAC,CAAC,EAAE,UAAU,EAAE,GAAK,eAAe,QAAQ,eAAe,KAAK,IAAI,KAAK,IAAI,WAAW,UAAU,CAAC;4FAAW,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,gBAAgB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,wBAAwB;oBACrY,MAAM,uBAAuB,kBAAkB,CAAC,QAAQ,WAAW,EAAE;oBACrE,MAAM,kBAAkB;wBACpB,WAAW,IAAI,OAAO,OAAO;wBAC7B,WAAW,QAAQ,WAAW;wBAC9B,QAAQ,uBAAuB,cAAc;oBACjD;oBACA,oMAAA,CAAA,iBAAc,CAAC,OAAO,CAAC,gNAAA,CAAA,mCAAgC,EAAE;oBACzD,OAAO,0MAAA,CAAA,kBAAe;gBAC1B;;6EAAI;QACA;QACA;QACA;QACA;QACA,CAAC,KAAK,CAAC,KAAK,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,gBAAgB,GAAG,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,kBAAkB;QACtN;QACA,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS;KACnE;IACD;;;;KAIC,GACD,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;qEAAE,CAAC,UAAY,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK;6EAAG;oBAC7E,IAAI,IAAI;oBACR,IAAI,CAAC,MAAM;wBACP,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,0MAAA,CAAA,qBAAkB;oBAC7C;oBACA,CAAA,GAAA,sQAAA,CAAA,iCAA8B,AAAD,EAAE;oBAC/B,MAAM,gBAAgB,CAAA,GAAA,0OAAA,CAAA,kCAA+B,AAAD,EAAE,wBAAwB,CAAC,KAAK,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,gBAAgB,GAAG,CAAC,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,mBAAmB,EAAE,KAAK,mBAAmB;oBAChR,IAAI,CAAC,CAAC,kBAAkB,QAAQ,kBAAkB,KAAK,IAAI,KAAK,IAAI,cAAc,eAAe,GAAG;wBAChG,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,8BAA8B,0MAAA,CAAA,sBAAmB;oBAC5E;oBACA,MAAM,kBAAkB,cAAc,eAAe;oBACrD,gBAAgB,QAAQ,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK;oBAC/E,IAAI,QAAQ,CAAC,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,GAAG;wBACnE,CAAA,GAAA,kRAAA,CAAA,wCAAqC,AAAD,EAAE,iBAAiB;oBAC3D;oBACA,MAAM,aAAa,CAAA,GAAA,kQAAA,CAAA,gCAA6B,AAAD,EAAE,MAAM,8MAAA,CAAA,kCAA+B,CAAC,KAAK;oBAC5F,gEAAgE;oBAChE,0EAA0E;oBAC1E,IAAI,CAAC,CAAC,QAAQ,aAAa,KAAK,CAAC,YAAY;wBACzC,OAAO,gBAAgB,sBAAsB;oBACjD;oBACA,MAAM,2BAA2B,CAAC,KAAK,kBAAkB,QAAQ,kBAAkB,KAAK,IAAI,KAAK,IAAI,cAAc,gBAAgB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,wBAAwB;oBACrM,IAAI,CAAC,0BAA0B;wBAC3B,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,+CAA+C,0MAAA,CAAA,sBAAmB;oBAC7F;oBACA,MAAM,4BAA4B,CAAA,GAAA,gQAAA,CAAA,+BAA4B,AAAD,EAAE;oBAC/D,0DAA0D;oBAC1D,MAAM,uBAAuB;oBAC7B,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,MAAM,gBAAgB,sBAAsB;oBAC5F,MAAM,0BAA0B,uBAAuB,CAAC;wBACpD;wBACA;wBACA;oBACJ;oBACA,MAAM,cAAc,MAAM,CAAA,GAAA,+NAAA,CAAA,0BAAuB,AAAD,EAAE;wBAC9C,aAAa;wBACb;wBACA;wBACA,UAAU,kBAAkB,QAAQ,kBAAkB,KAAK,IAAI,KAAK,IAAI,cAAc,EAAE;oBAC5F;oBACA,IAAI,CAAC,aAAa;wBACd,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC;oBAC3B;oBACA,OAAO;wBAAE;wBAAa;wBAAW;oBAAY;gBACjD;;oEAAI;QACA;QACA;QACA;QACA;QACA;KACH;IACD;;;KAGC,GACD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mEAAE,IAAM,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK;2EAAG;oBACpE,IAAI,CAAC,MAAM;wBACP,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,0MAAA,CAAA,qBAAkB;oBAC7C;oBACA,MAAM,OAAO,MAAM,CAAA,GAAA,+NAAA,CAAA,kBAAe,AAAD,EAAE;wBAC/B,eAAe;oBACnB;oBACA,OAAO,KAAK,QAAQ;gBACxB;;kEAAI;QAAC;QAAM;KAAc;IACzB,MAAM,2BAA2B,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;4EAAE;YACrC,IAAI;YACJ,MAAM,eAAe,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS;YACrF,IAAI,CAAC,gBAAgB,CAAC,CAAC,6BAA6B,YAAY,GAC5D,OAAO;YACX,OAAO,CAAC,KAAK,CAAA,GAAA,gQAAA,CAAA,+BAA4B,AAAD,EAAE,aAAa,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,eAAe;QACpH;2EAAG;QAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS;KAAC;IACrE,MAAM,8BAA8B,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;+EAAE,IAAM,4BAA4B,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS;8EAAG;QAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS;KAAC;IACnN,MAAM,4BAA4B,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;6EAAE,IAAM,4BAA4B,kBAAkB,QAAQ,kBAAkB,KAAK,IAAI,KAAK,IAAI,cAAc,SAAS;4EAAG;QAAC,kBAAkB,QAAQ,kBAAkB,KAAK,IAAI,KAAK,IAAI,cAAc,SAAS;KAAC;IAC3P;;KAEC,GACD,MAAM,kBAAkB,4BACpB,6BACA;IACJ;;;;;KAKC,GACD,MAAM,0BAA0B,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+EAAE,CAAC,KAAO,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG;gBAAC;aAAG,EAAE,KAAK;uFAAG,UAAW,EAAE,IAAI,EAAE,eAAe,EAAG;oBACrH,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;oBACxB,IAAI,CAAC,MAAM;wBACP,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,0MAAA,CAAA,qBAAkB;oBAC7C;oBACA,MAAM,CAAA,GAAA,gPAAA,CAAA,gBAAa,AAAD,EAAE;wBAChB,QAAQ;oBACZ;oBACA,MAAM,gBAAgB,CAAA,GAAA,0OAAA,CAAA,kCAA+B,AAAD,EAAE,wBAAwB,CAAC,KAAK,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,gBAAgB,GAAG,CAAC,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,mBAAmB,EAAE,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,mBAAmB;oBAC5T,MAAM,oBAAoB,CAAC,KAAK,kBAAkB,QAAQ,kBAAkB,KAAK,IAAI,KAAK,IAAI,cAAc,gBAAgB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,iBAAiB;oBACvL,IAAI,SAAS,oBAAoB,CAAC,mBAAmB;wBACjD,OAAO;oBACX;oBACA,MAAM,yBAAyB,kBAAkB,gQAAA,CAAA,wBAAqB,EAAE,mBAAmB,gQAAA,CAAA,0BAAuB;oBAClH,qDAAqD;oBACrD,+CAA+C;oBAC/C,uBAAuB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG;oBAC/C,IAAI,CAAA,GAAA,+RAAA,CAAA,wCAAqC,AAAD,EAAE,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS,GAAG;wBACzG,MAAO,CAAC,KAAK,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,sBAAsB;oBACjJ;oBACA,MAAM,CAAA,GAAA,gPAAA,CAAA,aAAU,AAAD,EAAE;wBACb,iBAAiB,uBAAuB,OAAO;wBAC/C,iBAAiB,gQAAA,CAAA,wBAAqB;wBACtC,QAAQ;oBACZ;oBACA,IAAI;wBACA,MAAM,CAAA,GAAA,gPAAA,CAAA,mBAAgB,AAAD,EAAE;4BACnB,SAAS,SAAS,eAAe,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,OAAO,GAAG;4BAClG;4BACA;4BACA,QAAQ;wBACZ;oBACJ,EACA,OAAO,IAAI;wBACP,IAAI,CAAA,GAAA,+RAAA,CAAA,wCAAqC,AAAD,EAAE,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS,KACtG,CAAC,CAAC,KAAK,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,iBAAiB,GAAG;4BACrI,MAAO,CAAC,KAAK,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,iBAAiB;4BACxI,MAAO,CAAC,KAAK,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,SAAS,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,sBAAsB,CAAC;gCAC1I,eAAe;4BACnB;wBACJ;wBACA,MAAM,CAAA,GAAA,gPAAA,CAAA,mBAAgB,AAAD,EAAE;4BACnB,SAAS,SAAS,eAAe,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,OAAO,GAAG;4BAClG;4BACA;4BACA,QAAQ;wBACZ;oBACJ;oBACA,qDAAqD;oBACrD,oCAAoC;oBACpC,uBAAuB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG;oBAC/C,OAAO;gBACX;;8EAAI;QACA;QACA;QACA;QACA,CAAC,KAAK,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,gBAAgB,GAAG,CAAC,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,mBAAmB;QACxK;QACA;KACH;IACD;;;KAGC,GACD,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uEAAE,IAAM,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK;+EAAG;oBACxE,IAAI,IAAI;oBACR,IAAI,CAAC,MAAM;wBACP,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,0MAAA,CAAA,qBAAkB;oBAC7C;oBACA,MAAM,sBAAsB,CAAA,GAAA,0OAAA,CAAA,kCAA+B,AAAD,EAAE,wBAAwB,CAAC,KAAK,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,gBAAgB,GAAG,CAAC,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,mBAAmB,EAAE,KAAK,mBAAmB;oBACtR,IAAI,CAAC,uBAAuB,CAAC,CAAC,QAAQ,mBAAmB,GAAG;wBACxD,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,oDAAoD,0MAAA,CAAA,sBAAmB;oBAClG;oBACA,MAAM,8BAA8B,CAAA,GAAA,gQAAA,CAAA,+BAA4B,AAAD,EAAE,wBAAwB,QAAQ,wBAAwB,KAAK,IAAI,KAAK,IAAI,oBAAoB,eAAe;oBAC9K,MAAM,wBAAwB,oBAAoB,EAAE;oBACpD,MAAM,kBAAkB,4BAA4B,eAAe;oBACnE,IAAI,iBAAiB;wBACjB,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,kDAAkD,0MAAA,CAAA,iBAAc;oBAC3F;oBACA,MAAM,gCAAgC,kBAAkB,gQAAA,CAAA,oBAAiB;oBACzE,MAAM,YAAY,MAAM,4BAA4B,YAAY,CAAC,SAAS,8BAA8B,OAAO,EAAE,gQAAA,CAAA,kBAAe,EAAE,CAAA,GAAA,4QAAA,CAAA,qCAAkC,AAAD,EAAE,CAAC,KAAK,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,gBAAgB,GAAG,CAAC,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,kBAAkB;oBAC5U,IAAI,CAAC,WAAW;wBACZ,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC,0MAAA,CAAA,qBAAkB;oBAC7C;oBACA,MAAM,WAAW,MAAM,CAAA,GAAA,+NAAA,CAAA,4BAAyB,AAAD,EAAE;wBAC7C,mBAAmB;wBACnB;wBACA;wBACA,UAAU;oBACd;oBACA,4BAA4B,cAAc,GAAG,SAAS,aAAa;oBACnE,OAAO,0MAAA,CAAA,YAAS;gBACpB;;sEAAI;QACA;QACA;QACA;QACA;QACA;KACH;IACD,OAAO,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;kDAAE,IAAM,CAAC;gBAClB;gBACA,6BAA6B;gBAC7B;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;YACJ,CAAC;iDAAG;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACH;AACL","ignoreList":[0]}},
    {"offset": {"line": 1078, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1084, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/useEmbeddedWallet/useMPCEmbeddedWallet/useCoinbaseMPC/useCoinbaseMPC.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../../../_virtual/_tslib.js';\nimport { useCallback } from 'react';\nimport { PasswordSourceTypeEnum, EmbeddedWalletChainEnum } from '@dynamic-labs/sdk-api-core';\nimport { isCoinbaseMpcWalletConnector } from '@dynamic-labs/wallet-connector-core';\nimport { DynamicError } from '@dynamic-labs/utils';\nimport { createUserProfileFromSdkUser } from '../../../../functions/createUserProfile/createUserProfile.js';\nimport { findEmbeddedWalletFromVerifiedCredentials } from '../../../../functions/findEmbeddedWalletFromVerifiedCredentials/findEmbeddedWalletFromVerifiedCredentials.js';\nimport '../../../../constants/values.js';\nimport { USER_NOT_LOGGED_IN } from '../../../../constants/errors.js';\nimport '@dynamic-labs/multi-wallet';\nimport { logger } from '../../../../../shared/logger.js';\nimport '../../../../constants/colors.js';\nimport 'react-international-phone';\nimport '@dynamic-labs/iconic';\nimport 'react/jsx-runtime';\nimport '../../../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport { generateRandomPassword } from '../../../../../shared/utils/functions/generateRandomPassword/generateRandomPassword.js';\nimport '../../../../../store/state/loadingAndLifecycle.js';\nimport '../../../../../shared/consts/index.js';\nimport { getVerifyArgs } from '../../../../functions/getVerifyArgs/getVerifyArgs.js';\nimport { findCoinbaseMPCWallet } from '../../../../functions/findCoinbaseMPCWallet/findCoinbaseMPCWallet.js';\nimport { getCoinbaseMPCConnectorFetchers } from '../../../../functions/getCoinbaseMPCConnectorFetchers/getCoinbaseMPCConnectorFetchers.js';\nimport '../../../../../store/state/projectSettings/projectSettings.js';\nimport '../../../../../context/DynamicContext/DynamicContext.js';\nimport { dynamicEvents } from '../../../../../events/dynamicEvents.js';\nimport '../../../../../context/CaptchaContext/CaptchaContext.js';\nimport { useErrorContext } from '../../../../../context/ErrorContext/ErrorContext.js';\nimport '../../../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport '../../../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../../../context/UserWalletsContext/UserWalletsContext.js';\nimport '../../../../../config/ApiEndpoint.js';\nimport '../../../../../store/state/user/user.js';\nimport '../../../../../locale/locale.js';\nimport { linkWallet } from '../../../../../data/api/wallets/wallets.js';\nimport { getSiweStatement } from '../../../../functions/getSiweStatement/getSiweStatement.js';\nimport '../../../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport '../../../../../context/WalletContext/WalletContext.js';\nimport '../../useSecureEnclaveEmbeddedWallet/constants.js';\nimport '../../../../../context/ThemeContext/ThemeContext.js';\nimport '../../../useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport '@dynamic-labs/types';\nimport '../../../../../context/LoadingContext/LoadingContext.js';\nimport 'yup';\nimport '../../../../../context/MockContext/MockContext.js';\nimport '../../../../../views/CollectUserDataView/useFields.js';\nimport '../../../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../../../../../store/state/environmentId.js';\nimport '../../../../../store/state/walletConnectorOptions.js';\nimport 'react-i18next';\nimport '../../../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../../../components/Alert/Alert.js';\nimport '../../../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../../../components/IconButton/IconButton.js';\nimport '../../../../../components/InlineWidget/InlineWidget.js';\nimport '../../../../../components/Input/Input.js';\nimport '../../../../../components/IsBrowser/IsBrowser.js';\nimport '../../../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../../../components/Popper/Popper/Popper.js';\nimport '../../../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../../../context/FooterAnimationContext/index.js';\nimport '../../../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../../../context/PasskeyContext/PasskeyContext.js';\nimport '../../../../../store/state/sendBalances.js';\nimport '../../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../../../../index.js';\nimport '../../../../../store/state/tokenBalances.js';\nimport '../../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\nimport { useInternalDynamicContext } from '../../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';\n\nconst DYNAMIC_PASSWORD_LENGTH = 20;\nconst useCoinbaseMPC = () => {\n    const { user, setPrimaryWalletId, walletConnectorOptions, environmentId, consumeNonce, displaySiweStatement, appName, siweStatement, handleLogOut, setShowAuthFlow, } = useInternalDynamicContext();\n    const { setError } = useErrorContext();\n    const returnExistingCoinbaseMPCWallet = useCallback((validatedUser, connector, embeddedWalletVerifiedCredential) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        connector.setVerifiedCredentials(validatedUser.verifiedCredentials);\n        setPrimaryWalletId(embeddedWalletVerifiedCredential.id);\n        const coinbaseMPCWallet = connector.createWallet({\n            address: (yield (connector === null || connector === void 0 ? void 0 : connector.getAddress())) || '',\n            chain: connector.connectedChain,\n            connector,\n            id: embeddedWalletVerifiedCredential.id,\n            isAuthenticated: true,\n            key: (_a = embeddedWalletVerifiedCredential.walletName) !== null && _a !== void 0 ? _a : connector.key,\n        });\n        return coinbaseMPCWallet;\n    }), [setPrimaryWalletId]);\n    const linkCoinbaseMPCWallet = useCallback((_b) => __awaiter(void 0, [_b], void 0, function* ({ connector, backupCode, password, source, }) {\n        const nonce = consumeNonce();\n        if (nonce === undefined)\n            throw new DynamicError('Missing nonce');\n        const address = yield connector.getAddress();\n        if (!address)\n            throw new DynamicError('Missing address');\n        const verifyArgs = yield getVerifyArgs({\n            displaySiweStatement,\n            environmentId,\n            nonce,\n            publicWalletAddress: address,\n            siweStatement: getSiweStatement({ appName, siweStatement }),\n            walletConnector: connector,\n            walletProvider: 'embeddedWallet',\n        });\n        const passcodeArgs = source === PasswordSourceTypeEnum.Dynamic\n            ? { password, passwordSource: source }\n            : {};\n        const response = yield linkWallet(environmentId, Object.assign(Object.assign(Object.assign({}, passcodeArgs), verifyArgs), { backup: backupCode }));\n        if (!response) {\n            throw new DynamicError('Unable to link wallet');\n        }\n        const updatedUserProfile = createUserProfileFromSdkUser(response.user);\n        const newSelectedCredentialWallet = updatedUserProfile.verifiedCredentials.find((cred) => cred.id === updatedUserProfile.lastVerifiedCredentialId &&\n            cred.format === 'blockchain');\n        if (!newSelectedCredentialWallet) {\n            throw new DynamicError('No primary wallet found');\n        }\n        setPrimaryWalletId(newSelectedCredentialWallet.id);\n        connector.setVerifiedCredentials(updatedUserProfile.verifiedCredentials);\n        return { newSelectedCredentialWallet, updatedUser: updatedUserProfile };\n    }), [\n        appName,\n        consumeNonce,\n        displaySiweStatement,\n        environmentId,\n        setPrimaryWalletId,\n        siweStatement,\n    ]);\n    const createNewCoinbaseMPCWallet = useCallback((connector, password) => __awaiter(void 0, void 0, void 0, function* () {\n        var _c;\n        const initialWalletPassword = password\n            ? password\n            : generateRandomPassword(DYNAMIC_PASSWORD_LENGTH);\n        const source = password\n            ? PasswordSourceTypeEnum.User\n            : PasswordSourceTypeEnum.Dynamic;\n        try {\n            const backupCode = yield connector.generateWallet(source, initialWalletPassword);\n            const { updatedUser, newSelectedCredentialWallet } = yield linkCoinbaseMPCWallet({\n                backupCode,\n                connector,\n                password: initialWalletPassword,\n                source,\n            });\n            const coinbaseMPCWallet = connector.createWallet({\n                address: (yield (connector === null || connector === void 0 ? void 0 : connector.getAddress())) || '',\n                chain: connector === null || connector === void 0 ? void 0 : connector.connectedChain,\n                connector,\n                id: newSelectedCredentialWallet.id,\n                isAuthenticated: true,\n                key: (_c = newSelectedCredentialWallet.walletName) !== null && _c !== void 0 ? _c : connector.key,\n            });\n            dynamicEvents.emit('embeddedWalletCreated', coinbaseMPCWallet, newSelectedCredentialWallet, updatedUser);\n            return coinbaseMPCWallet;\n        }\n        catch (error) {\n            logger.error(error);\n            if (error instanceof DynamicError &&\n                error.code === 'create_embedded_wallet_error') {\n                yield handleLogOut();\n                setError(error.message);\n            }\n        }\n        return undefined;\n    }), [linkCoinbaseMPCWallet, handleLogOut, setError]);\n    const createCoinbaseMPCWallet = useCallback((...args_1) => __awaiter(void 0, [...args_1], void 0, function* (chains = [EmbeddedWalletChainEnum.Evm], password) {\n        var _d;\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        const connector = (_d = findCoinbaseMPCWallet(walletConnectorOptions)) === null || _d === void 0 ? void 0 : _d.walletConnector;\n        if (!connector || !isCoinbaseMpcWalletConnector(connector)) {\n            const error = new DynamicError('CoinbaseWaaSWalletConnectors not found');\n            logger.error('Failed to create embedded wallet', error);\n            dynamicEvents.emit('embeddedWalletFailed', error);\n            setError(error.message);\n            throw error;\n        }\n        setShowAuthFlow(false);\n        const { fetchAuthToken } = getCoinbaseMPCConnectorFetchers({\n            environmentId,\n        });\n        if (fetchAuthToken) {\n            connector.setAuthTokenFetcher(fetchAuthToken);\n        }\n        const embeddedWalletVerifiedCredential = findEmbeddedWalletFromVerifiedCredentials(user, chains);\n        // if user already has embedded wallet, set it as primary wallet and return\n        if (embeddedWalletVerifiedCredential) {\n            return returnExistingCoinbaseMPCWallet(user, connector, embeddedWalletVerifiedCredential);\n        }\n        return createNewCoinbaseMPCWallet(connector, password);\n    }), [\n        user,\n        walletConnectorOptions,\n        setShowAuthFlow,\n        environmentId,\n        createNewCoinbaseMPCWallet,\n        setError,\n        returnExistingCoinbaseMPCWallet,\n    ]);\n    return {\n        createCoinbaseMPCWallet,\n    };\n};\n\nexport { useCoinbaseMPC };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1436, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/useEmbeddedWallet/useMPCEmbeddedWallet/useMPCEmbeddedWallet.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../../_virtual/_tslib.js';\nimport { useCallback } from 'react';\nimport { isCoinbaseMpcWalletConnector } from '@dynamic-labs/wallet-connector-core';\nimport { DynamicError, EmbeddedWalletException } from '@dynamic-labs/utils';\nimport '../../../../context/DynamicContext/DynamicContext.js';\nimport '@dynamic-labs/sdk-api-core';\nimport '../../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport 'react/jsx-runtime';\nimport '../../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport '../../../constants/colors.js';\nimport '../../../constants/values.js';\nimport '../../../../store/state/loadingAndLifecycle.js';\nimport '../../../../shared/consts/index.js';\nimport '../../../../events/dynamicEvents.js';\nimport '../../../../context/CaptchaContext/CaptchaContext.js';\nimport '../../../../context/ErrorContext/ErrorContext.js';\nimport { findEmbeddedWalletFromVerifiedCredentials } from '../../../functions/findEmbeddedWalletFromVerifiedCredentials/findEmbeddedWalletFromVerifiedCredentials.js';\nimport { USER_NOT_LOGGED_IN } from '../../../constants/errors.js';\nimport '@dynamic-labs/multi-wallet';\nimport 'react-international-phone';\nimport { getUserWalletsFromVerifiedCredentials } from '../../../functions/getUserWalletsFromVerifiedCredentials/getUserWalletsFromVerifiedCredentials.js';\nimport { findCoinbaseMPCWallet } from '../../../functions/findCoinbaseMPCWallet/findCoinbaseMPCWallet.js';\nimport { requiresPasswordForEmbeddedWallet } from '../../../functions/requiresPasswordForEmbeddedWallet/requiresPasswordForEmbeddedWallet.js';\nimport { requiresPasswordForEmbeddedWalletOnSignup } from '../../../functions/requiresPasswordForEmbeddedWalletOnSignup/requiresPasswordForEmbeddedWalletOnSignup.js';\nimport '../../../../config/ApiEndpoint.js';\nimport '../../../../store/state/user/user.js';\nimport '../../../../locale/locale.js';\nimport { hasEmbeddedWallet } from '../../../functions/hasEmbeddedWallet/hasEmbeddedWallet.js';\nimport '../../../../store/state/projectSettings/projectSettings.js';\nimport '../../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport '../../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../../context/UserWalletsContext/UserWalletsContext.js';\nimport '../../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport { useWalletContext } from '../../../../context/WalletContext/WalletContext.js';\nimport { validateMPCProviderEnabled } from '../../../validations/validateMPCProviderEnabled/validateMPCProviderEnabled.js';\nimport '../useSecureEnclaveEmbeddedWallet/constants.js';\nimport { useEmbeddedWalletPassword } from '../../useEmbeddedWalletPassword/useEmbeddedWalletPassword.js';\nimport { useCoinbaseMPC } from './useCoinbaseMPC/useCoinbaseMPC.js';\nimport '../../../../context/ThemeContext/ThemeContext.js';\nimport '../../useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport '@dynamic-labs/types';\nimport '../../../../context/LoadingContext/LoadingContext.js';\nimport 'yup';\nimport '../../../../context/MockContext/MockContext.js';\nimport '../../../../views/CollectUserDataView/useFields.js';\nimport '../../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../../../../store/state/environmentId.js';\nimport '../../../../store/state/walletConnectorOptions.js';\nimport 'react-i18next';\nimport '../../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../../components/Alert/Alert.js';\nimport '../../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../../components/IconButton/IconButton.js';\nimport '../../../../components/InlineWidget/InlineWidget.js';\nimport '../../../../components/Input/Input.js';\nimport '../../../../components/IsBrowser/IsBrowser.js';\nimport '../../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../../components/Popper/Popper/Popper.js';\nimport '../../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../../context/FooterAnimationContext/index.js';\nimport '../../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../../context/PasskeyContext/PasskeyContext.js';\nimport '../../../../store/state/sendBalances.js';\nimport '../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../../../index.js';\nimport '../../../../store/state/tokenBalances.js';\nimport '../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\nimport { useInternalDynamicContext } from '../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';\n\n// Hook exposed to customers and used internally to trigger embedded wallet creation\n/**\n * @returns {\n *  createEmbeddedWallet, - creates Dynamic or MPC embedded wallet according to the settings\n *  createPassword, - creates MPC embedded wallet password\n *  isLoadingEmbeddedWallet, - loading state of the embedded wallet\n *  userHasEmbeddedWallet, - checks if the user has an embedded wallet\n * }\n */\nconst useMPCEmbeddedWallet = () => {\n    const { projectSettings, walletConnectorOptions, user } = useInternalDynamicContext();\n    const { createPassword: internalCreatePassword } = useEmbeddedWalletPassword();\n    const { createCoinbaseMPCWallet } = useCoinbaseMPC();\n    const { isLoadingEmbeddedWallet, setIsLoadingEmbeddedWallet } = useWalletContext();\n    const userHasEmbeddedWallet = () => hasEmbeddedWallet(user, 'coinbase');\n    const createPassword = useCallback((showIntro) => __awaiter(void 0, void 0, void 0, function* () { return internalCreatePassword(showIntro); }), [internalCreatePassword]);\n    const prepareToCreateMPCWallet = useCallback((chains) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a, _b, _c;\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        const userWalletsCredentials = getUserWalletsFromVerifiedCredentials(user);\n        const embeddedWalletVerifiedCredential = findEmbeddedWalletFromVerifiedCredentials(user, chains);\n        const isManualMode = ((_a = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk.embeddedWallets) === null || _a === void 0 ? void 0 : _a.automaticEmbeddedWalletCreation) === false;\n        // if user has a wallet and it's not embedded,\n        // throw error to follow another flow and set up the right wallet\n        // However, if the user is in manual mode continue.\n        if ((userWalletsCredentials === null || userWalletsCredentials === void 0 ? void 0 : userWalletsCredentials.length) &&\n            !embeddedWalletVerifiedCredential &&\n            !isManualMode) {\n            throw new EmbeddedWalletException('User already has a linked branded wallet, and manual mode creation is not enabled.');\n        }\n        validateMPCProviderEnabled(projectSettings);\n        const connector = (_b = findCoinbaseMPCWallet(walletConnectorOptions)) === null || _b === void 0 ? void 0 : _b.walletConnector;\n        if (!isCoinbaseMpcWalletConnector(connector)) {\n            throw new Error('Coinbase MPC wallet connector not found');\n        }\n        // since we can dynamically change the settings from demov2, we need to set\n        // requires password prop here in case the connector has already been initialized with a different value\n        connector.setRequiredPassword((_c = requiresPasswordForEmbeddedWallet(projectSettings)) !== null && _c !== void 0 ? _c : false);\n    }), [user, projectSettings, walletConnectorOptions]);\n    const canCreateMPCWallet = useCallback((chains) => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            yield prepareToCreateMPCWallet(chains);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }), [prepareToCreateMPCWallet]);\n    const createEmbeddedWallet = useCallback((chains) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        yield prepareToCreateMPCWallet(chains);\n        setIsLoadingEmbeddedWallet(true);\n        let password;\n        const embeddedWalletVerifiedCredential = findEmbeddedWalletFromVerifiedCredentials(user, chains);\n        if (!embeddedWalletVerifiedCredential &&\n            requiresPasswordForEmbeddedWalletOnSignup(projectSettings)) {\n            password = yield internalCreatePassword(false, true);\n        }\n        const wallet = yield createCoinbaseMPCWallet(chains, password);\n        setIsLoadingEmbeddedWallet(false);\n        return wallet;\n    }), [\n        user,\n        createCoinbaseMPCWallet,\n        internalCreatePassword,\n        prepareToCreateMPCWallet,\n        projectSettings,\n        setIsLoadingEmbeddedWallet,\n    ]);\n    const revealEmbeddedWalletKey = () => __awaiter(void 0, void 0, void 0, function* () {\n        throw new DynamicError('Coinbase MPC wallet does not support headless reveal yet');\n    });\n    return {\n        canCreateMPCWallet,\n        createEmbeddedWallet,\n        createPassword,\n        isLoadingEmbeddedWallet,\n        revealEmbeddedWalletKey,\n        userHasEmbeddedWallet,\n    };\n};\n\nexport { useMPCEmbeddedWallet };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1725, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1731, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/useEmbeddedWallet/useEmbeddedWallet.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { useCallback } from 'react';\nimport { WalletProviderEnum } from '@dynamic-labs/sdk-api-core';\nimport { DynamicError, StorageService } from '@dynamic-labs/utils';\nimport '../../../context/DynamicContext/DynamicContext.js';\nimport '../../../shared/logger.js';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport { PRIMARY_WALLET_ID } from '../../constants/localStorage.js';\nimport '../../constants/colors.js';\nimport '../../constants/values.js';\nimport '../../../store/state/loadingAndLifecycle.js';\nimport '../../../shared/consts/index.js';\nimport '../../../events/dynamicEvents.js';\nimport '../../../context/CaptchaContext/CaptchaContext.js';\nimport '../../../context/ErrorContext/ErrorContext.js';\nimport { findEmbeddedWalletFromVerifiedCredentials } from '../../functions/findEmbeddedWalletFromVerifiedCredentials/findEmbeddedWalletFromVerifiedCredentials.js';\nimport { USER_NOT_LOGGED_IN } from '../../constants/errors.js';\nimport '@dynamic-labs/multi-wallet';\nimport 'react-international-phone';\nimport { isTurnkeyEnabled } from '../../functions/isTurnkeyEnabled/isTurnkeyEnabled.js';\nimport { isCoinbaseWaasEnabled } from '../../functions/isCoinbaseWaasEnabled/isCoinbaseWaasEnabled.js';\nimport '../../../config/ApiEndpoint.js';\nimport '../../../store/state/user/user.js';\nimport '../../../locale/locale.js';\nimport { hasEmbeddedWallet } from '../../functions/hasEmbeddedWallet/hasEmbeddedWallet.js';\nimport '../../../store/state/projectSettings/projectSettings.js';\nimport '../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport '../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../context/UserWalletsContext/UserWalletsContext.js';\nimport '../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport { findPrimaryEmbeddedChain } from '../../../views/Passkey/utils/findPrimaryEmbeddedChain/findPrimaryEmbeddedChain.js';\nimport { useWalletContext } from '../../../context/WalletContext/WalletContext.js';\nimport { useIsTurnkeyWallet } from '../useIsTurnkeyWallet/useIsTurnkeyWallet.js';\nimport { useSecureEnclaveEmbeddedWallet } from './useSecureEnclaveEmbeddedWallet/useSecureEnclaveEmbeddedWallet.js';\nimport './useSecureEnclaveEmbeddedWallet/constants.js';\nimport { useMPCEmbeddedWallet } from './useMPCEmbeddedWallet/useMPCEmbeddedWallet.js';\nimport '../../../context/ThemeContext/ThemeContext.js';\nimport '../useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport '@dynamic-labs/types';\nimport '../../../context/LoadingContext/LoadingContext.js';\nimport 'yup';\nimport '../../../context/MockContext/MockContext.js';\nimport '../../../views/CollectUserDataView/useFields.js';\nimport '../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../../../store/state/environmentId.js';\nimport '../../../store/state/walletConnectorOptions.js';\nimport 'react-i18next';\nimport '../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../components/Alert/Alert.js';\nimport '../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../components/IconButton/IconButton.js';\nimport '../../../components/InlineWidget/InlineWidget.js';\nimport '../../../components/Input/Input.js';\nimport '../../../components/IsBrowser/IsBrowser.js';\nimport '../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../components/Popper/Popper/Popper.js';\nimport '../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../context/FooterAnimationContext/index.js';\nimport '../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../context/PasskeyContext/PasskeyContext.js';\nimport '../../../store/state/sendBalances.js';\nimport '../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../../index.js';\nimport '../../../store/state/tokenBalances.js';\nimport '../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\nimport { useInternalDynamicContext } from '../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';\n\n// Hook exposed to customers and used internally to trigger embedded wallet creation\n/**\n * @returns {\n *  createEmbeddedWallet, - creates Dynamic embedded wallet according to the settings\n *  createOrRestoreSession, - creates or restores session for the embedded wallet\n *  createPasskey, - creates passkey for the embedded wallet\n *  createPassword, - creates MPC embedded wallet password\n *  getPasskeys, - gets passkeys for the embedded wallet\n *  isLoadingEmbeddedWallet, - loading state of the embedded wallet\n *  isSessionActive, - checks if the session is active for the embedded wallet\n *  revealWalletKey, - reveals the private key or recovery phrase for the embedded wallet\n *  sendOneTimeCode, - sends one time code for the embedded wallet\n *  userHasEmbeddedWallet, - checks if the user has an embedded wallet\n * }\n */\nconst useEmbeddedWallet = () => {\n    const { user, projectSettings, setPrimaryWalletId } = useInternalDynamicContext();\n    const { isTurnkeyWallet } = useIsTurnkeyWallet();\n    const { createEmbeddedWallet: createMPCWallet, canCreateMPCWallet, createPassword, revealEmbeddedWalletKey: revealCoinbaseMPCEmbeddedWalletKey, } = useMPCEmbeddedWallet();\n    const { createEmbeddedWallet: createTurnkeyEmbeddedWallet, createEmbeddedWalletAccount, createOrRestoreSession, createPasskey, revealEmbeddedWalletKey: revealTurnkeyEmbeddedWalletKey, getPasskeys, isSessionActive, sendOneTimeCode, getWalletVersion: getTurnkeyWalletVersion, } = useSecureEnclaveEmbeddedWallet();\n    const { isLoadingEmbeddedWallet } = useWalletContext();\n    const userHasEmbeddedWallet = useCallback(() => hasEmbeddedWallet(user), [user]);\n    const getWalletVersion = useCallback(() => {\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        if (!userHasEmbeddedWallet()) {\n            throw new DynamicError('Embedded wallet not found');\n        }\n        if (isTurnkeyWallet) {\n            return getTurnkeyWalletVersion();\n        }\n        return undefined;\n    }, [getTurnkeyWalletVersion, isTurnkeyWallet, user, userHasEmbeddedWallet]);\n    /**\n     * Creates Dynamic embedded wallet according to the settings\n     * @param chains - array of chains to create the wallet for\n     * @param options - options for the wallet creation\n     * @returns Promise<Wallet | undefined> - created wallet object\n     */\n    const createEmbeddedWallet = useCallback((chains, options) => __awaiter(void 0, void 0, void 0, function* () {\n        if (yield canCreateMPCWallet(chains)) {\n            const wallet = yield createMPCWallet(chains);\n            return wallet;\n        }\n        const wallet = yield createTurnkeyEmbeddedWallet(chains, options);\n        return wallet;\n    }), [canCreateMPCWallet, createMPCWallet, createTurnkeyEmbeddedWallet]);\n    /**\n     * Reveals the private key or recovery phrase for the embedded wallet\n     * @param options - options for revealing the wallet key\n     * @returns Promise<boolean> - true if the key was revealed successfully\n     */\n    const revealWalletKey = (options) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!user) {\n            throw new DynamicError(USER_NOT_LOGGED_IN);\n        }\n        if (!userHasEmbeddedWallet()) {\n            throw new DynamicError('Embedded wallet not found');\n        }\n        if (isTurnkeyWallet) {\n            return revealTurnkeyEmbeddedWalletKey(options);\n        }\n        return revealCoinbaseMPCEmbeddedWalletKey();\n    });\n    const shouldAutoCreateEmbeddedWallet = useCallback((verifiedUser) => {\n        var _a, _b, _c, _d, _e;\n        const hasEmbeddedWalletProviderEnabled = isTurnkeyEnabled(projectSettings) ||\n            isCoinbaseWaasEnabled(projectSettings);\n        const hasPrimaryWallet = StorageService.getItem(PRIMARY_WALLET_ID);\n        if (!hasEmbeddedWalletProviderEnabled || hasPrimaryWallet) {\n            return false;\n        }\n        // Turnkey specific rules\n        if (verifiedUser) {\n            const primaryEmbeddedChain = findPrimaryEmbeddedChain(projectSettings);\n            const embeddedWalletVerifiedCredentialId = (_a = findEmbeddedWalletFromVerifiedCredentials(verifiedUser, [\n                primaryEmbeddedChain,\n            ])) === null || _a === void 0 ? void 0 : _a.id;\n            const AAWalletCredentialId = (_c = (_b = verifiedUser.verifiedCredentials) === null || _b === void 0 ? void 0 : _b.find((vc) => vc.walletProvider === WalletProviderEnum.SmartContractWallet)) === null || _c === void 0 ? void 0 : _c.id;\n            const targetPrimaryWalletId = AAWalletCredentialId\n                ? AAWalletCredentialId\n                : embeddedWalletVerifiedCredentialId;\n            if (targetPrimaryWalletId) {\n                setPrimaryWalletId(targetPrimaryWalletId);\n                return false;\n            }\n        }\n        if (\n        // if coinbase is enabled it should still call createWallet, despite the turnkey rules\n        !isCoinbaseWaasEnabled(projectSettings) &&\n            isTurnkeyEnabled(projectSettings) &&\n            !((_e = (_d = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.sdk) === null || _d === void 0 ? void 0 : _d.embeddedWallets) === null || _e === void 0 ? void 0 : _e.automaticEmbeddedWalletCreation)) {\n            return false;\n        }\n        return true;\n    }, [projectSettings, setPrimaryWalletId]);\n    return {\n        createEmbeddedWallet,\n        createEmbeddedWalletAccount,\n        createOrRestoreSession,\n        createPasskey,\n        createPassword,\n        getPasskeys,\n        getWalletVersion,\n        isLoadingEmbeddedWallet,\n        isSessionActive,\n        revealWalletKey,\n        sendOneTimeCode,\n        shouldAutoCreateEmbeddedWallet,\n        userHasEmbeddedWallet,\n    };\n};\n\nexport { useEmbeddedWallet };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2050, "column": 0}, "map": {"version":3,"sources":["file:///home/sohail/mystuff/10-Work/projects/erc20saas/frontend/node_modules/%40dynamic-labs/sdk-react-core/src/lib/utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/utils.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../../_virtual/_tslib.js';\n\n// Converts an ArrayBuffer to a hex-encoded string\nconst buf2hex = (buffer) => [...new Uint8Array(buffer)]\n    .map((x) => x.toString(16).padStart(2, '0'))\n    .join('');\n// Takes a base64url-encoded string (e.g. \"nMueRPiAm51YXEjRtka8S_8Ura3HaqbmqDqMJCZmvkM\")\n// and return the corresponding bytes, as an array buffer.\nconst base64urlDecode = (s) => {\n    // Go from base64url encoding to base64 encoding\n    s = (s === null || s === void 0 ? void 0 : s.replace(/-/g, '+').replace(/_/g, '/')) || '';\n    // use `atob` to decode base64\n    return Uint8Array.from(atob(s), (c) => c.charCodeAt(0));\n};\n// Accepts a public key array buffer, and returns a buffer with the compressed version of the public key\nconst compressRawPublicKey = (rawPublicKey) => {\n    const rawPublicKeyBytes = new Uint8Array(rawPublicKey);\n    const len = rawPublicKeyBytes.byteLength;\n    // Drop the y coordinate\n    const compressedBytes = rawPublicKeyBytes.slice(0, (1 + len) >>> 1);\n    // Encode the parity of `y` in first bit\n    compressedBytes[0] = 0x2 | (rawPublicKeyBytes[len - 1] & 0x01);\n    return compressedBytes.buffer;\n};\nconst p256Keygen = () => __awaiter(void 0, void 0, void 0, function* () {\n    // Create a new P-256 keypair\n    const p256Keypair = yield crypto.subtle.generateKey({\n        name: 'ECDSA',\n        namedCurve: 'P-256',\n    }, true, ['sign', 'verify']);\n    // Export the raw public key. By default this will export in uncompressed format\n    const rawPublicKey = yield crypto.subtle.exportKey('raw', p256Keypair.publicKey);\n    // We need to export with JWK format because exporting EC private keys with \"raw\" isn't supported\n    const privateKeyJwk = yield crypto.subtle.exportKey('jwk', p256Keypair.privateKey);\n    // Optional: compress the public key! But you don't have to\n    const compressedPublicKeyBuffer = compressRawPublicKey(rawPublicKey);\n    const privateKeyBuffer = base64urlDecode(privateKeyJwk.d);\n    return {\n        private: buf2hex(privateKeyBuffer),\n        public: buf2hex(compressedPublicKeyBuffer),\n        public_uncompressed: buf2hex(rawPublicKey),\n    };\n});\n\nexport { base64urlDecode, buf2hex, compressRawPublicKey, p256Keygen };\n"],"names":[],"mappings":";;;;;;AACA;AADA;;AAGA,kDAAkD;AAClD,MAAM,UAAU,CAAC,SAAW;WAAI,IAAI,WAAW;KAAQ,CAClD,GAAG,CAAC,CAAC,IAAM,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,MACtC,IAAI,CAAC;AACV,wFAAwF;AACxF,0DAA0D;AAC1D,MAAM,kBAAkB,CAAC;IACrB,gDAAgD;IAChD,IAAI,CAAC,MAAM,QAAQ,MAAM,KAAK,IAAI,KAAK,IAAI,EAAE,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,IAAI,KAAK;IACvF,8BAA8B;IAC9B,OAAO,WAAW,IAAI,CAAC,KAAK,IAAI,CAAC,IAAM,EAAE,UAAU,CAAC;AACxD;AACA,wGAAwG;AACxG,MAAM,uBAAuB,CAAC;IAC1B,MAAM,oBAAoB,IAAI,WAAW;IACzC,MAAM,MAAM,kBAAkB,UAAU;IACxC,wBAAwB;IACxB,MAAM,kBAAkB,kBAAkB,KAAK,CAAC,GAAG,AAAC,IAAI,QAAS;IACjE,wCAAwC;IACxC,eAAe,CAAC,EAAE,GAAG,MAAO,iBAAiB,CAAC,MAAM,EAAE,GAAG;IACzD,OAAO,gBAAgB,MAAM;AACjC;AACA,MAAM,aAAa,IAAM,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;QACvD,6BAA6B;QAC7B,MAAM,cAAc,MAAM,OAAO,MAAM,CAAC,WAAW,CAAC;YAChD,MAAM;YACN,YAAY;QAChB,GAAG,MAAM;YAAC;YAAQ;SAAS;QAC3B,gFAAgF;QAChF,MAAM,eAAe,MAAM,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,YAAY,SAAS;QAC/E,iGAAiG;QACjG,MAAM,gBAAgB,MAAM,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,YAAY,UAAU;QACjF,2DAA2D;QAC3D,MAAM,4BAA4B,qBAAqB;QACvD,MAAM,mBAAmB,gBAAgB,cAAc,CAAC;QACxD,OAAO;YACH,SAAS,QAAQ;YACjB,QAAQ,QAAQ;YAChB,qBAAqB,QAAQ;QACjC;IACJ","ignoreList":[0]}},
    {"offset": {"line": 2104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}